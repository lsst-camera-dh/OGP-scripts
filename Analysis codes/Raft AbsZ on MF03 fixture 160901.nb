(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    261527,       8104]
NotebookOptionsPosition[    228537,       7190]
NotebookOutlinePosition[    230362,       7248]
CellTagsIndexPosition[    229953,       7235]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[""], "Input"],

Cell["Raft on MF03 fixture AbsZ 160824.nb", "Title"],

Cell["\<\
SurfCalc for Raft surface AbsZ relative to  3-ball datum plane.\
\>", "Subtitle"],

Cell["PZ Takacs", "Subsubtitle"],

Cell["SurfCalc OGP_MF03 3Balls cal cluster.nb", "Subtitle"],

Cell["Extracted from SurfAnal10b", "Subtitle"],

Cell["\<\
2016.08.24 - Fixed up datain to only take Contours points.
2016.08.24 - Added RAFT pts trim iteration section.
2016.04.14 - Set up for MF03 fixture measurements. Use MCS stream output from \
OGP to separate into 2 Z-hgt regions - ball and raft pts. Then separate ball \
region into 3 balls.
2016.03.22 - Added Cluster function to find point cloud regions.
2016.02.29 - Set up for 3 balls with no REF. Added resids point plot for each \
ball.
2015.02.25 - Fixed cDATUM eqn output to file.
2015.02.24 - Renamed from \[OpenCurlyDoubleQuote]SurfCalc OGP_MF03 \
commission.nb\[CloseCurlyDoubleQuote] to reflect the purpose of the code.

2015.02.13 - Added section to input datum plane cal file equations for \
several runs and plot them versus the mean datum plane.

2014.12.12 - from SurfCalc OGP_CCDonMF01 ver4.nb. Customized for \
commissioning the MF03 holddown fixture. Added ball sphere fitting section.
\
\>", "Subsubtitle"],

Cell["\<\
Requires that the fixture be mounted on the OGP machine with the 2 LL and LR \
balls to the right edge and the single UC ball to the left. Uses the MCS, so \
the LL and LR balls are along the Y-axis. This differs from the hole \
measurements, where the datum origin is rotated and shifted to align with the \
LL and LR holes, making the PCS X-axis align with the MCS Y-axis.
\
\>", "Text"],

Cell[CellGroupData[{

Cell["\<\
0. Start here. Resets the system to pristine state each time, deleting  \
In/Out numbers and output cells. Do this first, then execute 0.1 and rest of \
nb.
NOTE: This section leaves you at the end of the nb. You need to scroll back \
up here to continue.\
\>", "Section",
 CellTags->"Full restart here"],

Cell[BoxData[
 RowBox[{"FrontEndExecute", "[", 
  RowBox[{"FrontEndToken", "[", "\"\<DeleteGeneratedCells\>\"", "]"}], 
  "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "  ", 
   RowBox[{
    RowBox[{
    "**", "**", "**", "**", "**", "**", "CleanNotebookInOut", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**"}], "*"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", "CleanNotebookInOut", "]"}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"CleanNotebookInOut", "::", "usage"}], "=", 
     "\"\<CleanNotebookInOut[] removes\nthe In and Out CellLabels from the \
notebook in which it is\nevaluated and resets the line number to 1.  If the\n\
RemoveOutput option is set to True then all Output cells in\nthe notebook are \
deleted as well.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "CleanNotebookInOut", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{"RemoveOutput", "\[Rule]", "False"}], "}"}]}], 
    ";"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"CleanNotebookInOut", "[", 
    RowBox[{"opts___", "?", "OptionQ"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nb", ",", "theNotebook", ",", "revisedNotebook", ",", "removeOutput"}],
       "}"}], ",", 
     RowBox[{
      RowBox[{"removeOutput", "=", 
       RowBox[{"RemoveOutput", "/.", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"opts", ",", 
           RowBox[{"Options", "[", "CleanNotebookInOut", "]"}]}], "}"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"$Line", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"nb", "=", 
       RowBox[{"SelectedNotebook", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"theNotebook", "=", 
       RowBox[{"NotebookGet", "[", "nb", "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"revisedNotebook", "=", 
       RowBox[{"theNotebook", "/.", 
        RowBox[{
         RowBox[{"Cell", "[", 
          RowBox[{"x___", ",", 
           RowBox[{"CellLabel", "\[Rule]", "_"}], ",", "y___"}], "]"}], 
         "\[RuleDelayed]", 
         RowBox[{"Cell", "[", 
          RowBox[{"x", ",", "y"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"NotebookPut", "[", 
       RowBox[{"revisedNotebook", ",", "nb"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"removeOutput", ",", 
        RowBox[{"FrontEndExecute", "[", 
         RowBox[{"FrontEndToken", "[", "\"\<DeleteGeneratedCells\>\"", "]"}], 
         "]"}]}], "]"}], ";"}]}], "]"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"CleanNotebookInOut", "[", 
  RowBox[{"RemoveOutput", "\[Rule]", "True"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"?", "CleanNotebookInOut"}]], "Input"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["0.1. Initialize", "Section",
 $CellContext`InitializationGroup -> True],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Button", ",", 
    RowBox[{"Background", "\[Rule]", "LightOrange"}]}], "]"}], ";"}]], "Input"],

Cell["\<\
Data and time of last saved modification. This is an Initialization cell that \
executes automatically whenever the nb is opened.\
\>", "Text",
 CellChangeTimes->{{3.446131848655753*^9, 3.446131858917453*^9}, {
  3.446137264759386*^9, 3.446137266332767*^9}, {3.446137346018297*^9, 
  3.44613737617555*^9}}],

Cell[BoxData[
 RowBox[{"nb", "=", 
  RowBox[{"EvaluationNotebook", "[", "]"}]}]], "Input",
 CellAutoOverwrite->False,
 $CellContext`InitializationGroup -> True],

Cell[BoxData[
 RowBox[{"DateString", "[", 
  RowBox[{
   RowBox[{"\"\<FileModificationTime\>\"", "/.", 
    RowBox[{"NotebookInformation", "[", "]"}]}], ",", 
   RowBox[{"TimeZone", "->", "0"}]}], "]"}]], "Input",
 InitializationCell->True,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.445874966493102*^9, 3.4458749784889708`*^9}, {
   3.445875037268758*^9, 3.445875100082447*^9}, {3.4458751485534067`*^9, 
   3.4458751511117163`*^9}, {3.445875216915934*^9, 3.445875242570963*^9}, {
   3.445875378437434*^9, 3.445875401114954*^9}, 3.445875458892804*^9, {
   3.44587557913221*^9, 3.44587559106078*^9}, {3.445875627487088*^9, 
   3.4458756403413153`*^9}},
 $CellContext`InitializationGroup -> True],

Cell[BoxData[
 RowBox[{"hms$", ":=", 
  RowBox[{"DateString", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Hour\>\"", ",", "\"\<Minute\>\"", ",", "\"\<Second\>\""}], 
    "}"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Off", "[", 
  RowBox[{"General", "::", "\"\<spell1\>\""}], "]"}]], "Input",
 CellAutoOverwrite->False,
 $CellContext`InitializationGroup -> True],

Cell[BoxData[
 RowBox[{"<<", "ComputationalGeometry`"}]], "Input",
 $CellContext`InitializationGroup -> True],

Cell[BoxData["$SystemID"], "Input",
 CellChangeTimes->{{3.4160021152075243`*^9, 3.416002130753045*^9}},
 $CellContext`InitializationGroup -> True],

Cell[BoxData["$OperatingSystem"], "Input",
 CellChangeTimes->{{3.416002115207933*^9, 3.416002130753488*^9}},
 $CellContext`InitializationGroup -> True],

Cell[BoxData[
 RowBox[{
  RowBox[{"TS", "[", "x_", "]"}], ":=", 
  RowBox[{"ToString", "[", "x", "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell["\<\
Conversion factors to meters for numbers in the indicated units:\
\>", "Subsubsection",
 $CellContext`InitializationGroup -> True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mm", "=", 
   RowBox[{"10.", "^", 
    RowBox[{"-", "3"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"micron", "=", 
   RowBox[{"10.", "^", 
    RowBox[{"-", "6"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Micro]m", "=", 
   RowBox[{"10.", "^", 
    RowBox[{"-", "6"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nm", "=", 
   RowBox[{"10.", "^", 
    RowBox[{"-", "9"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Angstroms", "=", 
   RowBox[{"10.", "^", 
    RowBox[{"-", "10"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"micronsToAngstroms", "=", 
   RowBox[{"10", "^", "4"}]}], ";"}]}], "Input",
 CellAutoOverwrite->False,
 $CellContext`InitializationGroup -> True]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["0.2. Enter full file path here to set working directory:", "Section"],

Cell[BoxData[
 RowBox[{"filepathfull", " "}]], "Input",
 CellAutoOverwrite->False],

Cell[BoxData[
 RowBox[{"filepathfull", "=", 
  RowBox[{"Input", "[", 
   RowBox[{
   "\"\<Do Insert->FilePath and navigate to desired data file and select to \
enter here.\>\"", ",", "filepathfull"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"DirectoryName", "[", "filepathfull", "]"}], "]"}]], "Input"],

Cell["\<\
Use the filename form appropriate for the computer platform, either MacOSX or \
Windows\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"manualcalcFlag", "=", "True"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "to", " ", "stop", " ", "automated", " ", "analysis", " ", "with", " ", 
    "default", " ", "parameters"}], "*)"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"manualcalcFlag", "=", "False"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"set", " ", "for", " ", "automated", " ", "analysis"}], 
   "*)"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"$OperatingSystem", "==", "\"\<Windows\>\""}], ",", 
    RowBox[{"sep$", "=", "\"\<\\\\\>\""}], ",", 
    RowBox[{"sep$", "=", "\"\</\>\""}]}], "]"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "Next", ",", "CellGroup"}], "]"}]], "Input",
 CellAutoOverwrite->False]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
3. Read in OGP  txt format. Contours. This is treated as FREEFORM data, i.e. \
no set nrows or ncols.\
\>", "Section"],

Cell["\<\
Data is in the form of a big list of triplets in units of mm. The X,Y \
coordinate is included with the z-value. Note that this is NOT a rectangular \
data array, so can't use the array plot functions unless the data is padded \
to make a grid, which is not possible with OGP freefom data.\
\>", "Text"],

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"DirectoryName", "[", "filepathfull", "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"datain", "=."}], ";", 
   RowBox[{"datain2", "=."}], ";", 
   RowBox[{"datainXYZSR", "=."}], ";", 
   RowBox[{"skipnum", "=."}], ";", 
   RowBox[{"nRows", "=."}], ";", 
   RowBox[{"nCols", "=."}], ";", 
   RowBox[{"delx", "=."}], ";", " ", 
   RowBox[{"dely", "=."}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"nominal", " ", "scan", " ", "values"}], " ", "*)"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "Next", ",", "GeneratedCell"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fnames", "=", 
   RowBox[{"FileNames", "[", "\"\<*.DAT\>\"", "]"}]}], ";", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"fnames", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "fnames", "]"}]}], "}"}]}], "]"}], "//", 
   "TableForm"}]}]], "Input",
 CellAutoOverwrite->False],

Cell[CellGroupData[{

Cell["Pick the OGP file from the list", "Subsubsection",
 CellTags->"pick MST file num"],

Cell[BoxData[
 RowBox[{"inst$", "=", "\"\<OGP\>\""}]], "Input"],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input",
 CellAutoOverwrite->False],

Cell[BoxData[
 RowBox[{"nf", "=", 
  RowBox[{"Input", "[", 
   RowBox[{"\"\<Enter index of file desired\>\"", ",", "nf"}], 
   "]"}]}]], "Input",
 CellAutoOverwrite->False],

Cell[BoxData["5"], "Input"],

Cell[BoxData[{
 RowBox[{"fileinfull", " ", "=", 
  RowBox[{"fnames", "[", 
   RowBox[{"[", "nf", "]"}], "]"}]}], "\n", 
 RowBox[{"fileinroot", "=", 
  RowBox[{"FileBaseName", "[", "fileinfull", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"fileinS", "=", "fileinroot"}], ";", 
  RowBox[{"filein", "=", "fileinS"}], ";"}]}], "Input",
 CellAutoOverwrite->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Read", " ", "in", " ", "raw", " ", "data", " ", "here"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"datain", "=", 
    RowBox[{"Import", "[", 
     RowBox[{"fileinfull", ",", "\"\<Data\>\""}], "]"}]}], ";"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{"manualcalcFlag", ",", 
    RowBox[{"Interrupt", "[", "]"}]}], " ", "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Stop", " ", "here", " ", "to", " ", "execute", " ", "next", " ", 
    "expressons", " ", "individually", " ", "as", " ", "needed", " ", "to", 
    " ", "clean", " ", "up", " ", "data"}], " ", "*)"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"datain", "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "5"}], "]"}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell["Create subdir for data file output", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Directory", "[", "]"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "is", " ", "the", " ", "current", " ", "default", " ", 
    "directory"}], " ", "*)"}]}], "\n", 
 RowBox[{"workdir", "=", 
  RowBox[{"filein", "<>", "\"\<_files\>\""}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"DirectoryQ", "[", "workdir", "]"}]}], ",", 
   RowBox[{
    RowBox[{"CreateDirectory", "[", "workdir", "]"}], ";", 
    RowBox[{"Print", "[", "\"\<New work dir created\>\"", "]"}]}], ",", 
   RowBox[{"Print", "[", 
    RowBox[{
    "workdir", "<>", "\"\< already exists. Using it for output.\>\""}], 
    "]"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"SetDirectory", "[", "workdir", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input"]
}, Open  ]],

Cell["\<\
Strip out all of the Contour record, nulls and EORs, making one long list of \
points.\
\>", "Text"],

Cell[BoxData[
 RowBox[{"Length", "[", "datain", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"datain2", "=", "datain"}], ";"}]], "Input"],

Cell["\<\
Start here to select only Contour sections. Need to find position of each \
contour and each blank line. Then put these list together and find where the \
blank folling the contour occurs. THis defines the range of lines to extract.\
\
\>", "Subsubsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"conPos", "=", 
   RowBox[{"Position", "[", 
    RowBox[{"datain2", ",", "\"\<Contour\>\"", ",", "2"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"Length", "[", "conPos", "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cPos", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", "1"}], "]"}], ",", 
     "conPos"}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"blankPos", "=", 
   RowBox[{
    RowBox[{"Position", "[", 
     RowBox[{"datain2", ",", 
      RowBox[{"List", "[", "]"}]}], "]"}], "//", "Flatten"}]}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"clist", "=", 
   RowBox[{
    RowBox[{"Union", "[", 
     RowBox[{"cPos", ",", "blankPos"}], "]"}], "//", "Sort"}]}], 
  ";"}]], "Input"],

Cell["\<\
cPos lists the line number of each Contour line in the input array. The \
combined list with the blank lines shows where the next blank line is \
following the Contour line. This pair defines the range of contour numbers. \
So  \
\>", "Text"],

Cell["This is where Contour is found in input array:", "Text"],

Cell[BoxData[
 RowBox[{"loc", "=", 
  RowBox[{
   RowBox[{"Position", "[", 
    RowBox[{"clist", ",", 
     RowBox[{"cPos", "[", 
      RowBox[{"[", "8", "]"}], "]"}]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1"}], "]"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"clist", "[", 
    RowBox[{"[", "loc", "]"}], "]"}], ",", 
   RowBox[{"clist", "[", 
    RowBox[{"[", 
     RowBox[{"loc", "+", "1"}], "]"}], "]"}]}], "}"}]], "Input"],

Cell["\<\
Form the range where the Contour pts are located. Skip the \
\[OpenCurlyDoubleQuote]Contour\[CloseCurlyDoubleQuote] line.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cpairs", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"clist", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"clist", ",", 
             RowBox[{"cPos", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "+", "1"}], 
       ",", 
       RowBox[{"clist", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"clist", ",", 
             RowBox[{"cPos", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "+", "1"}], "]"}], "]"}]}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "cPos", "]"}]}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"contours", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Take", "[", 
      RowBox[{"datain2", ",", 
       RowBox[{"cpairs", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "cpairs", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"datain3", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", "contours", "]"}], "//", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"#", ",", "1"}], "]"}], "&"}]}], ",", 
     RowBox[{"-", "1"}]}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"Length", "[", "datain3", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"datain3", "[", 
  RowBox[{"[", 
   RowBox[{
    RowBox[{"-", "10"}], ";;", 
    RowBox[{"-", "1"}]}], "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"datain4", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"datain3", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "#", "]"}], ">", "0"}], "&"}]}], "]"}]}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"Length", "[", "datain4", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"LengthWhile", "[", 
  RowBox[{"datain4", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "4"}], "&"}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"manualcalcFlag", ",", 
   RowBox[{"Interrupt", "[", "]"}]}], " ", "]"}]], "Input"]
}, Open  ]],

Cell["\<\
All data points are now in one continuous list. All the contours are merged \
together\
\>", "Subsubsection"],

Cell[CellGroupData[{

Cell["continue here", "Subsubsection",
 CellTags->"data ready"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"datain3x", "=", 
    RowBox[{"Take", "[", 
     RowBox[{"datain4", ",", "All", ",", "3"}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Strip", " ", "off", " ", "the", " ", "XYZ", " ", "numbers"}], 
   "*)"}]}]], "Input"],

Cell["Convert z-vals to microns:", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"xunit$", "=", "\"\<mm\>\""}], ";", 
   RowBox[{"yunit$", "=", "\"\<mm\>\""}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"These", " ", "are", " ", "now", " ", "current", " ", "units"}], 
   "*)"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"zflag", "=", "True"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Input", "[", 
    RowBox[{"\"\<True if leave z-vals in mm\>\"", ",", "True"}], "]"}], 
   "*)"}]}]], "Input"],

Cell[BoxData[{
 RowBox[{"datain3x", "[", 
  RowBox[{"[", "1", "]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{"zflag", ",", 
    RowBox[{"zunit$", "=", "\"\<mm\>\""}], ",", 
    RowBox[{
     RowBox[{"datain3x", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"MapAt", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Times", "[", 
             RowBox[{"#", ",", 
              RowBox[{"10", "^", "3"}]}], "]"}], "&"}], ",", "#", ",", "3"}], 
          "]"}], "&"}], ",", "datain3x"}], "]"}]}], ";", 
     RowBox[{"zunit$", "=", "\"\<\[Micro]m\>\""}]}]}], "]"}], ";"}], "\n", 
 RowBox[{"datain3x", "[", 
  RowBox[{"[", "1", "]"}], "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"skipnum", "=."}], ";", 
  RowBox[{"cloudXYZ", "=."}]}]], "Input"],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input",
 CellAutoOverwrite->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cloudXYZ", "=", "datain3x"}], ";"}], "\n", 
 RowBox[{" ", 
  RowBox[{"(*", " ", 
   RowBox[{"No", " ", 
    RowBox[{"FID", ".", " ", "Copy"}], " ", "surface", " ", "into", " ", "SR",
     " ", 
    RowBox[{"array", "."}]}], " ", "*)"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"Dimensions", "[", "cloudXYZ", "]"}]], "Input"]
}, Open  ]],

Cell["Range of raw z-values:", "Text"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Min", "[", 
    RowBox[{"cloudXYZ", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", "3", "}"}]}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"Max", "[", 
    RowBox[{"cloudXYZ", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", "3", "}"}]}], "]"}], "]"}], "]"}]}], "}"}]], "Input"],

Cell[CellGroupData[{

Cell["Plot free-form data list not on uniform grid", "Subsection"],

Cell["\<\
Start next range clean-up here. Keep eliminating points from cloudXYZ based \
on x and y and z range criteria.\
\>", "Subsubsection",
 CellTags->"XY range restriction start"],

Cell["\<\
Execute the appropriate unpacking expression and rearrange the cloudXYZ as \
necessary.
This depends on the ordering of the XYZ values in each triplet:  XYZ or ZYX\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xvals", "=", 
   RowBox[{
    RowBox[{"Take", "[", 
     RowBox[{"cloudXYZ", ",", "All", ",", 
      RowBox[{"{", "1", "}"}]}], "]"}], "//", "Flatten"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"yvals", "=", 
   RowBox[{
    RowBox[{"Take", "[", 
     RowBox[{"cloudXYZ", ",", "All", ",", 
      RowBox[{"{", "2", "}"}]}], "]"}], "//", "Flatten"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"zvals", "=", 
   RowBox[{
    RowBox[{"Take", "[", 
     RowBox[{"cloudXYZ", ",", "All", ",", 
      RowBox[{"{", "3", "}"}]}], "]"}], "//", "Flatten"}]}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"xmin", "=", 
     RowBox[{"Min", "[", "xvals", "]"}]}], ",", 
    RowBox[{"xmax", "=", 
     RowBox[{"Max", "[", "xvals", "]"}]}]}], "}"}], "//", 
  "N"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ymin", "=", 
     RowBox[{"Min", "[", "yvals", "]"}]}], ",", 
    RowBox[{"ymax", "=", 
     RowBox[{"Max", "[", "yvals", "]"}]}]}], "}"}], "//", 
  "N"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"zmin", "=", 
     RowBox[{"Min", "[", "zvals", "]"}]}], ",", 
    RowBox[{"zmax", "=", 
     RowBox[{"Max", "[", "zvals", "]"}]}], ",", 
    RowBox[{"Mean", "[", "zvals", "]"}], ",", 
    RowBox[{"StandardDeviation", "[", "zvals", "]"}]}], "}"}], "//", 
  "N"}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"deltaX", "=", 
    RowBox[{"xmax", "-", "xmin"}]}], ",", " ", 
   RowBox[{"deltaY", "=", 
    RowBox[{"ymax", "-", "ymin"}]}], ",", 
   RowBox[{"deltaZ", "=", 
    RowBox[{"zmax", "-", "zmin"}]}]}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"rowscols$", "=", "\"\<cloud\>\"", " ", 
  RowBox[{"(*", "\"\<sparse\>\"", "*)"}]}]], "Input"],

Cell["Separate raw data into cluster regions", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"vp", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "Infinity"}], "}"}]}], ";"}], "\n", 
 RowBox[{"vp", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", 
    RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dynamic", "[", "vp", "]"}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{"Dimensions", "[", "cloudXYZ", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"lpp01", "=", 
  RowBox[{"ListPointPlot3D", "[", 
   RowBox[{"cloudXYZ", ",", 
    RowBox[{"PlotRange", "->", "All"}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", 
     RowBox[{"Dynamic", "[", "vp", "]"}]}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
    RowBox[{"ImageSize", "->", "400"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<Xval\>\"", ",", "\"\<Yval\>\"", ",", "\"\<\>\""}], "}"}]}],
     ",", 
    RowBox[{"PlotLabel", "->", 
     RowBox[{"fileinS", "<>", "\"\<\\nraw data\>\""}]}]}], "]"}]}]], "Input"],

Cell[BoxData["hms$"], "Input"],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
   "fileinS", "<>", "\"\<_\>\"", "<>", "hms$", "<>", 
    "\"\<_SUTandFIDraw.tiff\>\""}], ",", "lpp01", ",", 
   RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
   RowBox[{"ImageResolution", "->", "100"}]}], "]"}]], "Input"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Export raw data SUT&FID plot\>\"", ",", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
      "fileinS", "<>", "\"\<_\>\"", "<>", "hms$", "<>", 
       "\"\<_SUTandFIDraw.tiff\>\""}], ",", "lpp01", ",", 
      RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
      RowBox[{"ImageResolution", "->", "100"}]}], "]"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}],
  FontColor->RGBColor[1, 0, 1]]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Separate FID from 3 ball region. Then isolate each ball region. Use MCS \
global coord system, not PCS part local.
\
\>", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"xyrange", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xmin", ",", "xmax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ymin", "+", "25"}], ",", 
        RowBox[{"ymax", "-", "25"}]}], "}"}]}], "}"}]}], "*)"}], "\n", 
  RowBox[{"Length", "[", 
   RowBox[{
    RowBox[{"cloudXYZ", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "3"}], "]"}], "]"}], "//", "Flatten"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.669411737928564*^9, 3.6694117490322123`*^9}, {
  3.6694117850651073`*^9, 3.6694118215819902`*^9}}],

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"cloudXYZ", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "3"}], "]"}], "]"}], "//", "Flatten"}], ",", "50", 
   ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input",
 CellAutoOverwrite->False]
}, Open  ]],

Cell[CellGroupData[{

Cell["4. Separate BAL and RFT regions. ", "Section"],

Cell["\<\
Now separate the point cloud into 2 regions: BAL and RFT based on z-vals in \
histogram\
\>", "Subsection"],

Cell[CellGroupData[{

Cell["New MF03 orientation with single ball on left:", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"zbal", "=", 
    RowBox[{"{", 
     RowBox[{"50.", ",", "60."}], "}"}]}], ";", 
   RowBox[{"zrft", "=", 
    RowBox[{"{", 
     RowBox[{"80", ",", "180."}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "3", " ", "balls", " ", "and", " ", "raft", " ", "in", " ", "MCS"}], 
   "*)"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"xyrange", "=."}], ";", 
  RowBox[{"imin", "=."}], ";", 
  RowBox[{"imax", "=."}], ";", 
  RowBox[{"jmin", "=."}], ";", 
  RowBox[{"jmax", "=."}], ";"}]], "Input",
 CellChangeTimes->{{3.669411196960896*^9, 3.669411199031328*^9}, {
  3.669411437258922*^9, 3.6694114633829308`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"xminBalls", "=."}], ";", 
  RowBox[{"xmaxBalls", "=."}], ";", 
  RowBox[{"yminBalls", "=."}], ";", 
  RowBox[{"ymaxBalls", "=."}], ";"}]], "Input",
 CellChangeTimes->{{3.669411496335712*^9, 3.6694115075902*^9}}],

Cell[BoxData[
 RowBox[{"xyzrange", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xmin", ",", "xmax"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"ymin", ",", "ymax"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"zmin", ",", "zmax"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.66281353015187*^9, 3.662813552385394*^9}, {
  3.6694111194501657`*^9, 3.669411136291972*^9}, {3.6694112104077044`*^9, 
  3.669411227350657*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"imin", ",", "imax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"jmin", ",", "jmax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"kmin", ",", "kmax"}], "}"}]}], "}"}], "=", "xyzrange"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.669456993184608*^9, 3.6694570147176447`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"xminBalls", "=", "imin"}], ";", 
  RowBox[{"xmaxBalls", "=", "imax"}], ";", 
  RowBox[{"yminBalls", "=", "jmin"}], ";", 
  RowBox[{"ymaxBalls", "=", "jmax"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xminBalls", ",", "xmaxBalls"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"yminBalls", ",", "ymaxBalls"}], "}"}]}], "}"}], "//", 
  "MatrixForm"}]], "Input"]
}, Open  ]],

Cell["\<\
Define FID region: Exclude points outside of central x-region and outside of \
y-limits.\
\>", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BALdata", "=."}], ";", 
  RowBox[{"RFTdata", "=."}], ";", 
  RowBox[{"testR", "=."}], ";", 
  RowBox[{"testS", "=."}], ";", 
  RowBox[{"rplt", "=."}], ";", 
  RowBox[{"histresidplt", "=."}], ";", 
  RowBox[{"reapres", "=."}], ";"}]], "Input"],

Cell["\<\
Seperate regions based on Z-vals. TOP is lowest, BAL is middle, RFT is \
highest.\
\>", "Text",
 CellChangeTimes->{{3.6694570827359667`*^9, 3.669457155219643*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"reapres", " ", "=", "\[IndentingNewLine]", 
   RowBox[{"Reap", "[", " ", "\[IndentingNewLine]", 
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Which", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"cloudXYZ", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], "<", 
         RowBox[{"zbal", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{"Sow", "[", 
         RowBox[{
          RowBox[{"cloudXYZ", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "bal"}], "]"}], ",", 
        "\[IndentingNewLine]", "True", ",", 
        RowBox[{"Sow", "[", 
         RowBox[{
          RowBox[{"cloudXYZ", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "rft"}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "cloudXYZ", "]"}]}], "}"}]}], "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"reapres", "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}]], "Input"],

Cell["Separate the regions. Adjust for different ball configs", "Text"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"BALdata", "=", 
     RowBox[{"reapres", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"RFTdata", "=", 
     RowBox[{"reapres", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Length", "[", "BALdata", "]"}], ",", 
   RowBox[{"Length", "[", "RFTdata", "]"}]}], "}"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xyrange", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xmin", ",", "xmax"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"ymin", ",", "ymax"}], "}"}]}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"imin", ",", "imax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"jmin", ",", "jmax"}], "}"}]}], "}"}], "=", "xyrange"}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"xminBalls", "=", "imin"}], ";", 
  RowBox[{"xmaxBalls", "=", "imax"}], ";", 
  RowBox[{"yminBalls", "=", "jmin"}], ";", 
  RowBox[{"ymaxBalls", "=", "jmax"}], ";"}]], "Input"],

Cell["View X,Y corners of the raw data ", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xmaxBalls", ",", "yminBalls"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"xmaxBalls", ",", "ymaxBalls"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xminBalls", ",", "yminBalls"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"xmaxBalls", ",", "yminBalls"}], "}"}]}], "}"}]}], "}"}], "//",
   "Grid"}]], "Input"],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input",
 CellAutoOverwrite->False]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
5. Now work on 3 ball fits. Separate BAL into blist for each ball. \
\>", "Section"],

Cell["Separate the regions and plot the points first.", "Subsubsection"],

Cell["\<\
Separate data into regions around each ball. blist contains the 3 region \
lists. Exclude the center point of the ball.
First histogram in Y to get the region boundaries.\
\>", "Text"],

Cell[BoxData[
 RowBox[{"ListPointPlot3D", "[", 
  RowBox[{"BALdata", ",", 
   RowBox[{"PlotRange", "->", "All"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", " ", 
   RowBox[{"ViewPoint", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "Infinity"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Xval\>\"", ",", "\"\<Yval\>\"", ",", "\"\<Z[\[Micro]m]\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "->", 
    RowBox[{"fileinS", "<>", "\"\<\\nBAL region\>\""}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.669458482768877*^9, 3.669458500644561*^9}, {
  3.6694585668849907`*^9, 3.669458582586966*^9}, {3.669458614613248*^9, 
  3.669458655584261*^9}}],

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"BALdata", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "50"}], "]"}]], "Input",
 CellChangeTimes->{
  3.6694583210645313`*^9, {3.669458682856271*^9, 3.66945868444645*^9}}],

Cell["\<\
Separate balls into regions with FindClusters. Put into blist.\
\>", "Text",
 CellChangeTimes->{{3.669459523946918*^9, 3.669459558912137*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"blist", "=", 
   RowBox[{"FindClusters", "[", 
    RowBox[{"BALdata", ",", "3"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.669459124078988*^9, 3.669459170067957*^9}, {
  3.669459478107703*^9, 3.669459479381832*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"bptsplt", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ListPointPlot3D", "[", 
      RowBox[{
       RowBox[{"blist", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"PlotRange", "->", "All"}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", " ", 
       RowBox[{"ViewPoint", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "Infinity"}], "}"}]}], ",", 
       RowBox[{"AxesLabel", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<Xval\>\"", ",", "\"\<Yval\>\"", ",", "\"\<Z[mm]\>\""}], 
         "}"}]}], ",", 
       RowBox[{"PlotLabel", "->", 
        RowBox[{"fileinS", "<>", "\"\<\\nBAL region\>\""}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "3"}], "}"}]}], "]"}]}], ";"}]], "Input"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"allBallPts", "=", 
  RowBox[{"GraphicsRow", "[", 
   RowBox[{"bptsplt", ",", 
    RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"nbaltot", "=", 
  RowBox[{"Length", "[", 
   RowBox[{
    RowBox[{"blist", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "All", ",", "3"}], "]"}], "]"}], "//", "Flatten"}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nbaltot$", "=", 
   RowBox[{"\"\<_\>\"", "<>", 
    RowBox[{"TS", "[", "nbaltot", "]"}]}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input",
 CellAutoOverwrite->False],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
   "fileinS", "<>", "\"\<_\>\"", "<>", "nbaltot$", "<>", 
    "\"\<_BallPtsCld.tiff\>\""}], ",", "allBallPts", ",", 
   RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
   RowBox[{"ImageResolution", "->", "100"}]}], "]"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Fit spheres to balls and look at residuals and compute stats.\
\>", "Subsection"],

Cell["\<\
Start next iteration from here after triming outliers from blist pts.\
\>", "Subsubsection",
 CellTags->"Iterate blist pts"],

Cell[BoxData[
 RowBox[{"blist", "//", "Short"}]], "Input"],

Cell[BoxData[
 RowBox[{"nbal$", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"\"\<_\>\"", "<>", 
     RowBox[{"TS", "[", 
      RowBox[{"Length", "[", 
       RowBox[{"blist", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "3"}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"testS", "=."}], ";", 
  RowBox[{"testR", "=."}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ballplot", "[", 
   RowBox[{"balldata_", ",", "ballID$_"}], "]"}], ":=", 
  RowBox[{"ListPointPlot3D", "[", 
   RowBox[{"balldata", ",", 
    RowBox[{"PlotRange", "->", "All"}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "3"}], ",", "1"}], "}"}]}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
    RowBox[{"ImageSize", "->", "400"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<X[mm]\>\"", ",", "\"\<Y[mm]\>\"", ",", "\"\<Z[mm]\>\""}], 
      "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"\"\<Ball \>\"", "<>", "ballID$"}]}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bplt", "=", 
   RowBox[{"{", "}"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bplt", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ballplot", "[", 
      RowBox[{
       RowBox[{"blist", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"TS", "[", "i", "]"}], "<>", 
        RowBox[{"nbal$", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input",
 CellAutoOverwrite->False],

Cell[BoxData[
 RowBox[{"allBallptsplot", "=", 
  RowBox[{"GraphicsRow", "[", 
   RowBox[{"bplt", ",", 
    RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
   "fileinS", "<>", "\"\<_\>\"", "<>", "nbaltot$", "<>", 
    "\"\<_Ballpts1.tiff\>\""}], ",", "allBallptsplot", ",", 
   RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
   RowBox[{"ImageResolution", "->", "100"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{"\"\<Output ball point cloud plot\>\"", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
     "fileinS", "<>", "\"\<_\>\"", "<>", "nbaltot$", "<>", 
      "\"\<_Ballpts1.tiff\>\""}], ",", "allBallptsplot", ",", 
     RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
     RowBox[{"ImageResolution", "->", "100"}]}], "]"}], ",", 
   RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell["Now fit each ball to a sphere and extract the coords.", "Subsubsection"],

Cell["\<\
Fist, express z as a function of the 4 parameters. Solve the canonical \
equation for z.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RR", "=."}], ";", 
  RowBox[{"x0", "=."}], ";", 
  RowBox[{"y0", "=."}], ";", 
  RowBox[{"z0", "=."}], ";", 
  RowBox[{"r0", "=."}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"spheqn", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"z", "-", "z0"}], ")"}], "^", "2"}], "-", 
     RowBox[{"r0", "^", "2"}]}], "\[Equal]", "0"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"solnz", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{"spheqn", ",", "z"}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"eqnz", "=", 
   RowBox[{"z", "/.", 
    RowBox[{"solnz", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}]], "Input"],

Cell["Function to fit to a ball data input array", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"nominalR", "=", "4.0"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Need", " ", "initial", " ", "guess"}], "*)"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"fitballdata", "[", "ptclouddata_", "]"}], ":=", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "pts", "}"}], ",", 
     RowBox[{
      RowBox[{"pts", "=", "ptclouddata"}], ";", 
      RowBox[{"pts0", "=", 
       RowBox[{"Mean", "[", "pts", "]"}]}], ";", 
      RowBox[{"fitpts", "=", 
       RowBox[{"NonlinearModelFit", "[", 
        RowBox[{"pts", ",", "eqnz", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x0", ",", 
             RowBox[{"pts0", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"y0", ",", 
             RowBox[{"pts0", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"z0", ",", 
             RowBox[{"pts0", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"r0", ",", "nominalR"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}], ",", 
         RowBox[{"PrecisionGoal", "\[Rule]", "Infinity"}], ",", 
         RowBox[{"AccuracyGoal", "\[Rule]", "Automatic"}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"fitpts", "[", 
        RowBox[{"{", 
         RowBox[{
         "\"\<BestFitParameters\>\"", ",", 
          "\"\<ParameterConfidenceIntervalTable\>\""}], "}"}], "]"}], "//", 
       "Column"}]}]}], "]"}]}], "\[IndentingNewLine]"}]], "Input"],

Cell[BoxData[{
 RowBox[{"fitballdata", "[", 
  RowBox[{"blist", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"fitballdata", "[", 
  RowBox[{"blist", "[", 
   RowBox[{"[", "2", "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"fitballdata", "[", 
  RowBox[{"blist", "[", 
   RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fitpts", "[", "\"\<FitResiduals\>\"", "]"}], "//", 
  "Short"}]], "Input"],

Cell[BoxData[{
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{"fitpts", "=."}], ";", 
       RowBox[{"fitres1", "=", 
        RowBox[{"{", "}"}]}], ";", 
       RowBox[{"fitres2", "=", 
        RowBox[{"{", "}"}]}], ";", 
       RowBox[{"fitres22", "=", 
        RowBox[{"{", "}"}]}], ";", 
       RowBox[{"fitres23", "=", 
        RowBox[{"{", "}"}]}], ";", 
       RowBox[{"fitres24", "=", 
        RowBox[{"{", "}"}]}], ";", 
       RowBox[{"fitres3", "=", 
        RowBox[{"{", "}"}]}], ";", 
       RowBox[{"fitfcn", "=", 
        RowBox[{"{", "}"}]}], ";", 
       RowBox[{"fitfcnpure", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"pts0", "=", 
        RowBox[{"{", "}"}]}], ";", 
       RowBox[{"fitzresids", "=", 
        RowBox[{"{", "}"}]}], ";", 
       RowBox[{"ballfits", "=", 
        RowBox[{"{", "}"}]}]}]}], "]"}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"pts0", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"blist", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Print", "[", "pts0", "]"}], ";"}], "*)"}], 
    RowBox[{"fitpts", "=", 
     RowBox[{"NonlinearModelFit", "[", 
      RowBox[{
       RowBox[{"blist", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", "eqnz", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x0", ",", 
           RowBox[{"pts0", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y0", ",", 
           RowBox[{"pts0", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"z0", ",", 
           RowBox[{"pts0", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"r0", ",", "nominalR"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], ",", 
       RowBox[{"PrecisionGoal", "\[Rule]", "Infinity"}], ",", 
       RowBox[{"AccuracyGoal", "\[Rule]", "Automatic"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"d0", "=", 
     RowBox[{
      RowBox[{"2", "*", "r0"}], "/.", 
      RowBox[{"fitpts", "[", 
       RowBox[{"{", "\"\<BestFitParameters\>\"", "}"}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"ballfits", ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x0", ",", "y0", ",", "z0", ",", "r0", ",", 
         RowBox[{"d0", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "/.", 
       RowBox[{"fitpts", "[", 
        RowBox[{"{", "\"\<BestFitParameters\>\"", "}"}], "]"}]}]}], "]"}], 
    ";", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x0", ",", "y0", ",", "z0", ",", "r0", ",", 
       RowBox[{"d0", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "/.", 
     RowBox[{"fitpts", "[", 
      RowBox[{"{", "\"\<BestFitParameters\>\"", "}"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x0", ",", "y0", ",", "z0", ",", "r0", ",", 
        RowBox[{"d0", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "/.", 
      RowBox[{"fitpts", "[", 
       RowBox[{"{", "\"\<BestFitParameters\>\"", "}"}], "]"}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"fitzresids", ",", 
      RowBox[{"fitpts", "[", 
       RowBox[{"{", "\"\<FitResiduals\>\"", "}"}], "]"}]}], "]"}], ";", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"fitfcn", ",", 
      RowBox[{"fitpts", "[", 
       RowBox[{"{", "\"\<BestFit\>\"", "}"}], "]"}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"fitfcnpure", ",", 
      RowBox[{"fitpts", "[", 
       RowBox[{"{", "\"\<Function\>\"", "}"}], "]"}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"fitres1", ",", 
      RowBox[{"fitpts", "[", 
       RowBox[{"{", "\"\<BestFitParameters\>\"", "}"}], "]"}]}], "]"}], ";", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"fitres2", ",", 
      RowBox[{"fitpts", "[", 
       RowBox[{"{", "\"\<ParameterConfidenceIntervalTable\>\"", "}"}], 
       "]"}]}], "]"}], ";", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"fitres22", ",", 
      RowBox[{"fitpts", "[", 
       RowBox[{"{", "\"\<ParameterErrors\>\"", "}"}], "]"}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"fitres23", ",", 
      RowBox[{"fitpts", "[", 
       RowBox[{"{", "\"\<ParameterTable\>\"", "}"}], "]"}]}], "]"}], ";", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"fitres24", ",", 
      RowBox[{"fitpts", "[", 
       RowBox[{"{", "\"\<ParameterTableEntries\>\"", "}"}], "]"}]}], "]"}], 
    ";", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"fitres3", ",", 
      RowBox[{"fitpts", "[", 
       RowBox[{"{", "\"\<ANOVATable\>\"", "}"}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "3"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ballfits", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"ballfits", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fitzresids", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"fitzresids", ",", "1"}], "]"}]}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fitzresids", "[", 
   RowBox[{"[", "2", "]"}], "]"}], "//", "Length"}]], "Input"],

Cell["\<\
Create point clouds for the 3 detrended ball residuals. Replace z-val with \
fitzresids vals => blistXYZresids\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"blistXYZresids", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"blist", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"blist", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"fitzresids", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"blist", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"out$", "=", 
  RowBox[{
  "fileinS", "<>", "\"\<\\nPoints in each fit:\\t\>\"", "<>", "nbal$", "<>", 
   "\"\<\\nTotal trimmed pts = \>\"", "<>", "nbaltot$", "<>", 
   "\"\<\\n\\nParameters are {x0,y0,z0,r0,d0}\\n\\n\>\"", "<>", 
   RowBox[{"TS", "[", 
    RowBox[{"ballfits", "//", "MatrixForm"}], "]"}], "<>", 
   "\"\<\\n\>\""}]}]], "Input"],

Cell[BoxData["nbaltot$"], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"out$", ",", 
    RowBox[{"fitres1", "//", "Column"}], ",", 
    RowBox[{"fitres2", "//", "Column"}]}], "}"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"StringTake", "[", 
     RowBox[{"fileinS", ",", "12"}], "]"}], "<>", "nbaltot$", "<>", 
    "\"\<_BallFits3.PDF\>\""}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"out$", ",", 
      RowBox[{"fitres2", "//", "Column"}]}], "}"}], "//", "Column"}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{"\"\<Output the fit results to PDF\>\"", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"StringTake", "[", 
       RowBox[{"fileinS", ",", "12"}], "]"}], "<>", "nbaltot$", "<>", 
      "\"\<_BallFits3.PDF\>\""}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"out$", ",", 
        RowBox[{"fitres2", "//", "Column"}]}], "}"}], "//", "Column"}]}], 
    "]"}]}], "]"}]], "Input"]
}, Open  ]],

Cell["\<\
Look at histogram of residuals of each ball after subtracting best fit \
sphere. Look for particularly bad fits and then figure out why.\
\>", "Text"],

Cell[BoxData[
 RowBox[{"sdev", "=", 
  RowBox[{"Map", "[", 
   RowBox[{"StandardDeviation", ",", "fitzresids"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"kurt", "=", 
  RowBox[{"Map", "[", 
   RowBox[{"Kurtosis", ",", "fitzresids"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input",
 CellAutoOverwrite->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"sdev", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", 
  RowBox[{
   RowBox[{"NumberForm", "[", 
    RowBox[{"#", ",", "3"}], "]"}], "&"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"histoplt", "=", 
  RowBox[{"GraphicsRow", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Histogram", "[", 
       RowBox[{
        RowBox[{"fitzresids", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "50", ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"BaseStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"FontSize", "\[Rule]", "6"}], ",", 
           RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}]}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"\"\<Ball \>\"", "<>", 
          RowBox[{"TS", "[", "i", "]"}], "<>", "\"\< npts= \>\"", "<>", 
          RowBox[{"nbal$", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "<>", "\"\<\\nsdev \>\"", "<>", 
          RowBox[{"TS", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"10", "^", "3"}], " ", 
             RowBox[{"sdev", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "//", 
            RowBox[{
             RowBox[{"NumberForm", "[", 
              RowBox[{"#", ",", "3"}], "]"}], "&"}]}], "]"}], "<>", 
          "\"\<, kurtosis \>\"", "<>", 
          RowBox[{"TS", "[", 
           RowBox[{
            RowBox[{"kurt", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "//", 
            RowBox[{
             RowBox[{"NumberForm", "[", 
              RowBox[{"#", ",", "4"}], "]"}], "&"}]}], "]"}]}]}]}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "fitzresids", "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"fileinS", "<>", "nbaltot$", "<>", "\"\<_3Zreshisto.tiff\>\""}], 
   ",", "histoplt", ",", 
   RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
   RowBox[{"ImageResolution", "->", "100"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{"\"\<Output pt residual histograms\>\"", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"fileinS", "<>", "nbaltot$", "<>", "\"\<_3Zreshisto.tiff\>\""}], 
     ",", "histoplt", ",", 
     RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
     RowBox[{"ImageResolution", "->", "100"}]}], "]"}], ",", 
   RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"vp1", "=", "Front"}]], "Input"],

Cell[BoxData[
 RowBox[{"balldetrendplts", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ListPointPlot3D", "[", 
     RowBox[{
      RowBox[{"blistXYZresids", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"PlotRange", "->", "All"}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"Dynamic", "[", "vp1", "]"}]}], ",", 
      RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<X[mm]\>\"", ",", "\"\<Y[mm]\>\"", ",", "\"\<Z[mm]\>\""}],
         "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"\"\<Ball \>\"", "<>", 
        RowBox[{"TS", "[", "i", "]"}], "<>", 
        RowBox[{"nbal$", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "3"}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"fileinS", "<>", 
      RowBox[{"nbal$", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "<>", "\"\<_Bal\>\"", "<>", 
      RowBox[{"TS", "[", "i", "]"}], "<>", "\"\<_ballD2resids.tiff\>\""}], 
     ",", 
     RowBox[{"balldetrendplts", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
     RowBox[{"ImageResolution", "->", "100"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "3"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{"\"\<Output detrended ball residuals\>\"", ",", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"fileinS", "<>", 
        RowBox[{"nbal$", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "<>", "\"\<_Bal\>\"", "<>", 
        RowBox[{"TS", "[", "i", "]"}], "<>", "\"\<_ballD2resids.tiff\>\""}], 
       ",", 
       RowBox[{"balldetrendplts", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
       RowBox[{"ImageResolution", "->", "100"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "3"}], "}"}]}], "]"}], ",", 
   RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell["\<\
This section to trim the ball pts to improve fit. Compute diff between pt and \
fit surf at pt x,y coords. Save diffs. Compute quantiles on the diffs. Set \
trim criterion. Trim off the outliers with Sow-Reap, going through the diff \
calc again.\
\>", "Subsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"blistZresids", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"blisttemp", "=", 
     RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"fitpt", "=", 
         RowBox[{"Apply", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"fitfcnpure", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"blist", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "i", ",", 
              RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"diffz", "=", 
         RowBox[{
          RowBox[{"blist", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "i", ",", "3"}], "]"}], "]"}], "-", "fitpt"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"blisttemp", ",", "diffz"}], "]"}]}], "\[IndentingNewLine]", 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", 
          RowBox[{"blist", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"blistZresids", ",", "blisttemp"}], "]"}]}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "1", ",", 
     RowBox[{"Length", "[", "blist", "]"}]}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{"Length", "[", "blistZresids", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"blistZresids", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", 
    RowBox[{"1", ";;", "10"}]}], "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"Mean", ",", "blistZresids"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"meanB", "=", 
    RowBox[{"Map", "[", 
     RowBox[{"Mean", ",", "blistZresids"}], "]"}]}], ",", 
   RowBox[{"sdevB", "=", 
    RowBox[{"Map", "[", 
     RowBox[{"StandardDeviation", ",", "blistZresids"}], "]"}]}], ",", 
   RowBox[{"kurtB", "=", 
    RowBox[{"Map", "[", 
     RowBox[{"Kurtosis", ",", "blistZresids"}], "]"}]}]}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input",
 CellAutoOverwrite->False],

Cell[BoxData[
 RowBox[{"histballs", "=", 
  RowBox[{"Histogram", "[", 
   RowBox[{"blistZresids", ",", "50", ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"FontSize", "\[Rule]", "9"}], ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"\"\<nballpts = \>\"", "<>", "nbal$", "<>", "\"\<\\nsdev \>\"", "<>", 
      RowBox[{"TS", "[", 
       RowBox[{
        RowBox[{"1000", "*", "sdevB"}], "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", "3"}], "]"}], "&"}]}], "]"}], "<>", 
      "\"\<, kurtosis \>\"", "<>", 
      RowBox[{"TS", "[", 
       RowBox[{"kurtB", "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", "4"}], "]"}], "&"}]}], "]"}]}]}]}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"qballs", "=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Quantile", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{"0.00", ",", "1.0"}], "}"}]}], "]"}], "&"}], ",", 
    "blistZresids"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"fileinS", "<>", "nbaltot$", "<>", "\"\<_ballhist.tiff\>\""}], ",",
    "histballs", ",", 
   RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
   RowBox[{"ImageResolution", "->", "100"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{"\"\<Output trimmed ball histgram graphics\>\"", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"fileinS", "<>", "nbaltot$", "<>", "\"\<_ballhist.tiff\>\""}], 
     ",", "histballs", ",", 
     RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
     RowBox[{"ImageResolution", "->", "100"}]}], "]"}], ",", 
   RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell["\<\
Now trim the blist pts according to max and min in histogram.\
\>", "Text"],

Cell[BoxData[
 RowBox[{"bthresh", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Min", "[", 
     RowBox[{"qballs", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"Max", "[", 
     RowBox[{"qballs", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"bthresh", "=", 
  RowBox[{"Input", "[", 
   RowBox[{
   "\"\<Enter threshold values for trimming ball points.\>\"", ",", 
    "bthresh"}], "]"}]}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"blisttrim", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"blisttemp", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dropct", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"fitpt", "=", 
         RowBox[{"Apply", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"fitfcnpure", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"blist", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "i", ",", 
              RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"diffz", "=", 
         RowBox[{
          RowBox[{"blist", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "i", ",", "3"}], "]"}], "]"}], "-", "fitpt"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"diffz", ">", 
            RowBox[{"bthresh", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "&&", 
           RowBox[{"diffz", "<", 
            RowBox[{"bthresh", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"blisttemp", ",", 
            RowBox[{"blist", "[", 
             RowBox[{"[", 
              RowBox[{"j", ",", "i"}], "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"dropct", "++"}]}], "]"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", 
          RowBox[{"blist", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"{", 
       RowBox[{"j", ",", "dropct"}], "}"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"blisttrim", ",", "blisttemp"}], "]"}]}], "\[IndentingNewLine]",
     ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", 
      RowBox[{"Length", "[", "blist", "]"}]}], "}"}]}], "\[IndentingNewLine]",
    "]"}], ";"}]}], "Input"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{"\"\<Set blist to the trimmed pts\>\"", ",", 
   RowBox[{"blist", "=", "blisttrim"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input",
 CellAutoOverwrite->False],

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{"\"\<Go back to iterate blist fits\>\"", ",", 
   RowBox[{"NotebookLocate", "[", "\"\<Iterate blist pts\>\"", "]"}]}], 
  "]"}]], "Input"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compute BAL residuals after LSF sphere fits.", "Section"],

Cell[BoxData["ballfits"], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ballfits", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "5"}], "]"}], "]"}], "//", "Head"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ballsOGPMM", "=", "0"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"ballcoorddiffs", "=", 
  RowBox[{
   RowBox[{"ballfits", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"1", ";;", "3"}]}], "]"}], "]"}], "-", 
   "ballsOGPMM"}]}]], "Input"],

Cell["Format the results for output to Excel file.", "Text"],

Cell[BoxData["ballfits"], "Input"],

Cell[BoxData[
 RowBox[{"ballfitresults$", "=", 
  RowBox[{
  "\"\<Ball results for data file \>\"", "<>", "fileinfull", "<>", 
   "\"\<\\n\>\"", "<>", 
   RowBox[{"TS", "[", 
    RowBox[{"ballfits", "//", 
     RowBox[{
      RowBox[{"TableForm", "[", 
       RowBox[{"#", ",", 
        RowBox[{"TableSpacing", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "6"}], "}"}]}]}], "]"}], "&"}]}], "]"}], "<>", 
   "\"\<\\n\\n\>\"", "<>", 
   RowBox[{"TS", "[", 
    RowBox[{"fitres2", "//", 
     RowBox[{
      RowBox[{"TableForm", "[", 
       RowBox[{"#", ",", 
        RowBox[{"TableSpacing", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "6"}], "}"}]}]}], "]"}], "&"}]}], 
    "]"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"filein", "<>", "\"\<BallFitResults.txt\>\""}], ",", 
   "ballfitresults$"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{"\"\<Output the full fit results\>\"", ",", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"filein", "<>", "\"\<BallFitResults.txt\>\""}], ",", 
     "ballfitresults$"}], "]"}]}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell["Plot results", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"vp1", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "2"}], ",", "2.0"}], "}"}]}], ";"}]], "Input"],

Cell["\<\
Define a plot function that will plot any one of the surface fits. Take the \
center points from the fit centers in fitres1 and set the plot region size \
with the delta parameter. The ReleaseHold and Hold and Evaluate is necessary \
to allow the plot range limits to be calculated before the plot is evaluated.\
\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Bfitplt", "=."}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Bfitplt", "[", 
   RowBox[{"i_", ",", "delta_"}], "]"}], ":=", 
  RowBox[{"ReleaseHold", "@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Hold", "[", 
      RowBox[{"Plot3D", "[", 
       RowBox[{
        RowBox[{"fitfcn", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"x0", "-", "delta"}], ",", 
           RowBox[{"x0", "+", "delta"}]}], "}"}], "]"}], ",", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"{", 
          RowBox[{"y", ",", 
           RowBox[{"y0", "-", "delta"}], ",", 
           RowBox[{"y0", "+", "delta"}]}], "}"}], "]"}], ",", 
        RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
        RowBox[{"PlotStyle", "->", 
         RowBox[{"Opacity", "[", "0.3", "]"}]}], ",", 
        RowBox[{"ViewPoint", "->", 
         RowBox[{"Dynamic", "[", "vp1", "]"}]}]}], "]"}], "]"}], "//.", 
     RowBox[{"fitres1", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ")"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BallandFit", "[", "i_", "]"}], ":=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Bfitplt", "[", 
     RowBox[{"i", ",", "3.5"}], "]"}], ",", 
    RowBox[{"bplt", "[", 
     RowBox[{"[", "i", "]"}], "]"}], ",", 
    RowBox[{"PlotRange", "->", "All"}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Front", ",", "Above"}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<X[mm]\>\"", ",", "\"\<Y[mm]\>\"", ",", "\"\<\>\""}], 
      "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"fileinS", "<>", "\"\<\\nSpherical fit to MF03 ball #\>\"", "<>", 
        RowBox[{"TS", "[", "i", "]"}], "<>", "\"\< \\n\>\"", "<>", 
        RowBox[{"TS", "[", 
         RowBox[{"ballfits", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", "9"}], "]"}]}]}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"BallFitsPts", "=", 
  RowBox[{"GraphicsRow", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"BallandFit", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "3"}], "}"}]}], "]"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ToString", "[", "fileinS", "]"}], "<>", 
    "\"\<_Ballpts.tiff\>\""}], ",", "BallFitsPts", ",", 
   RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
   RowBox[{"ImageResolution", "->", "100"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{"\"\<Output points and fit graphics\>\"", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ToString", "[", "fileinS", "]"}], "<>", 
      "\"\<_Ballpts.tiff\>\""}], ",", "BallFitsPts", ",", 
     RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
     RowBox[{"ImageResolution", "->", "100"}]}], "]"}], ",", 
   RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Dynamic", "[", "vp1", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compute BAL centers datum plane. BALdatum", "Section"],

Cell["Plot FID surface fit with ball fit surfaces. ", "Subsubsection"],

Cell["\<\
Compute the cDATUM fit eqn. Then compute the distance of the ball centers \
from the FID plane. Ball centers define datum plane. First compute datum \
plane equation from ball centers. THen plot the difference between the 2 \
planes.\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fitbasisR", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "x", ",", "y"}], "}"}]}], ";", 
  RowBox[{"fitidxR", "=", "\"\<1,1\>\""}], ";"}], "\n", 
 RowBox[{"fitordR$", "=", 
  RowBox[{"StringTake", "[", 
   RowBox[{
    RowBox[{"ToString", "[", "fitbasisR", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", 
      RowBox[{"-", "2"}]}], "}"}]}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"cDATUM", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], "=", 
   RowBox[{"balldatumplaneOGP", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], "*)"}]], "Input"],

Cell[BoxData["ballfits"], "Input"],

Cell[BoxData[
 RowBox[{"Clear", "[", "BALdatum", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BALdatum", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"Fit", "[", 
   RowBox[{
    RowBox[{"ballfits", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"1", ";;", "3"}]}], "]"}], "]"}], ",", "fitbasisR", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]], "Input"],

Cell["\<\
Compute analytic mean of the BALdatum plane and subtract to better see the \
tilt in the raw MCS points.\
\>", "Text"],

Cell[BoxData[
 RowBox[{"meanZdatum", "=", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"BALdatum", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "xminBalls", ",", "xmaxBalls"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "ymin", ",", "ymax"}], "}"}]}], "]"}], "/", 
   RowBox[{"Integrate", "[", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "xminBalls", ",", "xmaxBalls"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "ymin", ",", "ymax"}], "}"}]}], "]"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"BALDatumplt", "=", 
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"BALdatum", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "xminBalls", ",", "xmaxBalls"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "ymin", ",", "ymax"}], "}"}], ",", 
    RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"Opacity", "[", "0.5", "]"}]}], ",", 
    RowBox[{"ViewPoint", "->", 
     RowBox[{"Dynamic", "[", "vp1", "]"}]}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<Y- edge\>\"", ",", "\"\<X- edge\>\"", ",", "\"\<Z\>\""}], 
      "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"fileinS", "<>", "\"\<\\n3 Ball datum plane mean Z = \>\"", "<>", 
      RowBox[{"TS", "[", "meanZdatum", "]"}]}]}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{"\"\<Output BALdatum plot\>\"", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ToString", "[", 
       RowBox[{"StringDrop", "[", 
        RowBox[{"fileinS", ",", "0"}], "]"}], "]"}], "<>", 
      "\"\<_BALdatum.tiff\>\""}], ",", "BALDatumplt", ",", 
     RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
     RowBox[{"ImageResolution", "->", "100"}]}], "]"}], ",", 
   RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"ptsanddatums", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"BALDatumplt", ",", 
    RowBox[{"BallandFit", "[", "1", "]"}], ",", 
    RowBox[{"BallandFit", "[", "2", "]"}], ",", 
    RowBox[{"BallandFit", "[", "3", "]"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"fileinS", "<>", "\"\<\\nPts & Fit planes\>\""}]}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<Y- edge\>\"", ",", "\"\<X- edge\>\"", ",", "\"\<Z\>\""}], 
      "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Left", ",", "Front", ",", "Above"}], "}"}]}]}], 
   "]"}]}]], "Input"],

Cell[BoxData[" "], "Input"],

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{"\"\<Output points and fit planes plot\>\"", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ToString", "[", 
       RowBox[{"StringDrop", "[", 
        RowBox[{"fileinS", ",", "0"}], "]"}], "]"}], "<>", "\"\<_\>\"", "<>", 
      "hms$", "<>", "\"\<_pts&fitplanes.tiff\>\""}], ",", "ptsanddatums", ",", 
     RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
     RowBox[{"ImageResolution", "->", "100"}]}], "]"}], ",", 
   RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["6. Lateral ball position distances.", "Section"],

Cell["\<\
Extract the x,y positons from the ball centers. Compute the distance between \
the 2 lower balls and the distance from the midpoint between them to the \
upper ball.\
\>", "Text"],

Cell[BoxData[
 RowBox[{"ballsfitxy", "=", 
  RowBox[{"Drop", "[", 
   RowBox[{"ballfits", ",", "None", ",", 
    RowBox[{"-", "3"}]}], "]"}]}]], "Input"],

Cell["Use ball 1 as origin.", "Text",
 CellChangeTimes->{{3.6567615808850603`*^9, 3.656761594528698*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ballsfitxy", "[", 
   RowBox[{"[", "2", "]"}], "]"}], "-", 
  RowBox[{"ballsfitxy", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6567615317186317`*^9, 3.6567615613032303`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ballsfitxy", "[", 
   RowBox[{"[", "3", "]"}], "]"}], "-", 
  RowBox[{"ballsfitxy", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.656761631939913*^9, 3.6567616353528013`*^9}, {
  3.656761793996294*^9, 3.656761794157873*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ballsfitxy", "[", 
   RowBox[{"[", "3", "]"}], "]"}], "-", 
  RowBox[{"ballsfitxy", "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.656761648876439*^9, 3.656761649089058*^9}, {
  3.656761820417535*^9, 3.656761820610125*^9}}],

Cell[BoxData[
 RowBox[{"dist12", "=", 
  RowBox[{
   RowBox[{"Norm", "[", 
    RowBox[{
     RowBox[{"ballsfitxy", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "-", 
     RowBox[{"ballsfitxy", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"NumberForm", "[", 
     RowBox[{"#", ",", "6"}], "]"}], "&"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"dist13", "=", 
  RowBox[{
   RowBox[{"Norm", "[", 
    RowBox[{
     RowBox[{"ballsfitxy", "[", 
      RowBox[{"[", "3", "]"}], "]"}], "-", 
     RowBox[{"ballsfitxy", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"NumberForm", "[", 
     RowBox[{"#", ",", "7"}], "]"}], "&"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"dist23", "=", 
  RowBox[{
   RowBox[{"Norm", "[", 
    RowBox[{
     RowBox[{"ballsfitxy", "[", 
      RowBox[{"[", "3", "]"}], "]"}], "-", 
     RowBox[{"ballsfitxy", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"NumberForm", "[", 
     RowBox[{"#", ",", "7"}], "]"}], "&"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input"],

Cell[BoxData["ballfits"], "Input"],

Cell[BoxData[
 RowBox[{"fileinS", "<>", "\"\<Ball fit coords\\n\>\"", "<>", 
  "\"\<LL ball:\\t\>\"", "<>", 
  RowBox[{"TS", "[", 
   RowBox[{"ballfits", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<\\nLR ball:\\t\>\"", "<>", 
  RowBox[{"TS", "[", 
   RowBox[{"ballfits", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<\\nUC ball:\\t\>\"", "<>", 
  RowBox[{"TS", "[", 
   RowBox[{"ballfits", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "]"}], "<>", "\"\<\\nLL to LR= \>\"", "<>", 
  RowBox[{"TS", "[", "dist12", "]"}], "<>", "\"\<\\nLL to UC = \>\"", "<>", 
  RowBox[{"TS", "[", "dist13", "]"}], "<>", "\"\<\\nLR to UC = \>\"", "<>", 
  RowBox[{"TS", "[", "dist23", "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"fileinS", "<>", "\"\<_ballseps.txt\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
    "fileinS", "<>", "\"\<Ball fit coords\\n\>\"", "<>", 
     "\"\<LL ball:\\t\>\"", "<>", 
     RowBox[{"TS", "[", 
      RowBox[{"ballfits", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<\\nLR ball:\\t\>\"", 
     "<>", 
     RowBox[{"TS", "[", 
      RowBox[{"ballfits", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<\\nUC ball:\\t\>\"", 
     "<>", 
     RowBox[{"TS", "[", 
      RowBox[{"ballfits", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "]"}], "<>", "\"\<\\nLL to LR= \>\"", "<>", 
     RowBox[{"TS", "[", "dist12", "]"}], "<>", "\"\<\\nLL to UC = \>\"", "<>", 
     RowBox[{"TS", "[", "dist13", "]"}], "<>", "\"\<\\nLR to UC = \>\"", "<>", 
     RowBox[{"TS", "[", "dist23", "]"}]}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "CellGroup"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{
  "\"\<Output lateral ball separations\>\"", ",", "\[IndentingNewLine]", 
   RowBox[{
   "fileinS", "<>", "\"\<Ball fit coords\\n\>\"", "<>", "\"\<LL ball:\\t\>\"",
     "<>", 
    RowBox[{"TS", "[", 
     RowBox[{"ballfits", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<\\nLR ball:\\t\>\"", "<>", 
    RowBox[{"TS", "[", 
     RowBox[{"ballfits", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<\\nUC ball:\\t\>\"", "<>", 
    RowBox[{"TS", "[", 
     RowBox[{"ballfits", "[", 
      RowBox[{"[", "3", "]"}], "]"}], "]"}], "<>", "\"\<\\nLL to LR= \>\"", "<>", 
    RowBox[{"TS", "[", "dist12", "]"}], "<>", "\"\<\\nLL to UC = \>\"", "<>", 
    
    RowBox[{"TS", "[", "dist13", "]"}], "<>", "\"\<\\nLR to UC = \>\"", "<>", 
    
    RowBox[{"TS", "[", "dist23", "]"}]}]}], "]"}]], "Input"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["7. End of BAL section. Work on RFT now.", "Subtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"vp", "=", "Front"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"RFTplt", "=", 
  RowBox[{"ListPointPlot3D", "[", 
   RowBox[{"RFTdata", ",", 
    RowBox[{"PlotRange", "->", "All"}], ",", 
    RowBox[{"ViewPoint", "->", 
     RowBox[{"Dynamic", "[", "vp", "]"}]}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
    RowBox[{"ImageSize", "->", "400"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<Xval\>\"", ",", "\"\<Yval\>\"", ",", "\"\<\>\""}], "}"}]}],
     ",", 
    RowBox[{"PlotLabel", "->", 
     RowBox[{"fileinS", "<>", "\"\<\\nraw RAFT data\>\""}]}]}], 
   "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell["\<\
Now trim outliers more than some value away fom the fit plane value.
First subtract plane fit to the full RAFT data. NEW VERSION for flatness stats\
\>", "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RFTflatplt", "=", "RFTplt"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Required", " ", "for", " ", "first", " ", "pass", " ", "thru", " ", 
    "iteration"}], " ", "*)"}]}]], "Input"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xminR", ",", "xmaxR"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"xmin", ",", "xmax"}], "}"}]}], ";", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"yminR", ",", "ymaxR"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"ymin", ",", "ymax"}], "}"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell["\<\
Iterate from here. Clean up RFT points, removing outliers. MUST EXECUTE THIS \
SECTION.\
\>", "Subsubsection",
 CellTags->"RFTdata iterate restart"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fitbasis", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "x", ",", "y"}], "}"}]}], ";", 
  RowBox[{"fitidx", "=", "\"\<1,1\>\""}], ";"}], "\n", 
 RowBox[{"fitord$", "=", 
  RowBox[{"StringTake", "[", 
   RowBox[{
    RowBox[{"ToString", "[", "fitbasis", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", 
      RowBox[{"-", "2"}]}], "}"}]}], "]"}]}]}], "Input"],

Cell["Fit a plane to the raw raft points in MCS.", "Text"],

Cell[BoxData[
 RowBox[{"Length", "[", "RFTdata", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RFTfit", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"Fit", "[", 
   RowBox[{"RFTdata", ",", "fitbasis", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"vp1", "=", "Front"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RFTfitplt", "=", 
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"RFTfit", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "xminR", ",", "xmaxR"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "yminR", ",", "ymaxR"}], "}"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"\"\<RFTfit=\>\"", "<>", 
       RowBox[{"TS", "[", 
        RowBox[{"RFTfit", "[", 
         RowBox[{"x", ",", "y"}], "]"}], "]"}]}]}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<X\>\"", ",", "\"\<Y\>\"", ",", "\"\<Z\>\""}], "}"}]}], 
     ",", 
     RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"Opacity", "[", "0.5", "]"}]}], ",", 
     RowBox[{"ViewPoint", "->", 
      RowBox[{"Dynamic", "[", "vp1", "]"}]}]}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"ValueQ", "[", "RFTflatplt", "]"}], ",", 
   RowBox[{"RFTrawD1fit", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"RFTfitplt", ",", "RFTflatplt", ",", 
      RowBox[{"ViewPoint", "\[Rule]", "Front"}]}], "]"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ToString", "[", "fileinS", "]"}], "<>", "\"\<_\>\"", "<>", 
    "\"\<RFTrawFit.tiff\>\""}], ",", "RFTrawD1fit", ",", 
   RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
   RowBox[{"ImageResolution", "->", "100"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{"\"\<Raft raw with plane fit\>\"", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ToString", "[", "fileinS", "]"}], "<>", "\"\<_\>\"", "<>", 
      "\"\<RFTrawFit.tiff\>\""}], ",", "RFTrawD1fit", ",", 
     RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
     RowBox[{"ImageResolution", "->", "100"}]}], "]"}], ",", 
   RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}]], "Input"],

Cell["Convert the resids after subtracting the fit to microns.", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RAFTresids", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RFTdata", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"RFTdata", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"1000", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"RFTdata", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "3"}], "]"}], "]"}], "-", 
          RowBox[{"RFTfit", "[", 
           RowBox[{
            RowBox[{"RFTdata", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"RFTdata", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}]}], ")"}]}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "RFTdata", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"Length", "[", "RFTdata", "]"}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],

Cell[BoxData[
 RowBox[{"ListPointPlot3D", "[", 
  RowBox[{"RAFTresids", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLabel", "->", 
    RowBox[{"fileinS", "<>", "\"\<\\nRAFT Flatness, sd= \>\"", "<>", 
     RowBox[{"TS", "[", 
      RowBox[{"sdRFT", "//", 
       RowBox[{
        RowBox[{"NumberForm", "[", 
         RowBox[{"#", ",", "3"}], "]"}], "&"}]}], "]"}]}]}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<Y- edge\>\"", ",", "\"\<X- edge\>\"", ",", "\"\<Z\>\""}], 
     "}"}]}], ",", 
   RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"Opacity", "[", "0.5", "]"}]}], ",", 
   RowBox[{"ViewPoint", "->", 
    RowBox[{"Dynamic", "[", "vp1", "]"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Short", "[", "RAFTresids", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RAFTresidsZ", "=", 
    RowBox[{
     RowBox[{"RAFTresids", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", "3", "}"}]}], "]"}], "]"}], "//", "Flatten"}]}], ";"}], 
  " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"extract", " ", "the", " ", "z"}], "-", "values"}], 
   "*)"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Mean", "[", "RAFTresidsZ", "]"}], ",", 
   RowBox[{"Median", "[", "RAFTresidsZ", "]"}], ",", 
   RowBox[{"sdRFT", "=", 
    RowBox[{"StandardDeviation", "[", "RAFTresidsZ", "]"}]}]}], 
  "}"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],

Cell[BoxData[
 RowBox[{
  RowBox[{"qlist", "=", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0.995", ",", "0.975", ",", "0.75", ",", "0.5", ",", "0.25", 
     ",", "0.025", ",", "0.005", ",", "0"}], "}"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"RFTfltq", "=", 
  RowBox[{"Quantile", "[", 
   RowBox[{"RAFTresidsZ", ",", "qlist"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fPV100", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"RFTfltq", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "-", 
     RowBox[{"RFTfltq", "[", 
      RowBox[{"[", 
       RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}]}], ";", 
  RowBox[{"fPV99", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"RFTfltq", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "-", 
     RowBox[{"RFTfltq", "[", 
      RowBox[{"[", 
       RowBox[{"-", "2"}], "]"}], "]"}]}], ")"}]}], ";", 
  RowBox[{"fPV95", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"RFTfltq", "[", 
      RowBox[{"[", "3", "]"}], "]"}], "-", 
     RowBox[{"RFTfltq", "[", 
      RowBox[{"[", 
       RowBox[{"-", "3"}], "]"}], "]"}]}], ")"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"raftflathist", "=", 
    RowBox[{"Histogram", "[", 
     RowBox[{"RAFTresidsZ", ",", "50", ",", 
      RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"fileinS", "<>", "\"\<\\nRaft FLATness, sdev= \>\"", "<>", 
        RowBox[{"TS", "[", 
         RowBox[{"sdRFT", "//", 
          RowBox[{
           RowBox[{"NumberForm", "[", 
            RowBox[{"#", ",", "3"}], "]"}], "&"}]}], "]"}], "<>", 
        "\"\<\\nPV99= \>\"", "<>", 
        RowBox[{"TS", "[", 
         RowBox[{"fPV99", "//", 
          RowBox[{
           RowBox[{"NumberForm", "[", 
            RowBox[{"#", ",", "3"}], "]"}], "&"}]}], "]"}], "<>", 
        "\"\<, PV95= \>\"", "<>", 
        RowBox[{"TS", "[", 
         RowBox[{"fPV95", "//", 
          RowBox[{
           RowBox[{"NumberForm", "[", 
            RowBox[{"#", ",", "3"}], "]"}], "&"}]}], "]"}], "<>", 
        "\"\<, median= \>\"", "<>", 
        RowBox[{"TS", "[", 
         RowBox[{
          RowBox[{"RFTfltq", "[", 
           RowBox[{"[", "5", "]"}], "]"}], "//", 
          RowBox[{
           RowBox[{"NumberForm", "[", 
            RowBox[{"#", ",", "3"}], "]"}], "&"}]}], "]"}]}]}]}], "]"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "These", " ", "are", " ", "the", " ", "residuals", " ", "after", " ", 
    "removing", " ", "plane", " ", "fit"}], "*)"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],

Cell[BoxData[
 RowBox[{"qtableFLAT", "=", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{"qlist", ",", "RFTfltq"}], "}"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Prepend", "[", 
   RowBox[{"qtableFLAT", ",", 
    RowBox[{"{", 
     RowBox[{"fileinS", "<>", "\"\<, Quantiles\>\""}], "}"}]}], "]"}], "//", 
  "TableForm"}]], "Input"],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"fileinS", "<>", "\"\<_RFTflat_quant.txt\>\""}], ",", 
   RowBox[{"Prepend", "[", 
    RowBox[{"qtableFLAT", ",", 
     RowBox[{"{", 
      RowBox[{"fileinS", "<>", "\"\<, Quantiles\>\""}], "}"}]}], "]"}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Export FLAT Quantile table file\>\"", ",", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"fileinS", "<>", "\"\<_RFTflat_quant.txt\>\""}], ",", 
      RowBox[{"Prepend", "[", 
       RowBox[{"qtableFLAT", ",", 
        RowBox[{"{", 
         RowBox[{"fileinS", "<>", "\"\<, Quantiles\>\""}], "}"}]}], "]"}]}], 
     "]"}]}], "]"}],
  FontColor->RGBColor[1, 0, 1]]], "Input"],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"raftflathist", ",", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"MousePosition", "[", "\"\<Graphics\>\"", "]"}], "]"}]}], 
  "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"StringDrop", "[", 
     RowBox[{"fileinS", ",", "0"}], "]"}], "<>", 
    "\"\<_RAFT_Flat_hist.tiff\>\""}], ",", "raftflathist", ",", 
   RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
   RowBox[{"ImageResolution", "->", "100"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{"\"\<Output trimmed RAFT flat histgram plt\>\"", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"StringDrop", "[", 
       RowBox[{"fileinS", ",", "0"}], "]"}], "<>", 
      "\"\<_RAFT_Flat_hist.tiff\>\""}], ",", "raftflathist", ",", 
     RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
     RowBox[{"ImageResolution", "->", "100"}]}], "]"}], ",", 
   RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}]], "Input"],

Cell["Trim  the XYZ data lists", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"threshRmin", ",", "threshRmax"}], "}"}], "=", 
  RowBox[{"Input", "[", 
   RowBox[{
   "\"\<Enter {min,max} threshold values for trimming bad RAFT points.\>\"", 
    ",", 
    RowBox[{"Quantile", "[", 
     RowBox[{"RAFTresidsZ", ",", 
      RowBox[{"{", 
       RowBox[{"0.00", ",", "1."}], "}"}]}], "]"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RFTdatatrim", "=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Drop", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Reap", "[", "\[IndentingNewLine]", " ", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"RFTdata", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "3"}], "]"}], "]"}], "-", 
              RowBox[{"RFTfit", "[", 
               RowBox[{
                RowBox[{"RFTdata", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"RFTdata", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}]}], "<", 
             RowBox[{"threshRmax", "/", "1000"}]}], " ", "&&", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"RFTdata", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "3"}], "]"}], "]"}], "-", 
              RowBox[{"RFTfit", "[", 
               RowBox[{
                RowBox[{"RFTdata", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"RFTdata", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}]}], ">", 
             RowBox[{"threshRmin", "/", "1000"}]}]}], ",", 
           RowBox[{"Sow", "[", 
            RowBox[{"RFTdata", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "RFTdata", "]"}]}], "}"}]}], "]"}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", "1"}], "]"}],
     "//", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"#", ",", "2"}], "]"}], "&"}]}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],

Cell[BoxData[
 RowBox[{"RFTflatplt", "=", 
  RowBox[{"ListPointPlot3D", "[", 
   RowBox[{"RFTdatatrim", ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"PlotLabel", "->", 
     RowBox[{"fileinS", "<>", "\"\<\\nRAFT Flatness, sd= \>\"", "<>", 
      RowBox[{"TS", "[", 
       RowBox[{"sdRFT", "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", "3"}], "]"}], "&"}]}], "]"}]}]}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<Y- edge\>\"", ",", "\"\<X- edge\>\"", ",", "\"\<Z\>\""}], 
      "}"}]}], ",", 
    RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"Opacity", "[", "0.5", "]"}]}], ",", 
    RowBox[{"ViewPoint", "->", 
     RowBox[{"Dynamic", "[", "vp1", "]"}]}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Raft Flatness\>\"", ",", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"StringDrop", "[", 
        RowBox[{"fileinS", ",", "0"}], "]"}], "<>", "\"\<_\>\"", "<>", 
       "\"\<RFTflat.tiff\>\""}], ",", "RFTflatplt", ",", 
      RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
      RowBox[{"ImageResolution", "->", "100"}]}], "]"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}], ";"}]], "Input"],

Cell["Set the RFTdata to the trimmed data.", "Text"],

Cell[BoxData[
 RowBox[{"Length", "[", "RFTdatatrim", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RFTdata", "=", "RFTdatatrim"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"Length", "[", "RFTdata", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xvalsR", "=", 
   RowBox[{
    RowBox[{"Take", "[", 
     RowBox[{"RFTdata", ",", "All", ",", 
      RowBox[{"{", "1", "}"}]}], "]"}], "//", "Flatten"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"yvalsR", "=", 
   RowBox[{
    RowBox[{"Take", "[", 
     RowBox[{"RFTdata", ",", "All", ",", 
      RowBox[{"{", "2", "}"}]}], "]"}], "//", "Flatten"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"zvalsR", "=", 
   RowBox[{
    RowBox[{"Take", "[", 
     RowBox[{"RFTdata", ",", "All", ",", 
      RowBox[{"{", "3", "}"}]}], "]"}], "//", "Flatten"}]}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{
  "\"\<ABORT and Click to iterate RFTdata trim to recalc RFTfit eqn\>\"", ",", 
   RowBox[{"NotebookLocate", "[", "\"\<RFTdata iterate restart\>\"", "]"}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Interrupt", "[", "]"}]], "Input"],

Cell["Continue from here after RAFT pts are trimmed.", "Subsubsection"],

Cell[BoxData[
 RowBox[{"Length", "[", "RFTdata", "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xvalsR", "=", 
   RowBox[{
    RowBox[{"Take", "[", 
     RowBox[{"RFTdata", ",", "All", ",", 
      RowBox[{"{", "1", "}"}]}], "]"}], "//", "Flatten"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"yvalsR", "=", 
   RowBox[{
    RowBox[{"Take", "[", 
     RowBox[{"RFTdata", ",", "All", ",", 
      RowBox[{"{", "2", "}"}]}], "]"}], "//", "Flatten"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"zvalsR", "=", 
   RowBox[{
    RowBox[{"Take", "[", 
     RowBox[{"RFTdata", ",", "All", ",", 
      RowBox[{"{", "3", "}"}]}], "]"}], "//", "Flatten"}]}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{"xrangeR", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"xminR", "=", 
      RowBox[{"Min", "[", "xvalsR", "]"}]}], ",", 
     RowBox[{"xmaxR", "=", 
      RowBox[{"Max", "[", "xvalsR", "]"}]}]}], "}"}], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{"yrangeR", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"yminR", "=", 
      RowBox[{"Min", "[", "yvalsR", "]"}]}], ",", 
     RowBox[{"ymaxR", "=", 
      RowBox[{"Max", "[", "yvalsR", "]"}]}]}], "}"}], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{"zrangeR", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"zminR", "=", 
      RowBox[{"Min", "[", "zvalsR", "]"}]}], ",", 
     RowBox[{"zmaxR", "=", 
      RowBox[{"Max", "[", "zvalsR", "]"}]}], ",", 
     RowBox[{"Mean", "[", "zvalsR", "]"}], ",", 
     RowBox[{"StandardDeviation", "[", "zvalsR", "]"}]}], "}"}], "//", 
   "N"}]}]}], "Input"],

Cell["\<\
Subtract ball datum from RFTdata to get absolute Z surface points. Compute \
quantiles from this AbsZ point cloud.\
\>", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RAFTabsZpts", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RFTdata", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"RFTdata", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"RFTdata", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "3"}], "]"}], "]"}], "-", 
        RowBox[{"BALdatum", "[", 
         RowBox[{
          RowBox[{"RFTdata", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"RFTdata", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}], "-", "29.81"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "RFTdata", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"RAFTabsZptplt", "=", 
  RowBox[{"ListPointPlot3D", "[", 
   RowBox[{"RAFTabsZpts", ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"PlotLabel", "->", 
     RowBox[{"fileinS", "<>", "\"\<_AbsZ\>\""}]}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<Y- edge\>\"", ",", "\"\<X- edge\>\"", ",", "\"\<Z\>\""}], 
      "}"}]}], ",", 
    RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"Opacity", "[", "0.5", "]"}]}], ",", 
    RowBox[{"ViewPoint", "->", 
     RowBox[{"Dynamic", "[", "vp1", "]"}]}]}], "]"}]}]], "Input"],

Cell["Now do raft AbsZ", "Subsubsection"],

Cell["\<\
Subtract the ball datum plane from the raw raft equation to correct for \
piston and tilt due to OGP fixturing.
Left with raft nomhgt. This is the expression for the surface profile on the \
MF03 fixture.
Now in microns wrt datum A surface\
\>", "Text"],

Cell[BoxData[
 RowBox[{"RFTfit", "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"BALdatum", "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RFTfithgt", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"1000", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"RFTfit", "[", 
       RowBox[{"x", ",", "y"}], "]"}], "-", 
      RowBox[{"BALdatum", "[", 
       RowBox[{"x", ",", "y"}], "]"}], " ", "-", "29.81"}], ")"}]}], "//", 
   "Simplify"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"RFTfithgt", "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"meannomhgt", "=", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"RFTfithgt", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "xminR", ",", "xmaxR"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "yminR", ",", "ymaxR"}], "}"}]}], "]"}], "/", 
   RowBox[{"Integrate", "[", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "xminR", ",", "xmaxR"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "yminR", ",", "ymaxR"}], "}"}]}], "]"}]}]}]], "Input"],

Cell[CellGroupData[{

Cell["\<\
Subtract ball datum from RFTdata to get absolute Z surface points. Compute \
quantiles from this AbsZ point cloud.
Compute points relative to the datum A plane in microns.\
\>", "Subsubsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],

Cell[BoxData[
 RowBox[{
  RowBox[{"RAFTabsZpts", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RFTdata", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"RFTdata", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"1000", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"RFTdata", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "3"}], "]"}], "]"}], "-", 
          RowBox[{"BALdatum", "[", 
           RowBox[{
            RowBox[{"RFTdata", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"RFTdata", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}], "-", "29.81"}], 
         ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "RFTdata", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],

Cell[BoxData[
 RowBox[{
  RowBox[{"vp1", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"RAFTabsZptplt", "=", 
  RowBox[{"ListPointPlot3D", "[", 
   RowBox[{"RAFTabsZpts", ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"PlotLabel", "->", 
     RowBox[{"fileinS", "<>", "\"\<_AbsZpts\>\""}]}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<Y- edge\>\"", ",", "\"\<X- edge\>\"", ",", "\"\<Z\>\""}], 
      "}"}]}], ",", 
    RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"Opacity", "[", "0.5", "]"}]}], ",", 
    RowBox[{"ViewPoint", "->", 
     RowBox[{"Dynamic", "[", "vp1", "]"}]}]}], "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"fileinS", "<>", "\"\<_\>\"", "<>", "\"\<RFTabsZpts.tiff\>\""}], 
   ",", "RAFTabsZptplt", ",", 
   RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
   RowBox[{"ImageResolution", "->", "100"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{"\"\<Output RFT rel hgt to 29.81\>\"", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"fileinS", "<>", "\"\<_\>\"", "<>", "\"\<RFTabsZpts.tiff\>\""}], 
     ",", "RAFTabsZptplt", ",", 
     RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
     RowBox[{"ImageResolution", "->", "100"}]}], "]"}], ",", 
   RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}]], "Input"],

Cell["Now compute raft AbsZ statistics.", "Subsubsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],

Cell[BoxData[
 RowBox[{
  RowBox[{"RFTabsZptsvals", "=", 
   RowBox[{
    RowBox[{"Take", "[", 
     RowBox[{"RAFTabsZpts", ",", "All", ",", 
      RowBox[{"{", "3", "}"}]}], "]"}], "//", "Flatten"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],

Cell[BoxData[
 RowBox[{
  RowBox[{"RFTabsZptsq", "=", 
   RowBox[{"Quantile", "[", 
    RowBox[{"RFTabsZptsvals", ",", "qlist"}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],

Cell[BoxData[
 RowBox[{"qtableABSZpts", "=", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{"qlist", ",", "RFTabsZptsq"}], "}"}], "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],

Cell[BoxData[
 RowBox[{"qtableABSZpts$", "=", 
  RowBox[{"TS", "[", 
   RowBox[{"qtableABSZpts", "//", 
    RowBox[{
     RowBox[{"TableForm", "[", 
      RowBox[{"#", ",", 
       RowBox[{"TableSpacing", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "6"}], "}"}]}]}], "]"}], "&"}]}], "]"}]}]], "Input",\

 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"fileinS", "<>", "\"\<_RFTAbsZpts_quant.txt\>\""}], ",", 
   RowBox[{
   "fileinS", "<>", "\"\<\\tQuantiles\>\"", "<>", "qtableABSZpts$"}]}], 
  "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],

Cell[BoxData[
 StyleBox[
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Export AbsZ Quantile table file\>\"", ",", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"fileinS", "<>", "\"\<_RFTAbsZpts_quant.txt\>\""}], ",", 
      RowBox[{
      "fileinS", "<>", "\"\<\\tQuantiles\>\"", "<>", "qtableABSZpts$"}]}], 
     "]"}]}], "]"}],
  FontColor->RGBColor[1, 0, 1]]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rPV100pts", "=", 
   RowBox[{
    RowBox[{"RFTabsZptsq", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "-", 
    RowBox[{"RFTabsZptsq", "[", 
     RowBox[{"[", 
      RowBox[{"-", "1"}], "]"}], "]"}]}]}], ";", 
  RowBox[{"rPV99pts", "=", 
   RowBox[{
    RowBox[{"RFTabsZptsq", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "-", 
    RowBox[{"RFTabsZptsq", "[", 
     RowBox[{"[", 
      RowBox[{"-", "2"}], "]"}], "]"}]}]}], ";", 
  RowBox[{"rPV95pts", "=", 
   RowBox[{
    RowBox[{"RFTabsZptsq", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "-", 
    RowBox[{"RFTabsZptsq", "[", 
     RowBox[{"[", 
      RowBox[{"-", "3"}], "]"}], "]"}]}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],

Cell[BoxData[
 RowBox[{"RFTabsZptshistplt", "=", 
  RowBox[{"Histogram", "[", 
   RowBox[{"RFTabsZptsvals", ",", "50", ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{
     "fileinS", "<>", "\"\<\\nRaft AbsZpts wrt Datum A\>\"", "<>", 
      "\"\<\\nPV99= \>\"", "<>", 
      RowBox[{"TS", "[", "rPV99pts", "]"}], "<>", "\"\< PV95= \>\"", "<>", 
      RowBox[{"TS", "[", "rPV95pts", "]"}], "<>", "\"\< median= \>\"", "<>", 
      RowBox[{"TS", "[", 
       RowBox[{"RFTabsZptsq", "[", 
        RowBox[{"[", "5", "]"}], "]"}], "]"}]}]}]}], "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"TS", "[", "fileinS", "]"}], "<>", "\"\<_\>\"", "<>", 
    "\"\<RFTabsZpts_hist.tiff\>\""}], ",", "RFTabsZptshistplt", ",", 
   RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
   RowBox[{"ImageResolution", "->", "100"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{"\"\<Output AbsZ histogram\>\"", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"TS", "[", "fileinS", "]"}], "<>", "\"\<_\>\"", "<>", 
      "\"\<RFTabsZpts_hist.tiff\>\""}], ",", "RFTabsZptshistplt", ",", 
     RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
     RowBox[{"ImageResolution", "->", "100"}]}], "]"}], ",", 
   RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],

Cell["\<\
Plot the raft fit plane relative to the nominal raft height, 29.81mm.\
\>", "Text"],

Cell[BoxData[
 RowBox[{"RFTfithgtplt", "=", 
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"RFTfithgt", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "xminR", ",", "xmaxR"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "yminR", ",", "ymaxR"}], "}"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{
     "fileinS", "<>", 
      "\"\<\\nRFT fit offset from 29.810\\nMean height = \>\"", "<>", 
      RowBox[{"TS", "[", 
       RowBox[{"meannomhgt", "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", "3"}], "]"}], "&"}]}], "]"}]}]}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<Y- edge\>\"", ",", "\"\<X- edge\>\"", ",", "\"\<Z\>\""}], 
      "}"}]}], ",", 
    RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"Opacity", "[", "0.5", "]"}]}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Left", ",", "Above"}], "}"}]}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ToString", "[", 
     RowBox[{"StringDrop", "[", 
      RowBox[{"fileinS", ",", "0"}], "]"}], "]"}], "<>", "\"\<_\>\"", "<>", 
    "\"\<RFTfithgt.tiff\>\""}], ",", "RFTfithgtplt", ",", 
   RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
   RowBox[{"ImageResolution", "->", "100"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{"\"\<Output RFT rel hgt to 29.81\>\"", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ToString", "[", 
       RowBox[{"StringDrop", "[", 
        RowBox[{"fileinS", ",", "0"}], "]"}], "]"}], "<>", "\"\<_\>\"", "<>", 
      "\"\<RFTfithgt.tiff\>\""}], ",", "RFTfithgtplt", ",", 
     RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
     RowBox[{"ImageResolution", "->", "100"}]}], "]"}], ",", 
   RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}]], "Input"],

Cell["Compute height of raft surface above ball centers.", "Text"],

Cell[BoxData["ballfits"], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bLL", "=", 
   RowBox[{"ballfits", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], ";", 
  RowBox[{"bLR", "=", 
   RowBox[{"ballfits", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], ";", 
  RowBox[{"bUC", "=", 
   RowBox[{"ballfits", "[", 
    RowBox[{"[", 
     RowBox[{"3", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rLLhgt", "=", 
   RowBox[{"RFTfithgt", "[", 
    RowBox[{
     RowBox[{"bLL", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"bLL", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
  RowBox[{"rLRhgt", "=", 
   RowBox[{"RFTfithgt", "[", 
    RowBox[{
     RowBox[{"bLR", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"bLR", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
  RowBox[{"rUChgt", "=", 
   RowBox[{"RFTfithgt", "[", 
    RowBox[{
     RowBox[{"bUC", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"bUC", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"rLLhgt", ",", "rLRhgt", ",", "rUChgt"}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"fileinS", "<>", "\"\<\\nMean raft height = \>\"", "<>", 
  RowBox[{"TS", "[", "meannomhgt", "]"}], "<>", 
  "\"\<\\n Datum plane eqn\\n\>\"", "<>", 
  RowBox[{"TS", "[", 
   RowBox[{"BALdatum", "[", 
    RowBox[{"x", ",", "y"}], "]"}], "]"}], "<>", 
  "\"\<\\n Raft fit eqn:\\n\>\"", "<>", 
  RowBox[{"TS", "[", 
   RowBox[{"RFTfit", "[", 
    RowBox[{"x", ",", "y"}], "]"}], "]"}], "<>", 
  "\"\<\\n PV from pt cloud stats\>\"", "<>", "\"\<\\nPV100= \>\"", "<>", 
  RowBox[{"TS", "[", "rPV100pts", "]"}], "<>", "\"\<\\nPV99 = \>\"", "<>", 
  RowBox[{"TS", "[", "rPV99pts", "]"}], "<>", "\"\<\\nPV95 = \>\"", "<>", 
  RowBox[{"TS", "[", "rPV95pts", "]"}], "<>", 
  "\"\<\\n Raft Abs height above ball centers\>\"", "<>", 
  "\"\<\\nLL ball = \>\"", "<>", 
  RowBox[{"TS", "[", "rLLhgt", "]"}], "<>", "\"\<\\nLR ball = \>\"", "<>", 
  RowBox[{"TS", "[", "rLRhgt", "]"}], "<>", "\"\<\\nUC ball = \>\"", "<>", 
  RowBox[{"TS", "[", "rUChgt", "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"fileinS", "<>", "\"\<_RFThgts.txt\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"fileinS", "<>", "\"\<\\nMean raft height = \>\"", "<>", 
    RowBox[{"TS", "[", "meannomhgt", "]"}], "<>", 
    "\"\<\\n Datum plane eqn\\n\>\"", "<>", 
    RowBox[{"TS", "[", 
     RowBox[{"BALdatum", "[", 
      RowBox[{"x", ",", "y"}], "]"}], "]"}], "<>", 
    "\"\<\\n Raft fit eqn:\\n\>\"", "<>", 
    RowBox[{"TS", "[", 
     RowBox[{"RFTfit", "[", 
      RowBox[{"x", ",", "y"}], "]"}], "]"}], "<>", 
    "\"\<\\n PV from pt cloud stats\>\"", "<>", "\"\<\\nPV100= \>\"", "<>", 
    RowBox[{"TS", "[", "rPV100pts", "]"}], "<>", "\"\<\\nPV99 = \>\"", "<>", 
    RowBox[{"TS", "[", "rPV99pts", "]"}], "<>", "\"\<\\nPV95 = \>\"", "<>", 
    RowBox[{"TS", "[", "rPV95pts", "]"}], "<>", 
    "\"\<\\n Raft Abs height above ball centers\>\"", "<>", 
    "\"\<\\nLL ball = \>\"", "<>", 
    RowBox[{"TS", "[", "rLLhgt", "]"}], "<>", "\"\<\\nLR ball = \>\"", "<>", 
    RowBox[{"TS", "[", "rLRhgt", "]"}], "<>", "\"\<\\nUC ball = \>\"", "<>", 
    RowBox[{"TS", "[", "rUChgt", "]"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{
  "\"\<Output raft heights at ball locs\>\"", ",", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"fileinS", "<>", "\"\<_RFThgts.txt\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"fileinS", "<>", "\"\<\\nMean raft height = \>\"", "<>", 
      RowBox[{"TS", "[", "meannomhgt", "]"}], "<>", 
      "\"\<\\n Datum plane eqn\\n\>\"", "<>", 
      RowBox[{"TS", "[", 
       RowBox[{"BALdatum", "[", 
        RowBox[{"x", ",", "y"}], "]"}], "]"}], "<>", 
      "\"\<\\n Raft fit eqn:\\n\>\"", "<>", 
      RowBox[{"TS", "[", 
       RowBox[{"RFTfit", "[", 
        RowBox[{"x", ",", "y"}], "]"}], "]"}], "<>", 
      "\"\<\\n PV from pt cloud stats\>\"", "<>", "\"\<\\nPV100= \>\"", "<>", 
      
      RowBox[{"TS", "[", "rPV100pts", "]"}], "<>", "\"\<\\nPV99 = \>\"", "<>", 
      RowBox[{"TS", "[", "rPV99pts", "]"}], "<>", "\"\<\\nPV95 = \>\"", "<>", 
      
      RowBox[{"TS", "[", "rPV95pts", "]"}], "<>", 
      "\"\<\\n Raft Abs height above ball centers\>\"", "<>", 
      "\"\<\\nLL ball = \>\"", "<>", 
      RowBox[{"TS", "[", "rLLhgt", "]"}], "<>", "\"\<\\nLR ball = \>\"", "<>", 
      RowBox[{"TS", "[", "rLRhgt", "]"}], "<>", "\"\<\\nUC ball = \>\"", "<>", 
      RowBox[{"TS", "[", "rUChgt", "]"}]}]}], "]"}]}], "]"}]], "Input"]
}, Open  ]]
}, Open  ]],

Cell["\<\
DATUM is the surface fit to the 3 ball centers.
FID is the surface fit to the 2 reference flats.
   The coordinate system X,Y origin for all measurements is the global OGP \
system initialization coordinates. The Z origin is on the top surface of the \
front fiducial at a specific x,y location.
   The DATUM and FID surfaces are measured during the calibration runs. The \
plane fit equations to these surfaces are used during the measurement of the \
raft surface. Need to check to see how repeatable the fit equations are \
between calibration runs when no changes are made to the location of the \
fixtures. The raft measurement depends on the calibration surfaces remaining \
unchanged.
\t(BALdatum - cFID) = constant over time.
This difference references the datum surface to the fiducial surface.
   Now measure the raft and the fiducial surface:
\t(mRaft - mFID) is the raft surface referenced to the fiducial surface.
   Taking the difference:
\t(mRaft - mFID) - (BALdatum - cFID) = mRaft - BALdatum
because this assumes that the fiducial surface fits are the same.
    This last expression defines the absolute raft height relative to the \
datum plane. The nominal height of the raft above the datum is 29.81mm, so \
this number can be subtracted from the absolute height to get the residual \
absolute height error of the raft from the nominal surface plane.\
\>", "Text"],

Cell[CellGroupData[{

Cell["Limbo", "Section"],

Cell[CellGroupData[{

Cell["\<\
0.1.1. Define statistical functions for profile data. (Inactive)\
\>", "Section",
 CellMargins->{{Inherited, 73}, {Inherited, Inherited}},
 AspectRatioFixed->True,
 $CellContext`InitializationGroup -> True],

Cell[BoxData[
 RowBox[{
  RowBox[{"hrange", "[", 
   RowBox[{"binlist_", ",", "min_", ",", "max_"}], "]"}], ":=", 
  RowBox[{"Quantile", "[", 
   RowBox[{"binlist", ",", 
    RowBox[{"{", 
     RowBox[{"min", ",", "max"}], "}"}]}], "]"}]}]], "Input",
 Evaluatable->False],

Cell["\<\
MAKE SURE THE FOURIER OPTIONS ARE SET CORRECTLY EACH TIME THE FT IS DONE.\
\>", "Text",
 CellChangeTimes->{{3.4127080426338873`*^9, 3.412708073368338*^9}, {
  3.416002115210246*^9, 3.416002130754343*^9}},
 $CellContext`InitializationGroup -> True],

Cell["\<\
Define the biased stddev functiion. The built in StdDev fcn has n-1 in the \
denom. Change it to n.\
\>", "Text",
 CellChangeTimes->{{3.411244601232059*^9, 3.4112446126083603`*^9}, {
  3.411401892850431*^9, 3.411401941242345*^9}, {3.416002115210606*^9, 
  3.416002130754509*^9}},
 $CellContext`InitializationGroup -> True],

Cell["\<\
Now compute std dev in different ways: The default StandardDeviation is the \
unbiased version, with n-1 in the denominator.\
\>", "Text",
 CellChangeTimes->{{3.411244524906001*^9, 3.411244572336635*^9}, {
  3.416002115210808*^9, 3.4160021307546577`*^9}},
 $CellContext`InitializationGroup -> True],

Cell[BoxData[
 RowBox[{"sdevBiased", "=."}]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.411401237860261*^9, 3.411401238282799*^9}, {
  3.416002115211028*^9, 3.4160021307548733`*^9}},
 $CellContext`InitializationGroup -> True],

Cell[BoxData[
 RowBox[{
  RowBox[{"sdevUnB", "[", "in_", "]"}], ":=", 
  RowBox[{"N", "[", 
   RowBox[{"StandardDeviation", "[", "in", "]"}], "]"}]}]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.411241693395444*^9, 3.411241706616735*^9}, {
  3.411242342526307*^9, 3.411242343260508*^9}, {3.4114010974523697`*^9, 
  3.411401135523253*^9}, {3.411401176892941*^9, 3.411401193755307*^9}, {
  3.4160021152112923`*^9, 3.416002130755198*^9}},
 AspectRatioFixed->True,
 $CellContext`InitializationGroup -> True],

Cell[BoxData[
 RowBox[{
  RowBox[{"sdevBiased", "[", "in_", "]"}], ":=", 
  RowBox[{
   RowBox[{"StandardDeviation", "[", "in", "]"}], 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Length", "[", "in", "]"}], "-", "1"}], ")"}], "/", 
     RowBox[{"Length", "[", "in", "]"}]}], "]"}]}]}]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.4112442966263638`*^9, 3.4112442987370358`*^9}, {
  3.411244836691388*^9, 3.411244844963024*^9}, {3.411322834343668*^9, 
  3.41132284047543*^9}, {3.4114012049004307`*^9, 3.411401218283264*^9}, {
  3.4114018520153723`*^9, 3.411401862571908*^9}, {3.416002115211499*^9, 
  3.416002130755392*^9}},
 $CellContext`InitializationGroup -> True],

Cell[BoxData[
 RowBox[{
  RowBox[{"rmsBias", "[", "in_", "]"}], ":=", 
  RowBox[{"Sqrt", "[", 
   RowBox[{
    RowBox[{"Plus", "@@", 
     RowBox[{"(", 
      RowBox[{"in", "^", "2"}], ")"}]}], "/", 
    RowBox[{"Length", "[", "in", "]"}]}], "]"}]}]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.412705383260199*^9, 3.412705384361855*^9}, {
  3.4160021152117662`*^9, 3.416002131149736*^9}},
 $CellContext`InitializationGroup -> True],

Cell["\<\
Next is the RMS. Sum the squares, divide by N and then take the root. (Root \
of the Mean Square)\
\>", "Text",
 CellChangeTimes->{{3.416002115211948*^9, 3.4160021311499767`*^9}},
 $CellContext`InitializationGroup -> True],

Cell[BoxData[
 RowBox[{
  RowBox[{"rmsrawbiased", "=."}], ";"}]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.411401278124251*^9, 3.411401281642796*^9}, {
  3.416002115212204*^9, 3.4160021311503077`*^9}},
 $CellContext`InitializationGroup -> True],

Cell[BoxData[
 RowBox[{
  RowBox[{"rms", "[", "in_", "]"}], ":=", 
  RowBox[{"N", "[", 
   SqrtBox[
    FractionBox[
     RowBox[{"Plus", "@@", 
      SuperscriptBox[
       RowBox[{"(", "in", ")"}], "2"]}], 
     RowBox[{"Length", "[", "in", "]"}]]], "]"}]}]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.411243208755157*^9, 3.411243232177184*^9}, {
  3.411244649291259*^9, 3.4112446502894506`*^9}, {3.4114012534292316`*^9, 
  3.4114012690438137`*^9}, {3.4114013017654133`*^9, 3.4114013100998917`*^9}, {
  3.4114026774688253`*^9, 3.411402697091949*^9}, {3.416002115212399*^9, 
  3.416002131150504*^9}},
 AspectRatioFixed->True,
 $CellContext`InitializationGroup -> True],

Cell["\<\
See that one must subtract the mean from the input data first, before \
squaring, in order to compute the standard deviation correctly.\
\>", "Text",
 CellChangeTimes->{{3.416002115212542*^9, 3.416002131150723*^9}},
 $CellContext`InitializationGroup -> True],

Cell[BoxData[
 RowBox[{
  RowBox[{"sdevBruteUnBiased", "[", "in_", "]"}], ":=", 
  RowBox[{"N", "[", 
   SqrtBox[
    FractionBox[
     RowBox[{"Plus", "@@", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"in", "-", 
         RowBox[{"Mean", "[", "in", "]"}]}], ")"}], "2"]}], 
     RowBox[{
      RowBox[{"Length", "[", "in", "]"}], "-", "1"}]]], "]"}]}]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.411243259723289*^9, 3.4112432855454617`*^9}, {
  3.411244633618145*^9, 3.411244635137704*^9}, {3.4114013297411613`*^9, 
  3.411401333515849*^9}, {3.411401414885539*^9, 3.41140146711607*^9}, {
  3.411402743222232*^9, 3.411402743972342*^9}, {3.416002115212819*^9, 
  3.416002131150895*^9}},
 $CellContext`InitializationGroup -> True],

Cell[BoxData[
 RowBox[{
  RowBox[{"detrend", "[", 
   RowBox[{"anylist_", ",", "order_Integer"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"npts", ",", "xlist", ",", "fitlist", ",", "x"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"order", ">=", "0"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xlist", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          SuperscriptBox["x", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "order"}], "}"}]}], "]"}]}], ";", "\n",
        "\t\t", 
       RowBox[{"npts", "=", 
        RowBox[{"Length", "[", "anylist", "]"}]}], ";", "\n", "\t\t", 
       RowBox[{"func", "=", 
        RowBox[{"Fit", "[", 
         RowBox[{"anylist", ",", "xlist", ",", "x"}], "]"}]}], ";", "\n", 
       "\t\t", 
       RowBox[{"fitlist", "=", 
        RowBox[{"{", "}"}]}], ";", "\n", "\t\t", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"fitlist", ",", "func"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "1", ",", "npts"}], "}"}]}], "]"}], ";", "\n", 
       "\t\t", 
       RowBox[{"Return", "[", 
        RowBox[{"anylist", "-", "fitlist"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "anylist", "]"}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.416002115213029*^9, 3.416002131151075*^9}},
 AspectRatioFixed->True,
 $CellContext`InitializationGroup -> True],

Cell[CellGroupData[{

Cell["\<\
Define a RMS function to compute rms from PSD data. Input arguments are: \
psd=name of PSD list; ntot=total points in source profile; delx= physical \
increment value for each data point step; lo and hi = index value in the PSD \
list.\
\>", "Subsubsection",
 CellChangeTimes->{{3.411414167914678*^9, 3.411414349868288*^9}, {
  3.4160021152141542`*^9, 3.416002131151362*^9}},
 $CellContext`InitializationGroup -> True],

Cell[BoxData[
 RowBox[{
  RowBox[{"psd1", "[", 
   RowBox[{"in_", ",", "delx_"}], "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{"Fourier", ",", 
      RowBox[{"FourierParameters", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"nPts", "=", 
     RowBox[{"Length", "[", "in", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"FTwork", "=", 
     RowBox[{"Fourier", "[", "in", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"psd2side", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", " ", 
        RowBox[{"delx", "/", "nPts"}]}], ")"}], " ", 
      RowBox[{
       RowBox[{"Abs", "[", "FTwork", "]"}], "^", "2"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"psd1side", "=", 
     RowBox[{"Drop", "[", 
      RowBox[{"psd2side", ",", 
       RowBox[{"-", 
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"nPts", "-", "1"}], ")"}], "/", "2"}], "]"}]}]}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "Apply", " ", "bookkeeping", " ", "factors", " ", "to", " ", "end", " ", 
      "terms"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"psd1side", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "=", 
     RowBox[{
      RowBox[{"psd1side", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", "2"}]}], ";", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"EvenQ", "[", "nPts", "]"}], ",", 
      RowBox[{
       RowBox[{"psd1side", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"psd1side", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}], "/", "2"}]}], ",", "Null"}], 
     "]"}], ";", "\[IndentingNewLine]", "psd1side"}], "\[IndentingNewLine]", 
   ")"}]}]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.411239998579794*^9, 3.411239999489706*^9}, {
   3.411240067426894*^9, 3.411240068195314*^9}, {3.411240105986431*^9, 
   3.411240124259521*^9}, {3.4112403605091963`*^9, 3.411240364018433*^9}, {
   3.4113067631808987`*^9, 3.411306804987101*^9}, {3.411306835163084*^9, 
   3.411306980996332*^9}, {3.4113071433742456`*^9, 3.411307148572413*^9}, {
   3.411307342206431*^9, 3.411307357564331*^9}, 3.4113074617374363`*^9, {
   3.411307597559155*^9, 3.4113076313960333`*^9}, {3.4113080583576183`*^9, 
   3.411308090844348*^9}, {3.411402252782298*^9, 3.411402276453919*^9}, {
   3.412684056366745*^9, 3.41268405659446*^9}, {3.412684278015317*^9, 
   3.412684295445634*^9}, {3.4127073003774853`*^9, 3.4127073021599483`*^9}, {
   3.4127074572950163`*^9, 3.412707457813971*^9}, {3.4160021152145157`*^9, 
   3.4160021311517067`*^9}},
 $CellContext`InitializationGroup -> True],

Cell[BoxData[
 RowBox[{"npts", "=."}]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.412684237308547*^9, 3.4126842406138783`*^9}, {
  3.416002115214767*^9, 3.416002131151937*^9}},
 $CellContext`InitializationGroup -> True],

Cell[BoxData[
 RowBox[{
  RowBox[{"test11", "=", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8",
      ",", "9", ",", "10", ",", "11"}], "}"}]}], ";"}]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.412684322775334*^9, 3.412684339078854*^9}, {
  3.412684408017812*^9, 3.412684414942602*^9}, {3.41600211562604*^9, 
  3.416002131152116*^9}},
 $CellContext`InitializationGroup -> True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"psd1", "[", 
  RowBox[{"test11", ",", "1."}], "]"}]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.41268434397716*^9, 3.412684359190206*^9}, {
  3.4126844188414383`*^9, 3.412684418998129*^9}, {3.416002115626315*^9, 
  3.4160021311523438`*^9}},
 $CellContext`InitializationGroup -> True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "396.`", ",", "69.29288063023192`", ",", "18.816767868921506`", ",", 
   "9.629569389668012`", ",", "6.647085023145931`", ",", 
   "5.6136970880325725`"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["nPts"], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.41268436842759*^9, 3.412684375022086*^9}, {
  3.4160021156268883`*^9, 3.416002131152742*^9}},
 $CellContext`InitializationGroup -> True],

Cell[BoxData["11"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "psd2side", "]"}]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.412684397832594*^9, 3.412684402686182*^9}, {
  3.416002115627379*^9, 3.4160021311531563`*^9}},
 $CellContext`InitializationGroup -> True],

Cell[BoxData["11"], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Define a RMS function to compute rms from PSD data. Input arguments are: \
psd=name of PSD list; ntot=total points in source profile; delx= physical \
increment value for each data point step; lo and hi = index value in the PSD \
list.
NOTE: Need to know the length of the input z-vector for the ntot number. \
Can't get it from the length of the psd list. It should be the length of the \
psd2side list if this corresponds to the input psd list.\
\>", "Subsubsection",
 CellChangeTimes->{{3.411414167914678*^9, 3.411414349868288*^9}, {
  3.4126844561715612`*^9, 3.4126845856612263`*^9}, {3.416002115627934*^9, 
  3.4160021311536417`*^9}},
 $CellContext`InitializationGroup -> True],

Cell[BoxData[
 RowBox[{
  RowBox[{"rmspsdIDX", "[", 
   RowBox[{"psd_", ",", "nztot_", ",", "delx_", ",", "lo_", ",", "hi_"}], 
   "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"rmsval", "=", 
     RowBox[{"N", "[", 
      SqrtBox[
       FractionBox[
        RowBox[{"Plus", "@@", 
         RowBox[{"Take", "[", 
          RowBox[{"psd", ",", 
           RowBox[{"{", 
            RowBox[{"lo", ",", "hi"}], "}"}]}], "]"}]}], 
        RowBox[{"nztot", " ", "delx"}]]], "]"}]}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<RMS over index range [\>\"", ",", "lo", ",", "\"\<,\>\"", ",", "hi",
       ",", "\"\<] = \>\"", ",", "rmsval"}], "]"}]}], ")"}]}]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.4113155483504143`*^9, 3.411315622652503*^9}, {
  3.411317944809703*^9, 3.411317959276698*^9}, {3.412361562891111*^9, 
  3.412361567170394*^9}, {3.412684184124906*^9, 3.412684191041706*^9}, {
  3.412693067127249*^9, 3.412693068546364*^9}, {3.416002115628377*^9, 
  3.416002131160344*^9}},
 AspectRatioFixed->True,
 $CellContext`InitializationGroup -> True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rmspsd", "[", 
    RowBox[{"psd_", ",", "nztot_", ",", "delx_", ",", "lo_", ",", "hi_"}], 
    "]"}], ":=", 
   RowBox[{"N", "[", 
    SqrtBox[
     FractionBox[
      RowBox[{"Plus", "@@", 
       RowBox[{"Take", "[", 
        RowBox[{"psd", ",", 
         RowBox[{"{", 
          RowBox[{"lo", ",", "hi"}], "}"}]}], "]"}]}], 
      RowBox[{"nztot", " ", "delx"}]]], "]"}]}], ";"}]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.412361576280429*^9, 3.412361608242882*^9}, {
  3.41269307849756*^9, 3.41269307919328*^9}, {3.412705457595612*^9, 
  3.412705460258893*^9}, {3.416002115628628*^9, 3.416002131160548*^9}},
 $CellContext`InitializationGroup -> True],

Cell["\<\
Now generalize the variance calculation to apply to zero-padded data to give \
the same result as for the original data set. Need to boost up each term \
separately.\
\>", "Text",
 CellChangeTimes->{{3.416002115628901*^9, 3.416002131160778*^9}},
 AspectRatioFixed->True,
 $CellContext`InitializationGroup -> True],

Cell[BoxData[
 RowBox[{
  RowBox[{"varGen", "[", 
   RowBox[{"anylist_", ",", "beforeLen_", ",", "afterLen_"}], "]"}], ":=", 
  RowBox[{"N", "[", 
   RowBox[{
    RowBox[{"sfac", "=", 
     FractionBox["afterLen", "beforeLen"]}], ";", 
    RowBox[{
     FractionBox[
      RowBox[{"sfac", " ", 
       RowBox[{"Plus", "@@", 
        SuperscriptBox["anylist", "2"]}]}], "afterLen"], "-", 
     RowBox[{
      SuperscriptBox["sfac", "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"Plus", "@@", "anylist"}], "afterLen"], ")"}], "2"]}]}]}], 
   "]"}]}]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.416002115629024*^9, 3.416002131161106*^9}},
 AspectRatioFixed->True,
 $CellContext`InitializationGroup -> True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sdevGen", "=", 
  SqrtBox[
   RowBox[{"varGen", "[", 
    RowBox[{"worklist", ",", "nbefore", ",", "nafter"}], "]"}]]}]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.4160021156291523`*^9, 3.416002131161407*^9}},
 AspectRatioFixed->True,
 $CellContext`InitializationGroup -> True],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"1.`", " ", 
      SuperscriptBox["worklist", "2"]}], 
     SuperscriptBox["nbefore", "2"]]}], "+", 
   FractionBox[
    RowBox[{"2.`", "\[VeryThinSpace]", "+", "worklist"}], 
    "nbefore"]}]]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Add a point digitizer to a plot. Results are put into vector \"res\".\
\>", "Subsubsection",
 CellChangeTimes->{{3.4123536743985023`*^9, 3.4123537089052973`*^9}, {
  3.416002115629663*^9, 3.416002131161873*^9}},
 $CellContext`InitializationGroup -> True],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"locatePts", "[", "plotname_", "]"}], ":=", "\[IndentingNewLine]", 
   
   RowBox[{"Block", "[", " ", 
    RowBox[{
     RowBox[{"{", "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"res", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";", " ", "\n", 
      RowBox[{"Dynamic", "[", "res", "]"}], ";", " ", "\n", "  ", 
      RowBox[{"EventHandler", "[", " ", "\n", "         ", 
       RowBox[{"plotname", ",", " ", 
        RowBox[{"{", 
         RowBox[{"\"\<MouseDown\>\"", " ", ":>", 
          RowBox[{"(", " ", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"res", ",", " ", 
             RowBox[{"MousePosition", "[", "\"\<Graphics\>\"", "]"}]}], "]"}],
            ")"}]}], "}"}]}], " ", "\n", "        ", "]"}]}]}], " ", "]"}]}],
  FontFamily->"Arial",
  FontWeight->"Plain"]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.416002115629848*^9, 3.416002131162106*^9}},
 $CellContext`InitializationGroup -> True]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The following tick function rescales the axes labels from the default [xmin, \
xmax] range by offsetting the starting point by b and scaling the tick value \
by m. 
Note that you need to specify the AxesOrigin in terms of the unshifted \
function.\
\>", "Subsubsection",
 CellChangeTimes->{{3.4160021156301613`*^9, 3.416002131162328*^9}},
 $CellContext`InitializationGroup -> True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$TextStyle", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"FontFamily", "\[Rule]", "Arial"}], ",", 
    RowBox[{"FontSize", "\[Rule]", "10"}]}], "}"}]}]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.4123695656164*^9, 3.4123695691646137`*^9}, {
  3.412369655031846*^9, 3.4123696561967983`*^9}, {3.41270549425765*^9, 
  3.41270550381952*^9}, {3.416002115630471*^9, 3.4160021311625566`*^9}},
 $CellContext`InitializationGroup -> True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"FontFamily", "\[Rule]", "Arial"}], ",", 
   RowBox[{"FontSize", "\[Rule]", "10"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Style", "[", 
  RowBox[{"PlotLabel", ",", 
   RowBox[{"DefaultOptions", "->", 
    RowBox[{"{", 
     RowBox[{"FontFamily", "->", "Arial"}], "}"}]}]}], "]"}]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.412705739454899*^9, 3.412705835393314*^9}, {
  3.416002115630872*^9, 3.416002131162959*^9}},
 $CellContext`InitializationGroup -> True],

Cell[BoxData[
 StyleBox["PlotLabel",
  StripOnInput->False,
  FontFamily->$CellContext`Arial]], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"tickf", "[", 
   RowBox[{"min_", ",", "max_", ",", "m_", ",", "b_", ",", "step_"}], "]"}], ":=",
   " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"m", " ", 
       RowBox[{"(", 
        RowBox[{"i", "-", "b"}], ")"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "min", ",", "max", ",", "step"}], "}"}]}], 
   "]"}]}]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.416002115631175*^9, 3.416002131163348*^9}},
 $CellContext`InitializationGroup -> True],

Cell["File name conventions", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"filename", "=."}], ";", 
  RowBox[{"filenamefull", "=."}], ";", 
  RowBox[{"fnames", "=."}], ";", 
  RowBox[{"plotname", "=."}], ";", 
  RowBox[{"filepath", "=."}], ";", 
  RowBox[{"filepathfull", "=."}], ";"}]], "Input",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"filein", "=."}], ";", 
  RowBox[{"fileinroot", "=."}], ";", 
  RowBox[{"fileinS", "=."}], ";"}]], "Input",
 Evaluatable->False]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["6. Lateral ball position distances.", "Section"],

Cell["\<\
Extract the x,y positons from the ball centers. Compute the distance between \
the 2 lower balls and the distance from the midpoint between them to the \
upper ball.\
\>", "Text"],

Cell[BoxData[
 RowBox[{"ballsMMxy", "=", 
  RowBox[{"Drop", "[", 
   RowBox[{"ballsOGPMM", ",", "None", ",", 
    RowBox[{"-", "1"}]}], "]"}]}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"MMxdistLLLR", "=", 
   RowBox[{"Norm", "[", 
    RowBox[{
     RowBox[{"ballsMMxy", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "-", 
     RowBox[{"ballsMMxy", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"xmid", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ballsMMxy", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "-", 
       RowBox[{"ballsMMxy", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "/", "2"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ymid", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ballsMMxy", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "+", 
       RowBox[{"ballsMMxy", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "/", "2"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"MMydistUCmid", "=", 
   RowBox[{"Norm", "[", 
    RowBox[{
     RowBox[{"ballsMMxy", "[", 
      RowBox[{"[", 
       RowBox[{"3", ",", "2"}], "]"}], "]"}], "-", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xmid", ",", "ymid"}], "}"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<MM locs: X dist (86.50) = \>\"", ",", "MMxdistLLLR", ",", 
   "\"\<, Y dist (113.50) = \>\"", ",", "MMydistUCmid"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"ballsfitxy", "=", 
  RowBox[{"Drop", "[", 
   RowBox[{"ballfits", ",", "None", ",", 
    RowBox[{"-", "2"}]}], "]"}]}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SCxdistLLLR", "=", 
   RowBox[{"Norm", "[", 
    RowBox[{
     RowBox[{"ballsfitxy", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "-", 
     RowBox[{"ballsfitxy", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"xmid", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ballsfitxy", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "-", 
       RowBox[{"ballsfitxy", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "/", "2"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ymid", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ballsfitxy", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "+", 
       RowBox[{"ballsfitxy", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "/", "2"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SCydistUCmid", "=", 
   RowBox[{"Norm", "[", 
    RowBox[{
     RowBox[{"ballsfitxy", "[", 
      RowBox[{"[", 
       RowBox[{"3", ",", "2"}], "]"}], "]"}], "-", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xmid", ",", "ymid"}], "}"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<SurfCalc locs: X dist (86.50) = \>\"", ",", "MMxdistLLLR", ",", 
   "\"\<, Y dist (113.50) = \>\"", ",", "SCydistUCmid"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{
  "\"\<Output lateral ball separations\>\"", ",", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"StringTake", "[", 
       RowBox[{"fileinS", ",", "12"}], "]"}], "<>", "\"\<_ballseps.txt\>\""}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "fileinS", "<>", "\"\<\\nMM dist: X dist (86.50) = \>\"", "<>", 
       RowBox[{"TS", "[", "MMxdistLLLR", "]"}], "<>", 
       "\"\<, Y dist (113.50) = \>\"", "<>", 
       RowBox[{"TS", "[", "MMydistUCmid", "]"}], "<>", 
       "\"\<\\nSurfCalc dist: X dist (86.50) = \>\"", "<>", 
       RowBox[{"TS", "[", "MMxdistLLLR", "]"}], "<>", 
       "\"\<, Y dist (113.50) = \>\"", "<>", 
       RowBox[{"TS", "[", "SCydistUCmid", "]"}]}], "}"}]}], "]"}]}], 
  "]"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
7. Compare BALdatum - cFID plane equations for several runs repeatability.\
\>", "Section"],

Cell["\<\
Reference the datum plane to the fiducial plane and look at the difference \
between different runs. Each run consists of switching off the OGP machine, \
exiting MeasureMind, then restarting the machine and MeasureMind, which \
causes the OGP to seek home on each axis. Then find and set the SCS origin at \
the center of the crossed scribe marks. THen run the ball and fiducial \
surface routine and do the plane fitting above. Reference the datum surface \
to the FID plane by taking the difference, then compare these difference \
equations to see how repeatable this process is. \
\>", "Text"],

Cell[CellGroupData[{

Cell["Input several cDatum equations to plot and compare", "Subsection"],

Cell[BoxData[
 RowBox[{"MessageDialog", "[", 
  "\"\<Interrupt will occur to avoid accidental clearing of cdatums. First OK \
this message, then Abort.\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Interrupt", "[", "]"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cdatums", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"cfids", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"cdatumfids", "=", 
   RowBox[{"{", "}"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell["Iterate from here:", "Text",
 CellTags->"Iterate cDatum input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cdatumfile$", "=", 
  RowBox[{"Input", "[", 
   RowBox[{
   "\"\<Enter path to cDatum cal planeeqns file\>\"", ",", "cdatumfile$"}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cdatumfile", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"cdatumfile$", ",", "\"\<List\>\""}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"cdatumfile", "//", "TableForm"}]], "Input"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"cdatumeqn", ",", "cfideqn"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"cdatumeqn", "=", 
  RowBox[{
   RowBox[{"cdatumfile", "[", 
    RowBox[{"[", 
     RowBox[{"-", "4"}], "]"}], "]"}], "//", "ToExpression"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"cfideqn", "=", 
  RowBox[{
   RowBox[{"cdatumfile", "[", 
    RowBox[{"[", 
     RowBox[{"-", "3"}], "]"}], "]"}], "//", "ToExpression"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"cDatumToFid", "=", 
  RowBox[{
   RowBox[{"cdatumfile", "[", 
    RowBox[{"[", 
     RowBox[{"-", "2"}], "]"}], "]"}], "//", "ToExpression"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"cdatums", ",", "cdatumeqn"}], "]"}], ";", 
  RowBox[{"AppendTo", "[", 
   RowBox[{"cfids", ",", "cfideqn"}], "]"}], ";", 
  RowBox[{"AppendTo", "[", 
   RowBox[{"cdatumfids", ",", "cDatumToFid"}], "]"}], ";"}]], "Input"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Length", "[", "cdatums", "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{"meandatums", "=", 
  RowBox[{
   RowBox[{"Mean", "[", "cdatums", "]"}], "//", 
   "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"meanfids", "=", 
  RowBox[{
   RowBox[{"Mean", "[", "cfids", "]"}], "//", 
   "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"meandatumfids", "=", 
  RowBox[{
   RowBox[{"Mean", "[", "cdatumfids", "]"}], "//", "Simplify"}]}]}], "Input"],

Cell[BoxData["cdatumfile$"], "Input"],

Cell[BoxData[
 RowBox[{"topdir", "=", 
  RowBox[{"DirectoryName", "[", 
   RowBox[{"cdatumfile$", ",", "2"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"parentdirname", "=", 
  RowBox[{"FileNameTake", "[", 
   RowBox[{
    RowBox[{"DirectoryName", "[", 
     RowBox[{"cdatumfile$", ",", "2"}], "]"}], ",", 
    RowBox[{"-", "1"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"vp1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "2"}], ",", "1"}], "}"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input",
 CellAutoOverwrite->False],

Cell[BoxData[
 RowBox[{"ndatum$", "=", 
  RowBox[{"\"\<_\>\"", "<>", 
   RowBox[{"TS", "[", 
    RowBox[{"Length", "[", "cdatums", "]"}], "]"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"cdatums", "//", "TableForm"}]], "Input"],

Cell[BoxData[
 RowBox[{"cdatums", "-", "meandatums"}]], "Input"],

Cell[BoxData[
 RowBox[{"cDatumPlanesPlt", "=", 
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"cdatums", "-", "meandatums"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "xminraft", ",", "xmaxraft"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "yminraft", ",", "ymaxraft"}], "}"}], ",", 
    RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"Opacity", "[", "0.9", "]"}]}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<X[mm]\>\"", ",", "\"\<Y[mm]\>\"", ",", "\"\<\>\""}], 
      "}"}]}], ",", 
    RowBox[{"ViewPoint", "->", 
     RowBox[{"Dynamic", "[", "vp1", "]"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"ndatum$", "<>", "\"\< Datums from \>\"", "<>", 
      RowBox[{"TS", "[", "parentdirname", "]"}], "<>", "\"\<\\nAvg of\>\"", "<>",
       "ndatum$", "<>", "\"\< subt\>\""}]}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{"\"\<Output BALdatum planes plot & mean eqn\>\"", ",", 
   RowBox[{
    RowBox[{"SetDirectory", "[", "topdir", "]"}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
      "parentdirname", "<>", "ndatum$", "<>", 
       "\"\<_cDATUMplanesAvg_eqn.txt\>\""}], ",", 
      RowBox[{"{", 
       RowBox[{
       "parentdirname", "<>", "ndatum$", "<>", 
        "\"\<_cDATUMplanesAvg_eqn.txt\>\"", "<>", "\"\<\\ncDatum[x,y]= \>\"", 
        "<>", 
        RowBox[{"TS", "[", 
         RowBox[{"meandatums", "//", "Simplify"}], "]"}]}], "}"}]}], "]"}], 
    ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
      "parentdirname", "<>", "ndatum$", "<>", 
       "\"\<_cDATUMplanesAll.tiff\>\""}], ",", "cDatumPlanesPlt", ",", 
      RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
      RowBox[{"ImageResolution", "->", "100"}]}], "]"}], ";", 
    RowBox[{"ResetDirectory", "[", "]"}]}], ",", 
   RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"cFidsPlanePlt", "=", 
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"cfids", "-", "meanfids"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "xminraft", ",", "xmaxraft"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "yminraft", ",", "ymaxraft"}], "}"}], ",", 
    RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"Opacity", "[", "0.9", "]"}]}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<X[mm]\>\"", ",", "\"\<Y[mm]\>\"", ",", "\"\<\>\""}], 
      "}"}]}], ",", 
    RowBox[{"ViewPoint", "->", 
     RowBox[{"Dynamic", "[", "vp1", "]"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"\"\<cFIDs from \>\"", "<>", 
      RowBox[{"TS", "[", "parentdirname", "]"}], "<>", "\"\<\\nAvg of\>\"", "<>",
       "ndatum$", "<>", "\"\< subt\>\""}]}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{"\"\<Output cFID planes plot & mean eqn\>\"", ",", 
   RowBox[{
    RowBox[{"SetDirectory", "[", "topdir", "]"}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
      "parentdirname", "<>", "ndatum$", "<>", 
       "\"\<_cFIDplanesAvg_eqn.txt\>\""}], ",", 
      RowBox[{"{", 
       RowBox[{
       "parentdirname", "<>", "ndatum$", "<>", 
        "\"\<_cFIDplanesAvg_eqn.txt\>\"", "<>", "\"\<\\ncFID[x,y]= \>\"", "<>", 
        RowBox[{"TS", "[", 
         RowBox[{"meanfids", "//", "Simplify"}], "]"}]}], "}"}]}], "]"}], ";",
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
      "parentdirname", "<>", "ndatum$", "<>", "\"\<_cFIDplanesAll.tiff\>\""}],
       ",", "cFidsPlanePlt", ",", 
      RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
      RowBox[{"ImageResolution", "->", "100"}]}], "]"}], ";", 
    RowBox[{"ResetDirectory", "[", "]"}]}], ",", 
   RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input",
 CellAutoOverwrite->False],

Cell[BoxData[
 RowBox[{"cDatumToFidPlt", "=", 
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"cdatumfids", "-", "meandatumfids"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "xminraft", ",", "xmaxraft"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "yminraft", ",", "ymaxraft"}], "}"}], ",", 
    RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"Opacity", "[", "0.9", "]"}]}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<X[mm]\>\"", ",", "\"\<Y[mm]\>\"", ",", "\"\<\>\""}], 
      "}"}]}], ",", 
    RowBox[{"ViewPoint", "->", 
     RowBox[{"Dynamic", "[", "vp1", "]"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"\"\<cDatumToFids from \>\"", "<>", 
      RowBox[{"TS", "[", "parentdirname", "]"}], "<>", "\"\<\\nAvg of\>\"", "<>",
       "ndatum$", "<>", "\"\< subt\>\""}]}]}], "]"}]}]], "Input"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{"\"\<Output cDatumToFid planes plot & mean eqn\>\"", ",", 
   RowBox[{
    RowBox[{"SetDirectory", "[", "topdir", "]"}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
      "parentdirname", "<>", "ndatum$", "<>", 
       "\"\<_cDatumToFidAvg_eqn.txt\>\""}], ",", 
      RowBox[{"{", 
       RowBox[{
       "parentdirname", "<>", "ndatum$", "<>", 
        "\"\<_cDatumToFidAvg_eqn.txt\>\"", "<>", 
        "\"\<\\ncDatumToFid[x,y]=\>\"", "<>", 
        RowBox[{"TS", "[", 
         RowBox[{"meandatumfids", "//", "Simplify"}], "]"}]}], "}"}]}], "]"}],
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
      "parentdirname", "<>", "ndatum$", "<>", 
       "\"\<_cDatumToFidAll.tiff\>\""}], ",", "cDatumToFidPlt", ",", 
      RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
      RowBox[{"ImageResolution", "->", "100"}]}], "]"}], ";", 
    RowBox[{"ResetDirectory", "[", "]"}]}], ",", 
   RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{"\"\<Input another cDatum file path\>\"", ",", 
   RowBox[{"NotebookLocate", "[", "\"\<Iterate cDatum input\>\"", "]"}]}], 
  "]"}]], "Input"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Input the Datum to Fid expression from one of the Calibration runs prior to \
the raft measurement. Keep time between measurements short.\
\>", "Subsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ncal", "=", "0"}], ";", 
  RowBox[{"Datum2FIDeqn", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"Clear", "[", "cDATUMtocFID", "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell["\<\
Iterate from here to input different datum to fid cal files.  Do not reset \
above items.\
\>", "Text"],

Cell[BoxData[
 RowBox[{"calfile", "=", 
  RowBox[{"Input", "[", 
   RowBox[{"\"\<Enter path to cal file\>\"", ",", "calfile"}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"caldata", "=", 
  RowBox[{"Import", "[", 
   RowBox[{"calfile", ",", 
    RowBox[{"{", "\"\<Lines\>\"", "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"caldata", "[", 
   RowBox[{"[", "4", "]"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Take", " ", "the", " ", "desired", " ", "eqn", " ", "line", " ", "from", 
    " ", "the", " ", "file"}], "*)"}]}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"cDATUMtocFID", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], "=", 
    RowBox[{"ToExpression", "[", 
     RowBox[{"caldata", "[", 
      RowBox[{"[", "4", "]"}], "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Ignore", " ", "the", " ", "BEEP"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"calfilename", "=", 
   RowBox[{"caldata", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{"cDATUMtocFID", "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "Input"],

Cell[BoxData["xminR"], "Input"],

Cell[BoxData[
 RowBox[{"Datum2FIDplt", "=", 
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"cDATUMtocFID", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "xminBalls", ",", "xmaxBalls"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "ymin", ",", "ymax"}], "}"}], ",", 
    RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"ImageSize", "->", "400"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<Xval\>\"", ",", "\"\<Yval\>\"", ",", "\"\<\>\""}], "}"}]}],
     ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"calfilename", "<>", "\"\<\\nDatum to FID plot\>\""}]}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"Opacity", "[", "0.5", "]"}]}], ",", 
    RowBox[{"ViewPoint", "->", 
     RowBox[{"Dynamic", "[", "vp1", "]"}]}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"ncal", "=", 
  RowBox[{"Input", "[", 
   RowBox[{
   "\"\<Enter index number for this cal eqn expression\>\"", ",", "ncal"}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"AppendTo", "[", 
  RowBox[{"Datum2FIDeqn", ",", 
   RowBox[{"cDATUMtocFID", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], "]"}]], "Input"]
}, Open  ]],

Cell[BoxData["Datum2FIDeqn"], "Input"],

Cell["\<\
Compute the mean of all of the input cal eqns and plot them all relative to \
the mean to see the spread.\
\>", "Text"],

Cell[BoxData[
 RowBox[{"meanDatum", "=", 
  RowBox[{
   RowBox[{"Mean", "[", "Datum2FIDeqn", "]"}], "//", "N"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"residDatumPlt", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Plot3D", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Datum2FIDeqn", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "-", "meanDatum"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "xminBalls", ",", "xmaxBalls"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "ymin", ",", "ymax"}], "}"}], ",", 
       RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"ImageSize", "->", "400"}], ",", 
       RowBox[{"AxesLabel", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<Xval\>\"", ",", "\"\<Yval\>\"", ",", "\"\<\>\""}], 
         "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"calfilename", "<>", "\"\<\\nDatum to FID plot\>\""}]}], ",", 
       
       RowBox[{"PlotStyle", "->", 
        RowBox[{"Opacity", "[", "0.5", "]"}]}], ",", 
       RowBox[{"ViewPoint", "->", 
        RowBox[{"Dynamic", "[", "vp1", "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "Datum2FIDeqn", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"residDatumPlt", ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Datums from CAL runs about mean plane\>\""}]}], "]"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Solve spherical fit according to book.", "Subsubsection"],

Cell["Start with test data.", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rt", "=", "4."}], ";", 
  RowBox[{"pt", "=", 
   RowBox[{"{", "}"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"xt", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "rt"}], ",", "rt"}], "}"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"yt", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"rt", "^", "2"}], "-", 
           RowBox[{"xt", "^", "2"}]}], "]"}]}], ",", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"rt", "^", "2"}], "-", 
          RowBox[{"xt", "^", "2"}]}], "]"}]}], "}"}], "]"}]}], ";", "\n", 
    RowBox[{"zt", "=", 
     RowBox[{
      RowBox[{"RandomReal", "[", "0.1", "]"}], "+", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"rt", "^", "2"}], "-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xt", "^", "2"}], " ", "+", 
           RowBox[{"yt", "^", "2"}]}], " ", ")"}]}], "]"}], "]"}]}]}], ";", 
    "\n", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"pt", ",", 
      RowBox[{"{", 
       RowBox[{"xt", ",", "yt", ",", "zt"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData["pt"], "Input"],

Cell[BoxData[
 RowBox[{"ballplot", "[", 
  RowBox[{"pt", ",", "\"\<\>\""}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Transpose", "[", 
  RowBox[{"2", " ", "pt"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"ones", "=", 
  RowBox[{"ConstantArray", "[", 
   RowBox[{
    RowBox[{"-", "1"}], ",", 
    RowBox[{"Length", "[", "pt", "]"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Head", "[", "ones", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Amat", "=", 
  RowBox[{
   RowBox[{"Append", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"2", " ", "pt"}], "]"}], ",", "ones"}], "]"}], "//", 
   "Transpose"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Bmat", "=", 
  RowBox[{"Apply", "[", 
   RowBox[{"Plus", ",", 
    RowBox[{"pt", "^", "2"}], ",", "1"}], "]"}]}]], "Input"],

Cell["This is initial guess:", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"xc0", ",", "yc0", ",", "zc0", ",", "rho"}], "}"}], "=", 
  RowBox[{"LinearSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "Amat", "]"}], ".", " ", "Amat"}], ",", 
    RowBox[{
     RowBox[{"Transpose", "[", "Amat", "]"}], " ", ".", "Bmat"}]}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"rsqrt", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"xc0", "^", "2"}], " ", "+", 
     RowBox[{"yc0", "^", "2"}], " ", "+", 
     RowBox[{"zc0", "^", "2"}], " ", "-", 
     RowBox[{"rho", "^", "2"}]}], "//", "Abs"}], "//", "Sqrt"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Sqrt", "[", "rsq", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Rfcn", "[", 
   RowBox[{"ipt_", ",", "pt_List"}], "]"}], ":=", 
  RowBox[{"Sqrt", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"pt", "[", 
         RowBox[{"[", 
          RowBox[{"ipt", ",", "1"}], "]"}], "]"}], "^", "2"}], "-", "xc0"}], 
      ")"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"pt", "[", 
         RowBox[{"[", 
          RowBox[{"ipt", ",", "2"}], "]"}], "]"}], "^", "2"}], "-", "yc0"}], 
      ")"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"pt", "[", 
         RowBox[{"[", 
          RowBox[{"ipt", ",", "3"}], "]"}], "]"}], "^", "2"}], "-", "zc0"}], 
      ")"}], "^", "2"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Rfcn", "[", 
  RowBox[{"3", ",", "pt"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Jmat", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"pt", "[", 
         RowBox[{"[", 
          RowBox[{"j", ",", "i"}], "]"}], "]"}], "-", "xc0"}], ")"}]}], "/", 
     RowBox[{"Rfcn", "[", 
      RowBox[{"j", ",", "pt"}], "]"}]}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", 
      RowBox[{"Length", "[", "pt", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Jmat", "=", 
  RowBox[{
   RowBox[{"Append", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "Jmat", "]"}], ",", "ones"}], "]"}], "//", 
   "Transpose"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Dmat", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Rfcn", "[", 
        RowBox[{"i", ",", "pt"}], "]"}], "-", "rsqrt"}], ")"}], "^", "2"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "pt", "]"}]}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"LinearSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Transpose", "[", "Jmat", "]"}], ".", "Jmat"}], ",", 
   RowBox[{"-", 
    RowBox[{
     RowBox[{"Transpose", "[", "Jmat", "]"}], ".", "Dmat"}]}]}], 
  "]"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Iterate FID trim and fit, if necessary.", "Subsubsection"],

Cell["Trim off bad points from FID region.", "Text"],

Cell[CellGroupData[{

Cell["Trim the outliers here.", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"threshR", "=", 
  RowBox[{"sigmaR2", "*", "4"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"threshR", "=", 
  RowBox[{"Input", "[", 
   RowBox[{
   "\"\<Enter \[PlusMinus]threshold value for trimming bad FID points.\>\"", 
    ",", "threshR"}], "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],

Cell["Trim both the XYZ and the Z data lists", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Remove", " ", "the", " ", "plane", " ", "from", " ", "the", " ", "z"}], 
    "-", 
    RowBox[{
    "data", " ", "but", " ", "not", " ", "from", " ", "the", " ", "XYZ", " ", 
     "data"}]}], "*)"}], 
  RowBox[{
   RowBox[{"FIDresidsZtrim", "=", 
    RowBox[{
     RowBox[{"Drop", "[", 
      RowBox[{
       RowBox[{"Reap", "[", " ", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"FIDdata", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "3"}], "]"}], "]"}], "-", 
               RowBox[{"cFID", "[", 
                RowBox[{
                 RowBox[{"FIDdata", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{"FIDdata", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}]}], "]"}], 
             "<", "threshR"}], ",", 
            RowBox[{"Sow", "[", 
             RowBox[{
              RowBox[{"FIDdata", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "3"}], "]"}], "]"}], "-", 
              RowBox[{"cFID", "[", 
               RowBox[{
                RowBox[{"FIDdata", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"FIDdata", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}]}], "]"}]}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "FIDdata", "]"}]}], "}"}]}], "]"}], "]"}], 
       ",", "1"}], "]"}], "//", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"#", ",", "2"}], "]"}], "&"}]}]}], ";"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FIDdatatrim", "=", 
   RowBox[{
    RowBox[{"Drop", "[", 
     RowBox[{
      RowBox[{"Reap", "[", " ", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"FIDdata", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "3"}], "]"}], "]"}], "-", 
              RowBox[{"cFID", "[", 
               RowBox[{
                RowBox[{"FIDdata", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"FIDdata", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}]}], "]"}], 
            "<", "threshR"}], ",", 
           RowBox[{"Sow", "[", 
            RowBox[{"FIDdata", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "FIDdata", "]"}]}], "}"}]}], "]"}], "]"}], 
      ",", "1"}], "]"}], "//", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"#", ",", "2"}], "]"}], "&"}]}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FIDresidsXYZtrim", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FIDdatatrim", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"FIDdatatrim", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"FIDresidsZtrim", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "FIDdatatrim", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"refflag", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"refflag", "=", 
  RowBox[{"Input", "[", 
   RowBox[{
   "\"\<If need to iterate FID fit, set refflag to 1\>\"", ",", "refflag"}], 
   "]"}]}], "\n", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"refflag", "==", "1"}], ",", 
   RowBox[{
    RowBox[{"FIDdata", "=", "FIDdatatrim"}], ";", 
    RowBox[{"NotebookLocate", "[", "\"\<FIDdata iterate restart\>\"", "]"}], 
    ";", 
    RowBox[{"Abort", "[", "]"}]}], ",", 
   RowBox[{"MessageDialog", "[", "\"\<Finished with FID\>\"", "]"}]}], 
  "]"}]}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Plot combined DistributionChart for several height residual data files. \
\>", "Subsection"],

Cell[CellGroupData[{

Cell["Default directory is same as set earlier.", "Subsubsection"],

Cell[CellGroupData[{

Cell["\<\
First list the desired XLSX files using the wild card. THen edit the picklist \
to select the desired files. THe result is \
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"upstemoffset", "=", "4.49"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"Input", "[", 
  RowBox[{
  "\"\<Enter upstem offset value that gets subtracted from the input height \
data. This must correspond to the value measured during the initial \
calibration run on the day of the measurements.\>\"", ",", "upstemoffset"}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"fnames1", "=", 
  RowBox[{"FileNames", "[", "\"\<*SUTcorrAbsHgt.xlsx\>\"", "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"fnames1", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "fnames1", "]"}]}], "}"}]}], "]"}], "//", 
  "TableForm"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create picklist here:", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"picklist", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4", ",", "5", ",", "7", ",", "8"}], "}"}]}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"picklist", "=", 
  RowBox[{"{", 
   RowBox[{
   "1", ",", "2", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", 
    ",", "10", ",", "11"}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Drop", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Import", "[", 
            RowBox[{
             RowBox[{"fnames1", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<Data\>\""}], "]"}], 
           "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "All", ",", 
             RowBox[{"{", "3", "}"}]}], "]"}], "]"}], "//", "Flatten"}], 
         ")"}], "-", "upstemoffset"}], ",", "1"}], "]"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "picklist"}], "}"}]}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"Dimensions", "[", 
  RowBox[{"data2", "[", 
   RowBox[{"[", "]"}], "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Short", "[", 
  RowBox[{"data2", ",", "10"}], "]"}]], "Input"],

Cell["\<\
Now generate qlist with 2 significant digits. Then convert to strings and \
replace the comma separators with newlines within each row. This preserves \
the list structure but makes the string list print out vertically to use as \
annotation for the x-axis.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"quantlist", "=", 
   RowBox[{"Reverse", "[", 
    RowBox[{"{", 
     RowBox[{
     "0.0", ",", "0.005", ",", "0.025", ",", "0.50", ",", "0.975", ",", 
      "0.995", ",", "1.0"}], "}"}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"qlist", "=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Quantile", "[", 
      RowBox[{"#", ",", "quantlist"}], "]"}], "&"}], ",", "data2"}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"qrows", "=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NumberForm", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "2"}], "}"}]}], "]"}], "&"}], ",", "qlist"}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"qrows2", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"StringReplace", "[", 
       RowBox[{
        RowBox[{"ToString", "[", "#", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<,\>\"", "\[Rule]", "\"\<\\n\>\""}], ",", 
          RowBox[{"\"\<{\>\"", "\[Rule]", "\"\<\>\""}], ",", 
          RowBox[{"\"\<}\>\"", "\[Rule]", "\"\<\>\""}]}], "}"}]}], "]"}], 
      "&"}], ",", "qrows"}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"Dimensions", "[", "qrows2", "]"}]], "Input"],

Cell["Compute list of median values.", "Text"],

Cell[BoxData[
 RowBox[{"medlist", "=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NumberForm", "[", 
      RowBox[{
       RowBox[{"Median", "[", "#", "]"}], ",", "3"}], "]"}], "&"}], ",", 
    "data2"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input",
 CellAutoOverwrite->False],

Cell[BoxData[
 RowBox[{"combinedplt", "=", 
  RowBox[{"DistributionChart", "[", 
   RowBox[{"data2", ",", 
    RowBox[{"ChartLabels", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"medlist", ",", "qrows2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Center", ",", "Axis"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
       RowBox[{"FontSize", "->", "12"}]}], "]"}]}], ",", 
    RowBox[{"FrameLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<\>\"", ",", "zunit$"}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"zunit$", ",", "zunit$"}], "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{
     "\"\<Absolute height relative to 13.000mm\\nCorrected for upstem offset \
of \>\"", "<>", 
      RowBox[{"ToString", "[", "upstemoffset", "]"}], "<>", "zunit$"}]}]}], 
   "]"}]}]], "Input"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Keep existing value for plot neame if it already exists. Otherwise, set it to \
a default NoName.\
\>", "Text"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"ValueQ", "[", "comboplt", "]"}], ",", "Null", ",", 
   RowBox[{"comboplt", "=", "\"\<NoName\>\""}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"comboplt", "=", 
  RowBox[{"InputString", "[", 
   RowBox[{
   "\"\<Enter file name for output of the plot file.\>\"", ",", "comboplt"}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Export combined result plot\>\"", ",", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"comboplt", "<>", "\"\<_comboDensityPlot.tiff\>\""}], ",", 
      "combinedplt", ",", 
      RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
      RowBox[{"ImageResolution", "->", "100"}]}], "]"}]}], "]"}],
  FontColor->RGBColor[1, 0, 1]]], "Input"]
}, Open  ]],

Cell["\<\
This shows the FID surface, defined by the fiducial flats on the fixture, \
relative to the datum surface defined by the 3 ball centers. The actual raft \
surface needs to be 29.81mm above the datum plane. One can see that the \
fiducial plane is offset and tilted from the nominal raft surface plane. We \
want to be able to use the fiducial surfaces as a proxy for the 3 ball \
centers, as that is what is only visible during the raft measurement. NOTE \
that these points and planes are measured in the OGP machine global coord \
system, not referenced to a point on the fixture. The nominal points on the \
raft surface can be set from the measured ball centers, then a plane fit to \
those points. The difference between that plane and the observed fiducial \
plane is the correction that needs to be added to the fiducial plane. Make \
sure the coord system doesn\[CloseCurlyQuote]t change, as the expression for \
the planes depends upon the location of the origin.\
\>", "Text"],

Cell[CellGroupData[{

Cell["\<\
2.1 Ball locations from OGP printout. Global coords where x-y origin is from \
the initialization results.\
\>", "Section"],

Cell[BoxData[{
 RowBox[{"Input", "[", 
  "\"\<Abort at interrupt to bypass this section to allow for nominal ball \
center coords in MF03 coord system. Execute 2.2 to set the coords and compute \
the raft corner locations.\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Interrupt", "[", "]"}]}], "Input"],

Cell["Execute one of these cells to set the approx ball centers.", "Text"],

Cell["\<\
ballLL = {109.68021, 47.37074, -29.36903, 8.03260/2}; ballLR = {196.16174, \
46.89109, -29.39688, 8.02161/2};
ballUC = {153.62359, 160.61988, -29.35125, 8.01668/2};
\
\>", "Text"],

Cell["\<\
(* for 141231 data *)
ballLL = {14.37264, 41.5273, -29.40122, 4.00253}; ballLR = {100.87930, \
41.62255, -29.37040, 3.92891};
ballUC = {57.49383, 155.05464, -029.51954, 4.13259};
\
\>", "Text"],

Cell["\<\
62 Sphere            +014.37461   +041.52476  -029.37916  +004.00129  43 40 44.

  63 Sphere            +100.88601   +041.62049  -029.34504  +003.92382  52 48 \
54.

  64 Sphere            +057.52614   +155.06837  -029.48253  +004.10302  61 56 \
57.

\
\>", "Text"],

Cell["ECM#2 data 4 Feb 2015", "Text"],

Cell["\<\
150220 Ball Fid cal.txt
OGP MM computes sphere center cords and radius
31\tSphere\t+014.37204\t+041.52050\t-029.40110\t+004.01866
32\tSphere\t+100.85857\t+041.61607\t-029.42182\t+004.00100
33\tSphere\t+057.56664\t+155.05976\t-029.40268\t+004.01958\
\>", "Text"],

Cell["\<\
Enter the ball cal file that was Print/Saved from the OGP run. Need to \
extract the lines that contail the ball fit coords. This differs for each \
file.\
\>", "Text"],

Cell[CellGroupData[{

Cell["\<\
Input MM Ball fit coord text file. Compute raft corner points relative to the \
LL bal center.\
\>", "Subsubsection"],

Cell[CellGroupData[{

Cell["Need to redo this. Skip it.", "Subsubsection"],

Cell[BoxData["\"\</Users/takacs/ Peter work f/Projects/LSST \
project/DATA_LSST/Flatness_raft/ECM raft #2/MF03 cal runs 150204/MF03 cal \
run1.DAT\>\""], "Input",
 Evaluatable->False],

Cell[BoxData["\"\</Users/takacs/ Peter work f/Projects/LSST \
project/DATA_LSST/Flatness_raft/ECM raft #2/MF03 cal runs 150204/MF03 cal \
run1.DAT\>\""], "Input",
 Evaluatable->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ballfile", "=", 
  RowBox[{"Input", "[", 
   RowBox[{"\"\<Enter path to MM BallFitResult file\>\"", ",", "ballfile"}], 
   "]"}]}]], "Input",
 Evaluatable->False],

Cell[BoxData["\<\"/Users/takacs/ Peter work f/Projects/LSST \
project/DATA_LSST/Flatness_raft/ECM raft #2/Runs 150224/Run2.txt\"\>"], \
"Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"balldata", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"ballfile", ",", "\"\<List\>\""}], "]"}]}], ";"}]], "Input",
 Evaluatable->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"balldata", "[", 
  RowBox[{"[", 
   RowBox[{"12", ";;", "16"}], "]"}], "]"}]], "Input",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"   8 Contour           +112.12757   -002.22196  -000.04918  \
+231.58081 \"\>", 
   ",", "\<\"   9 Point             +104.27024   -002.84040  -000.04359       \
      \"\>", 
   ",", "\<\"  10 Contour           +104.59985   -002.92252  -000.04385  \
+002.05568 \"\>", 
   ",", "\<\"  11 Point             +008.24165   +197.79181  +000.02935       \
      \"\>", 
   ",", "\<\"  12 Contour           +008.56285   +197.71141  +000.02937  \
+002.03507 \"\>"}], "}"}]], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ballLL", "=", 
   RowBox[{
    RowBox[{"ImportString", "[", 
     RowBox[{
      RowBox[{"balldata", "[", 
       RowBox[{"[", "12", "]"}], "]"}], ",", "\"\<Words\>\""}], "]"}], "//", 
    "ToExpression"}]}], ";", 
  RowBox[{"ballLR", "=", 
   RowBox[{
    RowBox[{"ImportString", "[", 
     RowBox[{
      RowBox[{"balldata", "[", 
       RowBox[{"[", "14", "]"}], "]"}], ",", "\"\<Words\>\""}], "]"}], "//", 
    "ToExpression"}]}], ";", 
  RowBox[{"ballUC", "=", 
   RowBox[{
    RowBox[{"ImportString", "[", 
     RowBox[{
      RowBox[{"balldata", "[", 
       RowBox[{"[", "16", "]"}], "]"}], ",", "\"\<Words\>\""}], "]"}], "//", 
    "ToExpression"}]}], ";"}]], "Input",
 Evaluatable->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ballsOGPMM", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ballLL", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", 
    RowBox[{"ballLR", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", 
    RowBox[{"ballUC", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], "}"}]}]], "Input",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"8", ",", "Contour", ",", "112.12757`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "Contour", ",", "104.59985`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "Contour", ",", "8.56285`"}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[BoxData[{"ballLL", "\[IndentingNewLine]", "ballLR", \
"\[IndentingNewLine]", "ballUC"}], "Input",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8", ",", "Contour", ",", "112.12757`", ",", 
   RowBox[{"-", "2.22196`"}], ",", 
   RowBox[{"-", "0.04918`"}], ",", "231.58081`"}], "}"}]], "Output"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", "Contour", ",", "104.59985`", ",", 
   RowBox[{"-", "2.92252`"}], ",", 
   RowBox[{"-", "0.04385`"}], ",", "2.05568`"}], "}"}]], "Output"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "12", ",", "Contour", ",", "8.56285`", ",", "197.71141`", ",", "0.02937`", 
   ",", "2.03507`"}], "}"}]], "Output"]
}, Closed]],

Cell["\<\
Read from Print txt file output for 150224 data. Need to have at least one \
manual text Print file that has the 3 Sphere fits at the end as the last 3 \
entries. A default is given for the 150224 runs.\
\>", "Text"],

Cell[BoxData[
 RowBox[{"ballfile", "=", 
  RowBox[{"Input", "[", 
   RowBox[{
   "\"\<Enter path to MM BallFitResult file\>\"", ",", 
    "\"\</Users/takacs/ Peter work f/Projects/LSST \
project/DATA_LSST/Flatness_raft/ECM raft #2/Raft runs \
150204-05/ECMraft#2run4list.txt\>\""}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"balldata", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"ballfile", ",", "\"\<List\>\""}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"sphdata", "=", 
  RowBox[{"balldata", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"-", "4"}], ";;", 
     RowBox[{"-", "2"}]}], "]"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ToExpression", "[", 
   RowBox[{"ImportString", "[", 
    RowBox[{
     RowBox[{"balldata", "[", 
      RowBox[{"[", "12", "]"}], "]"}], ",", "\"\<Words\>\""}], "]"}], "]"}], 
  "[", 
  RowBox[{"[", 
   RowBox[{"3", ";;", "5"}], "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ballLL", "=", 
   RowBox[{
    RowBox[{"ToExpression", "[", 
     RowBox[{"ImportString", "[", 
      RowBox[{
       RowBox[{"sphdata", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Words\>\""}], "]"}], "]"}], 
    "[", 
    RowBox[{"[", 
     RowBox[{"3", ";;", "5"}], "]"}], "]"}]}], ";", 
  RowBox[{"ballLR", "=", 
   RowBox[{
    RowBox[{"ToExpression", "[", 
     RowBox[{"ImportString", "[", 
      RowBox[{
       RowBox[{"sphdata", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", "\"\<Words\>\""}], "]"}], "]"}], 
    "[", 
    RowBox[{"[", 
     RowBox[{"3", ";;", "5"}], "]"}], "]"}]}], ";", 
  RowBox[{"ballUC", "=", 
   RowBox[{
    RowBox[{"ToExpression", "[", 
     RowBox[{"ImportString", "[", 
      RowBox[{
       RowBox[{"sphdata", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", "\"\<Words\>\""}], "]"}], "]"}], 
    "[", 
    RowBox[{"[", 
     RowBox[{"3", ";;", "5"}], "]"}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ballsOGPMM", "=", 
   RowBox[{"{", 
    RowBox[{"ballLL", ",", "ballLR", ",", "ballUC"}], "}"}]}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ballcenters", "=."}], ";", 
  RowBox[{"Clear", "[", "balldatumplaneOGP", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ballCentOGP", "=."}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fitbasis", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "x", ",", "y"}], "}"}]}], ";", 
  RowBox[{"fitidx", "=", "\"\<1,1\>\""}], ";"}], "\n", 
 RowBox[{"fitord$", "=", 
  RowBox[{"StringTake", "[", 
   RowBox[{
    RowBox[{"ToString", "[", "fitbasis", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", 
      RowBox[{"-", "2"}]}], "}"}]}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input",
 CellAutoOverwrite->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"balldatumplaneOGP", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"Fit", "[", 
   RowBox[{"ballsOGPMM", ",", "fitbasis", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]], "Input"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
2.2 Raft origin relative to nominal local coord of ball centers:\
\>", "Section"],

Cell["\<\
Compute nominal ball locations as offsets from the LL ball center. Use \
dimensions from raft baseplate drawing LCA-10212.\
\>", "Text"],

Cell[BoxData[{
 RowBox[{"ballLL", "=", 
  RowBox[{"{", 
   RowBox[{"14.372", ",", "41.520", ",", 
    RowBox[{"-", "29.40"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"ballLR", "=", 
  RowBox[{"ballLL", "+", 
   RowBox[{"{", 
    RowBox[{"86.5", ",", "0", ",", "0"}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"ballUC", "=", 
  RowBox[{"ballLL", "+", 
   RowBox[{"{", 
    RowBox[{"43.25", ",", "113.5", ",", "0"}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"raftcorneroffset", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"126.5", "/", "2"}], ")"}], "-", "43.25"}], ",", "6.5", ",", 
     RowBox[{"-", "29.81"}]}], "}"}]}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ballsOGPMM", "=", 
   RowBox[{"{", 
    RowBox[{"ballLL", ",", "ballLR", ",", "ballUC"}], "}"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"raftLL", "=", 
  RowBox[{"ballLL", "-", "raftcorneroffset"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"raftedge", "=", "126.5"}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xminraft", "=", 
   RowBox[{"raftLL", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";", 
  RowBox[{"xmaxraft", "=", 
   RowBox[{
    RowBox[{"raftLL", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "+", "raftedge"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yminraft", "=", 
   RowBox[{"raftLL", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";", 
  RowBox[{"ymaxraft", "=", 
   RowBox[{
    RowBox[{"raftLL", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "+", "raftedge"}]}], ";"}]}], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
4. Work on FID region. Do plane fit and toss out bad points. Iterate if \
necessary.\
\>", "Section"],

Cell["\<\
Define FID region: Exclude points outside of central x-region and outside of \
y-limits.\
\>", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FIDdata", "=."}], ";", 
  RowBox[{"testR", "=."}], ";", 
  RowBox[{"testS", "=."}], ";", 
  RowBox[{"rplt", "=."}], ";", 
  RowBox[{"histresidplt", "=."}], ";", 
  RowBox[{"reapres", "=."}], ";"}]], "Input"],

Cell["exchange 1 and 2 depending upon old or new MF03 orientation", "Text"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"testR", " ", "=", 
    RowBox[{"Reap", "[", " ", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"If", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"cloudXYZ", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "<", "xmaxBalls"}], "&&", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"cloudXYZ", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ">", "xminBalls"}]}], ")"}], "&&",
           "\[IndentingNewLine]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"cloudXYZ", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ">", "ymaxBalls"}], "||", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"cloudXYZ", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "<", "yminBalls"}]}], ")"}]}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
         RowBox[{"Sow", "[", 
          RowBox[{"cloudXYZ", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "cloudXYZ", "]"}]}], "}"}]}], "]"}], "]"}]}], 
   ";"}], "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"reapres", " ", "=", 
   RowBox[{"Reap", "[", " ", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"cloudXYZ", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ">", "xmaxBalls"}], "||", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"cloudXYZ", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "<", "xminBalls"}]}], ")"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
        RowBox[{"Sow", "[", 
         RowBox[{
          RowBox[{"cloudXYZ", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "ref"}], "]"}], ",", 
        RowBox[{"Sow", "[", 
         RowBox[{"cloudXYZ", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "sut"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "cloudXYZ", "]"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"reapres", "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"reapres", "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "1"}], "]"}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "10"}], "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FIDdata", "=", 
   RowBox[{"reapres", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SUTdata", "=", 
   RowBox[{"reapres", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Length", "[", "FIDdata", "]"}], ",", 
   RowBox[{"Length", "[", "SUTdata", "]"}]}], "}"}]], "Input"],

Cell[CellGroupData[{

Cell["Restart here for FID iteration bad point cleanup", "Subsubsection",
 CellTags->"FIDdata iterate restart"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", "FIDdata", "]"}], "==", "0"}], ",", 
    RowBox[{
     RowBox[{
     "MessageDialog", "[", "\"\<Setting FID to const plane\>\"", "]"}], ";", 
     RowBox[{"zSUTconst", "=", 
      RowBox[{"Mean", "[", 
       RowBox[{"SUTdata", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}]}], ";", 
     RowBox[{"FIDdata", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"SUTdata", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"SUTdata", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", "zSUTconst"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "SUTdata", "]"}]}], "}"}]}], "]"}]}]}]}], 
   "]"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"rplt", "=", 
  RowBox[{"ListPointPlot3D", "[", 
   RowBox[{"FIDdata", ",", 
    RowBox[{"PlotRange", "->", "All"}], ",", 
    RowBox[{"ViewPoint", "->", 
     RowBox[{"Dynamic", "[", "vp", "]"}]}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
    RowBox[{"ImageSize", "->", "400"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<Xval\>\"", ",", "\"\<Yval\>\"", ",", "\"\<\>\""}], "}"}]}],
     ",", 
    RowBox[{"PlotLabel", "->", 
     RowBox[{"fileinS", "<>", "\"\<\\nraw FID data\>\""}]}]}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{"\"\<Output FID region points plot\>\"", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ToString", "[", 
       RowBox[{"StringDrop", "[", 
        RowBox[{"fileinS", ",", "0"}], "]"}], "]"}], "<>", "\"\<_\>\"", "<>", 
      "fitidx", "<>", "\"\<_FIDpts.tiff\>\""}], ",", "rplt", ",", 
     RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
     RowBox[{"ImageResolution", "->", "100"}]}], "]"}], ",", 
   RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input",
 CellAutoOverwrite->False],

Cell["Look at FID data", "Subsubsection",
 CellTags->"REFdata iterate restart"],

Cell[BoxData[
 RowBox[{
  RowBox[{"test", "=."}], ";", 
  RowBox[{"zFIDdata", "=."}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"zFIDdata", "=", 
   RowBox[{
    RowBox[{"Take", "[", 
     RowBox[{"FIDdata", ",", "All", ",", 
      RowBox[{"{", "3", "}"}]}], "]"}], "//", "Flatten"}]}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxzR", "=", 
   RowBox[{"Max", "[", "zFIDdata", "]"}]}], ";", 
  RowBox[{"minzR", "=", 
   RowBox[{"Min", "[", "zFIDdata", "]"}]}], ";", 
  RowBox[{"sigmaR", "=", 
   RowBox[{"StandardDeviation", "[", "zFIDdata", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"zbinR", "=", 
   RowBox[{"BinCounts", "[", 
    RowBox[{"zFIDdata", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"maxzR", "-", "minzR"}], ")"}], "/", "25"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hrange", "[", 
    RowBox[{"binlist_", ",", "min_", ",", "max_"}], "]"}], ":=", 
   RowBox[{"Quantile", "[", 
    RowBox[{"binlist", ",", 
     RowBox[{"{", 
      RowBox[{"min", ",", "max"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"hgtrangeR99", "=", 
   RowBox[{"hrange", "[", 
    RowBox[{"zFIDdata", ",", "0.005", ",", "0.995"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"PVrangeR99", "=", 
   RowBox[{
    RowBox[{"hgtrangeR99", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "-", 
    RowBox[{"hgtrangeR99", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{"sigmaR", "//", 
  RowBox[{
   RowBox[{"NumberForm", "[", 
    RowBox[{"#", ",", "5"}], "]"}], "&"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"histresidplt", "=", 
   RowBox[{"Histogram", "[", 
    RowBox[{"zFIDdata", ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Bold", ",", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
        RowBox[{"FontSize", "->", "12"}]}], "]"}]}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"zunit$", ",", "\"\<\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"fileinS", "<>", "\"\<\\n99% range=\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"hrange", "[", 
          RowBox[{"zFIDdata", ",", "0.005", ",", "0.995"}], "]"}], "//", 
         RowBox[{
          RowBox[{"NumberForm", "[", 
           RowBox[{"#", ",", "5"}], "]"}], "&"}]}], "]"}], "<>", 
       "\"\< PV99=\>\"", "<>", 
       RowBox[{"ToString", "[", "PVrangeR99", "]"}], "<>", "\"\<\\nsdev=\>\"",
        "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"sigmaR", "//", 
         RowBox[{
          RowBox[{"NumberForm", "[", 
           RowBox[{"#", ",", "5"}], "]"}], "&"}]}], "]"}], "<>", 
       "zunit$"}]}]}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"histresidplt", ",", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"MousePosition", "[", "\"\<Graphics\>\"", "]"}], "]"}]}], 
  "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input",
 CellAutoOverwrite->False],

Cell[CellGroupData[{

Cell["Now fit a plane surface to the FID points", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fitbasisR", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "x", ",", "y"}], "}"}]}], ";", 
  RowBox[{"fitidxR", "=", "\"\<1,1\>\""}], ";"}], "\n", 
 RowBox[{"fitordR$", "=", 
  RowBox[{"StringTake", "[", 
   RowBox[{
    RowBox[{"ToString", "[", "fitbasisR", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", 
      RowBox[{"-", "2"}]}], "}"}]}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cFID", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"Fit", "[", 
   RowBox[{"FIDdata", ",", "fitbasisR", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"vp1", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "5"}], ",", 
    RowBox[{"-", "10"}], ",", "10"}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"refplt", "=", 
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"cFID", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "xminBalls", ",", "xmaxBalls"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "ymin", ",", "ymax"}], "}"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<Xval\>\"", ",", "\"\<Yval\>\"", ",", "\"\<\>\""}], "}"}]}],
     ",", 
    RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"Opacity", "[", "0.5", "]"}]}], ",", 
    RowBox[{"ViewPoint", "->", 
     RowBox[{"Dynamic", "[", "vp1", "]"}]}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FIDresids", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FIDdata", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"FIDdata", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"FIDdata", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "3"}], "]"}], "]"}], "-", 
        RowBox[{"cFID", "[", 
         RowBox[{
          RowBox[{"FIDdata", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"FIDdata", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}]}]}], "}"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "FIDdata", "]"}]}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"reflen$", "=", 
  RowBox[{"ToString", "[", 
   RowBox[{"Length", "[", "FIDresids", "]"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"FIDresidsPlt", "=", 
  RowBox[{"ListPointPlot3D", "[", 
   RowBox[{"FIDresids", ",", 
    RowBox[{"PlotRange", "->", "All"}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Xval\>\"", ",", "\"\<Yval\>\"", ",", "\"\<Z[\[Micro]m]\>\""}], 
      "}"}]}], ",", 
    RowBox[{"PlotLabel", "->", 
     RowBox[{
     "fileinS", "<>", "\"\<\\nThis shows FID after subt plane fit\>\""}]}]}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Export FIDresids plot\>\"", ",", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ToString", "[", 
        RowBox[{"StringDrop", "[", 
         RowBox[{"fileinS", ",", "0"}], "]"}], "]"}], "<>", "\"\<_\>\"", "<>",
        "reflen$", "<>", "\"\<_FIDresids.tiff\>\""}], ",", "FIDresidsPlt", 
      ",", 
      RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
      RowBox[{"ImageResolution", "->", "100"}]}], "]"}], ",", 
    RowBox[{"Method", "->", "\"\<Queued\>\""}]}], "]"}],
  FontColor->RGBColor[1, 0, 1]]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"zFIDresids", "=", 
   RowBox[{
    RowBox[{"Take", "[", 
     RowBox[{"FIDresids", ",", "All", ",", 
      RowBox[{"{", "3", "}"}]}], "]"}], "//", "Flatten"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"refplt", ",", "rplt"}], "]"}]], "Input"],

Cell["Look at quality of FID plane correction to FID points:", "Text"]
}, Open  ]],

Cell["Look at quality of FID plane correction to FID points:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxzR2", "=", 
   RowBox[{"Max", "[", "zFIDresids", "]"}]}], ";", 
  RowBox[{"minzR2", "=", 
   RowBox[{"Min", "[", "zFIDresids", "]"}]}], ";", 
  RowBox[{"sigmaR2", "=", 
   RowBox[{"StandardDeviation", "[", "zFIDresids", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"zbinR2", "=", 
   RowBox[{"BinCounts", "[", 
    RowBox[{"zFIDresids", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"maxzR2", "-", "minzR2"}], ")"}], "/", "25"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hrange", "[", 
    RowBox[{"binlist_", ",", "min_", ",", "max_"}], "]"}], ":=", 
   RowBox[{"Quantile", "[", 
    RowBox[{"binlist", ",", 
     RowBox[{"{", 
      RowBox[{"min", ",", "max"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"hgtrange99", "=", 
   RowBox[{"hrange", "[", 
    RowBox[{"zFIDresids", ",", "0.005", ",", "0.995"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"PVrange99", "=", 
   RowBox[{
    RowBox[{"hgtrange99", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "-", 
    RowBox[{"hgtrange99", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";", 
  RowBox[{"skewR2", "=", 
   RowBox[{"Skewness", "[", "zFIDresids", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kurtR2", "=", 
   RowBox[{"Kurtosis", "[", "zFIDresids", "]"}]}], ";"}], "\n", 
 RowBox[{"sigmaR2", "//", 
  RowBox[{
   RowBox[{"NumberForm", "[", 
    RowBox[{"#", ",", "5"}], "]"}], "&"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"histFIDresidplt", "=", 
   RowBox[{"Histogram", "[", 
    RowBox[{"zFIDresids", ",", "50", ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Bold", ",", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
        RowBox[{"FontSize", "->", "12"}]}], "]"}]}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"zunit$", ",", "\"\<\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{
      "fileinS", "<>", "\"\< FIDresids\>\"", "<>", "\"\<\\nsdev=\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"sigmaR2", "//", 
         RowBox[{
          RowBox[{"NumberForm", "[", 
           RowBox[{"#", ",", "4"}], "]"}], "&"}]}], "]"}], "<>", "zunit$", 
       "<>", "\"\<, skew= \>\"", "<>", 
       RowBox[{"TS", "[", 
        RowBox[{"skewR2", "//", 
         RowBox[{
          RowBox[{"NumberForm", "[", 
           RowBox[{"#", ",", "4"}], "]"}], "&"}]}], "]"}], "<>", 
       "\"\<, kurt= \>\"", "<>", 
       RowBox[{"TS", "[", 
        RowBox[{"kurtR2", "//", 
         RowBox[{
          RowBox[{"NumberForm", "[", 
           RowBox[{"#", ",", "4"}], "]"}], "&"}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input",
 CellAutoOverwrite->False],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"histFIDresidplt", ",", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"MousePosition", "[", "\"\<Graphics\>\"", "]"}], "]"}]}], 
  "}"}]], "Input"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Export FID resids histogram plot\>\"", ",", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ToString", "[", 
        RowBox[{"StringDrop", "[", 
         RowBox[{"fileinS", ",", "0"}], "]"}], "]"}], "<>", "\"\<_\>\"", "<>",
        "reflen$", "<>", "\"\<_FIDhist.tiff\>\""}], ",", "histFIDresidplt", 
      ",", 
      RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
      RowBox[{"ImageResolution", "->", "100"}]}], "]"}]}], "]"}],
  FontColor->RGBColor[1, 0, 1]]], "Input"],

Cell[BoxData[
 RowBox[{"rbwc", "=", 
  RowBox[{"BoxWhiskerChart", "[", 
   RowBox[{"zFIDresids", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Outliers\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<MeanMarker\>\"", ",", "1.0", ",", "Thick"}], "}"}]}], 
     "}"}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
       RowBox[{"FontSize", "->", "12"}]}], "]"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"fileinS", "<>", "\"\< FIDresids\>\"", "<>", "\"\<\\n99%=\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{
        RowBox[{"hrange", "[", 
         RowBox[{"zFIDresids", ",", "0.005", ",", "0.995"}], "]"}], "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", "4"}], "]"}], "&"}]}], "]"}], "<>", 
      "\"\<, PV99=\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"PVrange99", "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", "4"}], "]"}], "&"}]}], "]"}], "<>", 
      "\"\<\\nsdev=\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"sigmaR2", "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", "4"}], "]"}], "&"}]}], "]"}], "<>", "zunit$"}]}], 
    ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"zunit$", ",", "\"\<\>\""}], "}"}]}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input",
 CellAutoOverwrite->False],

Cell[BoxData[
 StyleBox[
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Export FID box whisker chart file\>\"", ",", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ToString", "[", 
        RowBox[{"StringDrop", "[", 
         RowBox[{"fileinS", ",", "0"}], "]"}], "]"}], "<>", "\"\<_\>\"", "<>",
        "reflen$", "<>", "\"\<_FIDboxwhisk.tiff\>\""}], ",", "rbwc", ",", 
      RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
      RowBox[{"ImageResolution", "->", "100"}]}], "]"}]}], "]"}],
  FontColor->RGBColor[1, 0, 1]]], "Input"],

Cell["Trim both the XYZ and the Z data lists", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"threshFmin", ",", "threshFmax"}], "}"}], "=", 
  RowBox[{"Input", "[", 
   RowBox[{
   "\"\<Enter {min,max} threshold values for trimming bad FID points.\>\"", 
    ",", 
    RowBox[{"Quantile", "[", 
     RowBox[{"zFIDresids", ",", 
      RowBox[{"{", 
       RowBox[{"0.001", ",", "0.999"}], "}"}]}], "]"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FIDresidsZtrim", "=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Drop", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Reap", "[", " ", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"FIDdata", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "3"}], "]"}], "]"}], "-", 
              RowBox[{"cFID", "[", 
               RowBox[{
                RowBox[{"FIDdata", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"FIDdata", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}]}], "<", 
             "threshFmax"}], " ", "&&", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"FIDdata", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "3"}], "]"}], "]"}], "-", 
              RowBox[{"cFID", "[", 
               RowBox[{
                RowBox[{"FIDdata", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"FIDdata", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}]}], ">", 
             "threshFmin"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"Sow", "[", 
            RowBox[{
             RowBox[{"FIDdata", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "3"}], "]"}], "]"}], "-", 
             RowBox[{"cFID", "[", 
              RowBox[{
               RowBox[{"FIDdata", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"FIDdata", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "2"}], "]"}], "]"}]}], " ", "]"}]}], 
            "]"}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "FIDdata", "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], ",", 
      "\[IndentingNewLine]", "1"}], "]"}], "//", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"#", ",", "2"}], "]"}], "&"}]}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FIDdatatrim", "=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Drop", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Reap", "[", "\[IndentingNewLine]", " ", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"FIDdata", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "3"}], "]"}], "]"}], "-", 
              RowBox[{"cFID", "[", 
               RowBox[{
                RowBox[{"FIDdata", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"FIDdata", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}]}], "<", 
             "threshFmax"}], " ", "&&", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"FIDdata", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "3"}], "]"}], "]"}], "-", 
              RowBox[{"cFID", "[", 
               RowBox[{
                RowBox[{"FIDdata", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"FIDdata", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}]}], ">", 
             "threshFmin"}]}], ",", 
           RowBox[{"Sow", "[", 
            RowBox[{"FIDdata", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "FIDdata", "]"}]}], "}"}]}], "]"}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", "1"}], "]"}],
     "//", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"#", ",", "2"}], "]"}], "&"}]}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FIDresidsXYZtrim", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FIDdatatrim", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"FIDdatatrim", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"FIDresidsZtrim", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "FIDdatatrim", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxzFID", "=", 
   RowBox[{"Max", "[", "FIDresidsZtrim", "]"}]}], ";", 
  RowBox[{"minzFID", "=", 
   RowBox[{"Min", "[", "FIDresidsZtrim", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigmaFID", "=", 
   RowBox[{"StandardDeviation", "[", "FIDresidsZtrim", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"skewFID", "=", 
   RowBox[{"Skewness", "[", "FIDresidsZtrim", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kurtFID", "=", 
   RowBox[{"Kurtosis", "[", "FIDresidsZtrim", "]"}]}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input",
 CellAutoOverwrite->False],

Cell[BoxData[
 RowBox[{"FIDflathist", "=", 
  RowBox[{"Histogram", "[", 
   RowBox[{"FIDresidsZtrim", ",", 
    RowBox[{
     RowBox[{"5", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"maxzFID", "-", "minzFID"}], ")"}], "/", "sigmaFID"}]}], "//", 
     RowBox[{
      RowBox[{"Round", "[", "#", "]"}], "&"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"filein", "<>", "\"\<\\nsig= \>\"", "<>", 
      RowBox[{"TS", "[", "sigmaFID", "]"}], "<>", "\"\<, skew= \>\"", "<>", 
      RowBox[{"TS", "[", "skewFID", "]"}], "<>", "\"\<, kurt= \>\"", "<>", 
      RowBox[{"TS", "[", "kurtFID", "]"}]}]}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "These", " ", "are", " ", "the", " ", "residuals", " ", "after", " ", 
    "removing", " ", "plane", " ", "fit"}], "*)"}]}]], "Input"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Set FIDdata to the trimmed list. Iterate the trim if desired.\
\>", "Text"],

Cell[BoxData[
 RowBox[{"cFID", "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FIDdata", "=", "FIDdatatrim"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{"\"\<Click to iterate FIDdata trim to recalc cFID fit eqn\>\"", ",", 
   RowBox[{"NotebookLocate", "[", "\"\<FIDdata iterate restart\>\"", "]"}]}], 
  "]"}]], "Input"]
}, Open  ]]
}, Closed]],

Cell[BoxData[
 RowBox[{"ballregions", "=", 
  RowBox[{"Table", "[", " ", 
   RowBox[{
    RowBox[{"Ball", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Drop", "[", 
        RowBox[{"ballsOGPMM", ",", "None", ",", 
         RowBox[{"-", "1"}]}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", "10."}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "3"}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"For", " ", "old", " ", "MF03", " ", "cal", " ", "data"}], ",", 
    " ", 
    RowBox[{"pre", "-", 
     RowBox[{"Feb", " ", "2016"}]}]}], "*)"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"i", "\[Equal]", "1"}], ",", 
        RowBox[{"blist", "=", 
         RowBox[{"{", "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"templist", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"RegionMember", "[", 
            RowBox[{
             RowBox[{"ballregions", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"cloudXYZ", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], "]"}], "&&", " ", 
           RowBox[{"!", 
            RowBox[{"RegionMember", "[", 
             RowBox[{
              RowBox[{"centregions", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"cloudXYZ", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}]}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"templist", ",", 
            RowBox[{"cloudXYZ", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", "Null"}], "]"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{"Length", "[", "cloudXYZ", "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"templist", "//", "Short"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"blist", ",", "templist"}], "]"}]}], "\[IndentingNewLine]", 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "3"}], "}"}]}], "]"}], "*)"}]}]], "Input"],

Cell[CellGroupData[{

Cell["\<\
Compute the ABS RAFT surface relative to the BAL datum plane and plot it. \
This is using the analytic fit equations for the ball datum surface and the \
plane fit to the raft surface.\
\>", "Text"],

Cell[BoxData[
 RowBox[{"RAFTabsZ", "=."}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RAFTabsZeqn", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RFTdata", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"RFTdata", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"RFTfithgt", "[", 
        RowBox[{
         RowBox[{"RFTdata", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"RFTdata", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "RFTdata", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"RFTfabsZplt", "=", 
  RowBox[{"ListPointPlot3D", "[", 
   RowBox[{"RAFTabsZeqn", ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"PlotLabel", "->", 
     RowBox[{"fileinS", "<>", "\"\<_AbsZ\>\""}]}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<Y- edge\>\"", ",", "\"\<X- edge\>\"", ",", "\"\<Z\>\""}], 
      "}"}]}], ",", 
    RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"Opacity", "[", "0.5", "]"}]}], ",", 
    RowBox[{"ViewPoint", "->", 
     RowBox[{"Dynamic", "[", "vp1", "]"}]}]}], "]"}]}]], "Input"],

Cell["\<\
Compute the statistics from this set of analytic computed points. Only the \
PV100 number counts.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RFTabsZeqnvals", "=", 
   RowBox[{
    RowBox[{"Take", "[", 
     RowBox[{"RAFTabsZeqn", ",", "All", ",", 
      RowBox[{"{", "3", "}"}]}], "]"}], "//", "Flatten"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"RFTabsZeqnq", "=", 
  RowBox[{"Quantile", "[", 
   RowBox[{"RFTabsZeqnvals", ",", "qlist"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"qtableABSZeqn", "=", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{"qlist", ",", "RFTabsZeqnq"}], "}"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"qtableABSZeqn$", "=", 
  RowBox[{"TS", "[", 
   RowBox[{"qtableABSZeqn", "//", 
    RowBox[{
     RowBox[{"TableForm", "[", 
      RowBox[{"#", ",", 
       RowBox[{"TableSpacing", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "6"}], "}"}]}]}], "]"}], "&"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"fileinS", "<>", "\"\<_RFTAbsZeqn_quant.txt\>\""}], ",", 
   RowBox[{
   "fileinS", "<>", "\"\<\\tQuantiles\>\"", "<>", "qtableABSZeqn$"}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Export AbsZ Quantile table file\>\"", ",", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"fileinS", "<>", "\"\<_RFTAbsZeqn_quant.txt\>\""}], ",", 
      RowBox[{
      "fileinS", "<>", "\"\<\\tQuantiles\>\"", "<>", "qtableABSZeqn$"}]}], 
     "]"}]}], "]"}],
  FontColor->RGBColor[1, 0, 1]]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rPV100eqn", "=", 
   RowBox[{
    RowBox[{"RFTabsZeqnq", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "-", 
    RowBox[{"RFTabsZeqnq", "[", 
     RowBox[{"[", 
      RowBox[{"-", "1"}], "]"}], "]"}]}]}], ";", 
  RowBox[{"rPV99eqn", "=", 
   RowBox[{
    RowBox[{"RFTabsZeqnq", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "-", 
    RowBox[{"RFTabsZeqnq", "[", 
     RowBox[{"[", 
      RowBox[{"-", "2"}], "]"}], "]"}]}]}], ";", 
  RowBox[{"rPV95eqn", "=", 
   RowBox[{
    RowBox[{"RFTabsZeqnq", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "-", 
    RowBox[{"RFTabsZeqnq", "[", 
     RowBox[{"[", 
      RowBox[{"-", "3"}], "]"}], "]"}]}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotLabel", "\[Rule]", 
   RowBox[{
   "fileinS", "<>", "\"\<\\nRaft AbsZeqn wrt Datum A\>\"", "<>", 
    "\"\<\\nPV99=\>\"", "<>", 
    RowBox[{"TS", "[", "rPV99eqn", "]"}], "<>", "\"\<, PV95=\>\"", "<>", 
    RowBox[{"TS", "[", "rPV95eqn", "]"}], "<>", "\"\<median= \>\"", "<>", 
    RowBox[{"TS", "[", 
     RowBox[{"RFTabsZeqnq", "[", 
      RowBox[{"[", "5", "]"}], "]"}], "]"}]}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"RFTabsZeqnhistplt", "=", 
  RowBox[{"Histogram", "[", 
   RowBox[{"RFTabsZeqnvals", ",", "50", ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{
     "fileinS", "<>", "\"\<\\nRaft AbsZeqn wrt Datum A\>\"", "<>", 
      "\"\<\\nPV99= \>\"", "<>", 
      RowBox[{"TS", "[", "rPV99eqn", "]"}], "<>", "\"\< PV95= \>\"", "<>", 
      RowBox[{"TS", "[", "rPV95eqn", "]"}], "<>", "\"\< median= \>\"", "<>", 
      RowBox[{"TS", "[", 
       RowBox[{"RFTabsZeqnq", "[", 
        RowBox[{"[", "5", "]"}], "]"}], "]"}]}]}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"TS", "[", "fileinS", "]"}], "<>", "\"\<_\>\"", "<>", 
    "\"\<RFTabsZeqn_hist.tiff\>\""}], ",", "RFTabsZeqnhistplt", ",", 
   RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
   RowBox[{"ImageResolution", "->", "100"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{"\"\<Output AbsZ histogram\>\"", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"TS", "[", "fileinS", "]"}], "<>", "\"\<_\>\"", "<>", 
      "\"\<RFTabsZeqn_hist.tiff\>\""}], ",", "RFTabsZeqnhistplt", ",", 
     RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
     RowBox[{"ImageResolution", "->", "100"}]}], "]"}], ",", 
   RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["More Limbo", "Section"],

Cell[BoxData[
 RowBox[{"ballcoorddiffs", "=", 
  RowBox[{
   RowBox[{"ballfits", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"1", ";;", "3"}]}], "]"}], "]"}], "-", 
   "ballsOGPMM"}]}]], "Input"],

Cell[BoxData["ballcoorddiffs"], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ballcoorddiffsout", "=", 
   RowBox[{"Prepend", "[", 
    RowBox[{"ballcoorddiffs", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<x0\>\"", ",", "\"\<y0\>\"", ",", "\"\<z0\>\""}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ballcoorddiffsout", "=", 
   RowBox[{"Prepend", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "ballcoorddiffsout", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<LL\>\"", ",", "\"\<LR\>\"", ",", "\"\<UC\>\""}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ballcoorddiffsout", "=", 
   RowBox[{"Prepend", "[", 
    RowBox[{"ballcoorddiffsout", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
       "fileinS", "<>", "\"\<\\nDifference: SurfCalc - MeasureMind\>\""}], 
       ",", "\"\<\>\"", ",", "\"\<\>\"", ",", "\"\<\>\""}], "}"}]}], "]"}]}], 
  ";"}]}], "Input"],

Cell[BoxData["filein"], "Input"],

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{
  "\"\<Output the ballcoorddiffs results\>\"", ",", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"fileinS", "<>", "\"\<_BallDiffs.txt\>\""}], ",", 
     "ballcoorddiffsout"}], "]"}]}], "]"}]], "Input"]
}, Closed]]
}, Closed]],

Cell[BoxData[
 RowBox[{"NotebookLocate", "[", "\"\<Full restart here\>\"", "]"}]], "Input"]
},
CellGrouping->Manual,
WindowSize->{800, 821},
WindowMargins->{{-2, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
ShowCellTags->True,
FrontEndVersion->"10.4 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 11, \
2016)",
StyleDefinitions->"MyStyle01.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Full restart here"->{
  Cell[2087, 59, 314, 7, 152, "Section",
   CellTags->"Full restart here"]},
 "pick MST file num"->{
  Cell[11745, 370, 88, 1, 70, "Subsubsection",
   CellTags->"pick MST file num"]},
 "data ready"->{
  Cell[19708, 663, 63, 1, 70, "Subsubsection",
   CellTags->"data ready"]},
 "XY range restriction start"->{
  Cell[22417, 763, 184, 4, 70, "Subsubsection",
   CellTags->"XY range restriction start"]},
 "Iterate blist pts"->{
  Cell[38059, 1294, 134, 3, 70, "Subsubsection",
   CellTags->"Iterate blist pts"]},
 "RFTdata iterate restart"->{
  Cell[83927, 2708, 158, 4, 70, "Subsubsection",
   CellTags->"RFTdata iterate restart"]},
 "Iterate cDatum input"->{
  Cell[147153, 4589, 69, 1, 70, "Text",
   CellTags->"Iterate cDatum input"]},
 "FIDdata iterate restart"->{
  Cell[194989, 6173, 111, 1, 70, "Subsubsection",
   CellTags->"FIDdata iterate restart"]},
 "REFdata iterate restart"->{
  Cell[197376, 6243, 79, 1, 70, "Subsubsection",
   CellTags->"REFdata iterate restart"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Full restart here", 228948, 7205},
 {"pick MST file num", 229049, 7208},
 {"data ready", 229149, 7211},
 {"XY range restriction start", 229258, 7214},
 {"Iterate blist pts", 229375, 7217},
 {"RFTdata iterate restart", 229490, 7220},
 {"Iterate cDatum input", 229608, 7223},
 {"FIDdata iterate restart", 229717, 7226},
 {"REFdata iterate restart", 229839, 7229}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 26, 0, 25, "Input"],
Cell[429, 15, 52, 0, 77, "Title"],
Cell[484, 17, 91, 2, 63, "Subtitle"],
Cell[578, 21, 32, 0, 27, "Subsubtitle"],
Cell[613, 23, 59, 0, 63, "Subtitle"],
Cell[675, 25, 46, 0, 63, "Subtitle"],
Cell[724, 27, 936, 19, 279, "Subsubtitle"],
Cell[1663, 48, 399, 7, 87, "Text"],
Cell[CellGroupData[{
Cell[2087, 59, 314, 7, 152, "Section",
 CellTags->"Full restart here"],
Cell[2404, 68, 138, 3, 70, "Input"],
Cell[CellGroupData[{
Cell[2567, 75, 924, 24, 70, "Input"],
Cell[3494, 101, 1640, 41, 70, "Input"],
Cell[5137, 144, 114, 2, 70, "Input"],
Cell[5254, 148, 61, 1, 70, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[5364, 155, 77, 1, 42, "Section"],
Cell[5444, 158, 160, 4, 70, "Input"],
Cell[5607, 164, 316, 6, 70, "Text"],
Cell[5926, 172, 160, 4, 70, "Input"],
Cell[6089, 178, 700, 14, 70, "Input",
 InitializationCell->True],
Cell[6792, 194, 191, 5, 70, "Input"],
Cell[6986, 201, 169, 4, 70, "Input"],
Cell[7158, 207, 109, 2, 70, "Input"],
Cell[7270, 211, 146, 2, 70, "Input"],
Cell[7419, 215, 151, 2, 70, "Input"],
Cell[7573, 219, 115, 3, 70, "Input"],
Cell[CellGroupData[{
Cell[7713, 226, 140, 3, 70, "Subsubsection"],
Cell[7856, 231, 758, 25, 70, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[8663, 262, 75, 0, 42, "Section"],
Cell[8741, 264, 82, 2, 26, "Input"],
Cell[8826, 268, 219, 5, 58, "Input"],
Cell[9048, 275, 116, 2, 26, "Input"],
Cell[9167, 279, 111, 3, 42, "Text"],
Cell[9281, 284, 252, 7, 26, "Input"],
Cell[9536, 293, 200, 6, 26, "Input"],
Cell[9739, 301, 237, 6, 26, "Input"],
Cell[9979, 309, 138, 3, 26, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10154, 317, 128, 3, 95, "Section"],
Cell[10285, 322, 313, 5, 72, "Text"],
Cell[10601, 329, 116, 2, 26, "Input"],
Cell[10720, 333, 416, 12, 135, "Input"],
Cell[11139, 347, 115, 2, 70, "Input"],
Cell[11257, 351, 463, 15, 70, "Input"],
Cell[CellGroupData[{
Cell[11745, 370, 88, 1, 70, "Subsubsection",
 CellTags->"pick MST file num"],
Cell[11836, 373, 63, 1, 70, "Input"],
Cell[11902, 376, 143, 3, 70, "Input"],
Cell[12048, 381, 172, 5, 70, "Input"],
Cell[12223, 388, 27, 0, 70, "Input"],
Cell[12253, 390, 350, 9, 70, "Input"],
Cell[12606, 401, 289, 8, 70, "Input"],
Cell[12898, 411, 116, 2, 70, "Input"],
Cell[13017, 415, 382, 9, 70, "Input"],
Cell[13402, 426, 107, 3, 70, "Input"],
Cell[CellGroupData[{
Cell[13534, 433, 50, 0, 70, "Text"],
Cell[13587, 435, 298, 8, 70, "Input"],
Cell[13888, 445, 406, 11, 70, "Input"],
Cell[14297, 458, 71, 1, 70, "Input"],
Cell[14371, 461, 116, 2, 70, "Input"]
}, Open  ]],
Cell[14502, 466, 110, 3, 70, "Text"],
Cell[14615, 471, 64, 1, 70, "Input"],
Cell[14682, 474, 78, 2, 70, "Input"],
Cell[14763, 478, 267, 5, 70, "Subsubsection"],
Cell[15033, 485, 216, 6, 70, "Input"],
Cell[15252, 493, 285, 10, 70, "Input"],
Cell[15540, 505, 207, 7, 70, "Input"],
Cell[15750, 514, 172, 6, 70, "Input"],
Cell[15925, 522, 252, 5, 70, "Text"],
Cell[16180, 529, 62, 0, 70, "Text"],
Cell[16245, 531, 254, 8, 70, "Input"],
Cell[16502, 541, 218, 7, 70, "Input"],
Cell[16723, 550, 145, 3, 70, "Text"],
Cell[16871, 555, 1033, 32, 70, "Input"],
Cell[17907, 589, 375, 12, 70, "Input"],
Cell[18285, 603, 310, 10, 70, "Input"],
Cell[18598, 615, 65, 1, 70, "Input"],
Cell[18666, 618, 149, 5, 70, "Input"],
Cell[18818, 625, 227, 8, 70, "Input"],
Cell[19048, 635, 65, 1, 70, "Input"],
Cell[19116, 638, 183, 6, 70, "Input"],
Cell[19302, 646, 116, 2, 70, "Input"],
Cell[19421, 650, 128, 3, 70, "Input"]
}, Open  ]],
Cell[19564, 656, 119, 3, 70, "Subsubsection"],
Cell[CellGroupData[{
Cell[19708, 663, 63, 1, 70, "Subsubsection",
 CellTags->"data ready"],
Cell[19774, 666, 274, 8, 70, "Input"],
Cell[20051, 676, 42, 0, 70, "Text"],
Cell[20096, 678, 249, 7, 70, "Input"],
Cell[20348, 687, 216, 7, 70, "Input"],
Cell[20567, 696, 716, 21, 70, "Input"],
Cell[21286, 719, 100, 3, 70, "Input"],
Cell[21389, 724, 143, 3, 70, "Input"],
Cell[21535, 729, 285, 8, 70, "Input"],
Cell[21823, 739, 70, 1, 70, "Input"]
}, Open  ]],
Cell[21908, 743, 38, 0, 70, "Text"],
Cell[21949, 745, 374, 12, 70, "Input"],
Cell[CellGroupData[{
Cell[22348, 761, 66, 0, 70, "Subsection"],
Cell[22417, 763, 184, 4, 70, "Subsubsection",
 CellTags->"XY range restriction start"],
Cell[22604, 769, 187, 4, 70, "Text"],
Cell[22794, 775, 591, 18, 70, "Input"],
Cell[23388, 795, 801, 26, 70, "Input"],
Cell[24192, 823, 267, 8, 70, "Input"],
Cell[24462, 833, 117, 2, 70, "Input"],
Cell[24582, 837, 54, 0, 70, "Text"],
Cell[24639, 839, 327, 10, 70, "Input"],
Cell[24969, 851, 70, 1, 70, "Input"],
Cell[25042, 854, 116, 2, 70, "Input"],
Cell[25161, 858, 598, 14, 70, "Input"],
Cell[25762, 874, 30, 0, 70, "Input"],
Cell[25795, 876, 300, 7, 70, "Input"],
Cell[26098, 885, 516, 12, 70, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26651, 902, 148, 4, 70, "Subsubsection"],
Cell[26802, 908, 619, 19, 70, "Input"],
Cell[27424, 929, 268, 8, 70, "Input"],
Cell[27695, 939, 143, 3, 70, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27875, 947, 52, 0, 70, "Section"],
Cell[27930, 949, 117, 3, 70, "Subsection"],
Cell[CellGroupData[{
Cell[28072, 956, 62, 0, 70, "Text"],
Cell[28137, 958, 350, 12, 70, "Input"],
Cell[28490, 972, 314, 8, 70, "Input"],
Cell[28807, 982, 246, 6, 70, "Input"],
Cell[29056, 990, 451, 12, 70, "Input"],
Cell[29510, 1004, 381, 12, 70, "Input"],
Cell[29894, 1018, 210, 5, 70, "Input"],
Cell[30107, 1025, 243, 8, 70, "Input"]
}, Open  ]],
Cell[30365, 1036, 121, 3, 70, "Subsubsection"],
Cell[30489, 1041, 277, 8, 70, "Input"],
Cell[30769, 1051, 173, 4, 70, "Text"],
Cell[30945, 1057, 1144, 29, 70, "Input"],
Cell[32092, 1088, 142, 4, 70, "Input"],
Cell[32237, 1094, 71, 0, 70, "Text"],
Cell[32311, 1096, 391, 13, 70, "Input"],
Cell[32705, 1111, 152, 4, 70, "Input"],
Cell[CellGroupData[{
Cell[32882, 1119, 216, 7, 70, "Input"],
Cell[33101, 1128, 243, 9, 70, "Input"],
Cell[33347, 1139, 210, 5, 70, "Input"],
Cell[33560, 1146, 49, 0, 70, "Text"],
Cell[33612, 1148, 489, 16, 70, "Input"],
Cell[34104, 1166, 143, 3, 70, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[34296, 1175, 94, 2, 70, "Section"],
Cell[34393, 1179, 72, 0, 70, "Subsubsection"],
Cell[34468, 1181, 194, 4, 70, "Text"],
Cell[34665, 1187, 737, 17, 70, "Input"],
Cell[35405, 1206, 266, 7, 70, "Input"],
Cell[35674, 1215, 152, 3, 70, "Text"],
Cell[35829, 1220, 257, 6, 70, "Input"],
Cell[36089, 1228, 827, 21, 70, "Input"]
}, Open  ]],
Cell[36931, 1252, 167, 4, 70, "Input"],
Cell[37101, 1258, 224, 7, 70, "Input"],
Cell[37328, 1267, 144, 4, 70, "Input"],
Cell[37475, 1273, 143, 3, 70, "Input"],
Cell[37621, 1278, 307, 7, 70, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37965, 1290, 91, 2, 70, "Subsection"],
Cell[38059, 1294, 134, 3, 70, "Subsubsection",
 CellTags->"Iterate blist pts"],
Cell[38196, 1299, 58, 1, 70, "Input"],
Cell[38257, 1302, 329, 10, 70, "Input"],
Cell[38589, 1314, 100, 3, 70, "Input"],
Cell[38692, 1319, 725, 18, 70, "Input"],
Cell[39420, 1339, 89, 3, 70, "Input"],
Cell[39512, 1344, 454, 14, 70, "Input"],
Cell[39969, 1360, 143, 3, 70, "Input"],
Cell[40115, 1365, 168, 4, 70, "Input"],
Cell[40286, 1371, 309, 7, 70, "Input"],
Cell[40598, 1380, 471, 10, 70, "Input"],
Cell[CellGroupData[{
Cell[41094, 1394, 78, 0, 70, "Subsubsection"],
Cell[41175, 1396, 112, 3, 70, "Text"],
Cell[41290, 1401, 184, 6, 70, "Input"],
Cell[41477, 1409, 421, 14, 70, "Input"],
Cell[41901, 1425, 134, 4, 70, "Input"],
Cell[42038, 1431, 155, 5, 70, "Input"],
Cell[42196, 1438, 58, 0, 70, "Text"],
Cell[42257, 1440, 172, 5, 70, "Input"],
Cell[42432, 1447, 1538, 41, 70, "Input"],
Cell[43973, 1490, 364, 9, 70, "Input"],
Cell[44340, 1501, 109, 3, 70, "Input"],
Cell[44452, 1506, 5475, 149, 70, "Input"],
Cell[49930, 1657, 116, 3, 70, "Input"],
Cell[50049, 1662, 134, 3, 70, "Text"],
Cell[50186, 1667, 739, 23, 70, "Input"],
Cell[50928, 1692, 368, 8, 70, "Input"],
Cell[51299, 1702, 34, 0, 70, "Input"],
Cell[51336, 1704, 178, 5, 70, "Input"],
Cell[51517, 1711, 349, 11, 70, "Input"],
Cell[51869, 1724, 462, 13, 70, "Input"]
}, Open  ]],
Cell[52346, 1740, 160, 3, 70, "Text"],
Cell[52509, 1745, 131, 3, 70, "Input"],
Cell[52643, 1750, 122, 3, 70, "Input"],
Cell[52768, 1755, 143, 3, 70, "Input"],
Cell[52914, 1760, 186, 6, 70, "Input"],
Cell[53103, 1768, 1668, 42, 70, "Input"],
Cell[54774, 1812, 281, 6, 70, "Input"],
Cell[55058, 1820, 442, 9, 70, "Input"],
Cell[55503, 1831, 55, 1, 70, "Input"],
Cell[55561, 1834, 924, 23, 70, "Input"],
Cell[56488, 1859, 583, 15, 70, "Input"],
Cell[57074, 1876, 764, 18, 70, "Input"],
Cell[CellGroupData[{
Cell[57863, 1898, 276, 5, 70, "Subsection"],
Cell[58142, 1905, 1637, 46, 70, "Input"],
Cell[59782, 1953, 70, 1, 70, "Input"],
Cell[59855, 1956, 139, 4, 70, "Input"],
Cell[59997, 1962, 93, 2, 70, "Input"],
Cell[60093, 1966, 399, 11, 70, "Input"],
Cell[60495, 1979, 143, 3, 70, "Input"],
Cell[60641, 1984, 939, 24, 70, "Input"],
Cell[61583, 2010, 271, 9, 70, "Input"],
Cell[61857, 2021, 280, 6, 70, "Input"],
Cell[62140, 2029, 449, 9, 70, "Input"],
Cell[CellGroupData[{
Cell[62614, 2042, 85, 2, 70, "Text"],
Cell[62702, 2046, 352, 11, 70, "Input"],
Cell[63057, 2059, 181, 5, 70, "Input"],
Cell[63241, 2066, 2333, 62, 70, "Input"]
}, Open  ]],
Cell[65589, 2131, 153, 3, 70, "Input"],
Cell[65745, 2136, 143, 3, 70, "Input"],
Cell[65891, 2141, 187, 4, 70, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[66127, 2151, 63, 0, 70, "Section"],
Cell[66193, 2153, 34, 0, 70, "Input"],
Cell[66230, 2155, 137, 4, 70, "Input"],
Cell[66370, 2161, 76, 2, 70, "Input"],
Cell[66449, 2165, 215, 7, 70, "Input"],
Cell[66667, 2174, 60, 0, 70, "Text"],
Cell[66730, 2176, 34, 0, 70, "Input"],
Cell[66767, 2178, 730, 22, 70, "Input"],
Cell[67500, 2202, 155, 4, 70, "Input"],
Cell[67658, 2208, 275, 6, 70, "Input"],
Cell[CellGroupData[{
Cell[67958, 2218, 37, 0, 70, "Subsubsection"],
Cell[67998, 2220, 151, 5, 70, "Input"],
Cell[68152, 2227, 337, 6, 70, "Text"],
Cell[68492, 2235, 69, 2, 70, "Input"],
Cell[68564, 2239, 1143, 30, 70, "Input"],
Cell[69710, 2271, 942, 25, 70, "Input"],
Cell[70655, 2298, 318, 9, 70, "Input"],
Cell[70976, 2309, 301, 7, 70, "Input"],
Cell[71280, 2318, 465, 10, 70, "Input"],
Cell[71748, 2330, 62, 1, 70, "Input"],
Cell[71813, 2333, 116, 2, 70, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71966, 2340, 60, 0, 70, "Section"],
Cell[72029, 2342, 70, 0, 70, "Subsubsection"],
Cell[72102, 2344, 257, 5, 70, "Text"],
Cell[72362, 2351, 404, 12, 70, "Input"],
Cell[72769, 2365, 205, 6, 70, "Input"],
Cell[72977, 2373, 34, 0, 70, "Input"],
Cell[73014, 2375, 65, 1, 70, "Input"],
Cell[73082, 2378, 354, 11, 70, "Input"],
Cell[73439, 2391, 128, 3, 70, "Text"],
Cell[73570, 2396, 586, 16, 70, "Input"],
Cell[74159, 2414, 935, 22, 70, "Input"],
Cell[75097, 2438, 527, 12, 70, "Input"],
Cell[75627, 2452, 698, 17, 70, "Input"],
Cell[76328, 2471, 27, 0, 70, "Input"],
Cell[76358, 2473, 579, 12, 70, "Input"],
Cell[76940, 2487, 116, 2, 70, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77093, 2494, 54, 0, 70, "Section"],
Cell[77150, 2496, 189, 4, 70, "Text"],
Cell[77342, 2502, 153, 4, 70, "Input"],
Cell[77498, 2508, 105, 1, 70, "Text"],
Cell[77606, 2511, 241, 6, 70, "Input"],
Cell[77850, 2519, 288, 7, 70, "Input"],
Cell[78141, 2528, 286, 7, 70, "Input"],
Cell[78430, 2537, 353, 11, 70, "Input"],
Cell[78786, 2550, 353, 11, 70, "Input"],
Cell[79142, 2563, 353, 11, 70, "Input"],
Cell[79498, 2576, 116, 2, 70, "Input"],
Cell[79617, 2580, 34, 0, 70, "Input"],
Cell[79654, 2582, 710, 14, 70, "Input"],
Cell[80367, 2598, 926, 22, 70, "Input"],
Cell[81296, 2622, 112, 2, 70, "Input"],
Cell[81411, 2626, 871, 20, 70, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[82331, 2652, 59, 0, 70, "Subtitle"],
Cell[82393, 2654, 72, 2, 70, "Input"],
Cell[82468, 2658, 602, 15, 70, "Input"],
Cell[CellGroupData[{
Cell[83095, 2677, 230, 4, 70, "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[83328, 2683, 235, 7, 70, "Input"]
}, Open  ]],
Cell[83578, 2693, 324, 11, 70, "Input"],
Cell[CellGroupData[{
Cell[83927, 2708, 158, 4, 70, "Subsubsection",
 CellTags->"RFTdata iterate restart"],
Cell[84088, 2714, 400, 12, 70, "Input"],
Cell[84491, 2728, 58, 0, 70, "Text"],
Cell[84552, 2730, 65, 1, 70, "Input"],
Cell[84620, 2733, 236, 7, 70, "Input"],
Cell[84859, 2742, 73, 2, 70, "Input"],
Cell[84935, 2746, 969, 25, 70, "Input"],
Cell[85907, 2773, 286, 7, 70, "Input"],
Cell[86196, 2782, 321, 7, 70, "Input"],
Cell[86520, 2791, 478, 10, 70, "Input"],
Cell[87001, 2803, 72, 0, 70, "Text"],
Cell[87076, 2805, 1100, 33, 70, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[88179, 2840, 834, 20, 70, "Input"],
Cell[89016, 2862, 67, 1, 70, "Input"],
Cell[89086, 2865, 416, 14, 70, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[89505, 2881, 308, 8, 70, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[89816, 2891, 225, 6, 70, "Input"],
Cell[90044, 2899, 128, 3, 70, "Input"],
Cell[90175, 2904, 741, 25, 70, "Input"],
Cell[90919, 2931, 1525, 40, 70, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[92447, 2973, 153, 4, 70, "Input"],
Cell[92603, 2979, 204, 6, 70, "Input"],
Cell[92810, 2987, 288, 8, 70, "Input"],
Cell[93101, 2997, 451, 12, 70, "Input"],
Cell[93555, 3011, 116, 2, 70, "Input"],
Cell[93674, 3015, 178, 5, 70, "Input"],
Cell[93855, 3022, 337, 8, 70, "Input"],
Cell[94195, 3032, 510, 11, 70, "Input"],
Cell[94708, 3045, 93, 1, 70, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[94804, 3048, 380, 11, 70, "Input"],
Cell[95187, 3061, 2094, 52, 70, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[97284, 3115, 886, 21, 70, "Input"],
Cell[98173, 3138, 523, 12, 70, "Input"],
Cell[98699, 3152, 52, 0, 70, "Text"],
Cell[98754, 3154, 69, 1, 70, "Input"],
Cell[98826, 3157, 83, 2, 70, "Input"],
Cell[98912, 3161, 65, 1, 70, "Input"],
Cell[98980, 3164, 116, 2, 70, "Input"],
Cell[99099, 3168, 591, 18, 70, "Input"],
Cell[99693, 3188, 227, 5, 70, "Input"],
Cell[99923, 3195, 57, 1, 70, "Input"],
Cell[99983, 3198, 71, 0, 70, "Subsubsection"],
Cell[100057, 3200, 65, 1, 70, "Input"],
Cell[100125, 3203, 591, 18, 70, "Input"],
Cell[100719, 3223, 925, 29, 70, "Input"],
Cell[101647, 3254, 147, 3, 70, "Subsubsection"],
Cell[101797, 3259, 929, 29, 70, "Input"],
Cell[102729, 3290, 696, 16, 70, "Input"],
Cell[103428, 3308, 41, 0, 70, "Subsubsection"],
Cell[103472, 3310, 263, 6, 70, "Text"],
Cell[103738, 3318, 82, 2, 70, "Input"],
Cell[103823, 3322, 84, 2, 70, "Input"],
Cell[103910, 3326, 381, 12, 70, "Input"],
Cell[104294, 3340, 85, 2, 70, "Input"],
Cell[104382, 3344, 575, 16, 70, "Input"],
Cell[CellGroupData[{
Cell[104982, 3364, 259, 5, 70, "Subsubsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[105244, 3371, 1071, 32, 70, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[106318, 3405, 149, 5, 70, "Input"],
Cell[106470, 3412, 754, 17, 70, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[107227, 3431, 286, 6, 70, "Input"],
Cell[107516, 3439, 445, 9, 70, "Input"],
Cell[107964, 3450, 113, 1, 70, "Subsubsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[108080, 3453, 274, 7, 70, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[108357, 3462, 210, 5, 70, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[108570, 3469, 215, 5, 70, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[108788, 3476, 375, 11, 70, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[109166, 3489, 277, 7, 70, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[109446, 3498, 434, 11, 70, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[109883, 3511, 739, 23, 70, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[110625, 3536, 671, 14, 70, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[111299, 3552, 382, 8, 70, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[111684, 3562, 537, 11, 70, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[112236, 3576, 93, 2, 70, "Text"],
Cell[112332, 3580, 1113, 29, 70, "Input"],
Cell[113448, 3611, 389, 9, 70, "Input"],
Cell[113840, 3622, 554, 12, 58, "Input"],
Cell[114397, 3636, 66, 0, 42, "Text"],
Cell[114466, 3638, 34, 0, 25, "Input"],
Cell[114503, 3640, 560, 19, 26, "Input"],
Cell[115066, 3661, 694, 22, 42, "Input"],
Cell[115763, 3685, 97, 2, 26, "Input"],
Cell[115863, 3689, 116, 2, 26, "Input"],
Cell[115982, 3693, 981, 19, 90, "Input"],
Cell[116966, 3714, 1151, 23, 106, "Input"],
Cell[118120, 3739, 1331, 28, 122, "Input"]
}, Open  ]]
}, Open  ]],
Cell[119478, 3771, 1394, 23, 267, "Text"],
Cell[CellGroupData[{
Cell[120897, 3798, 24, 0, 72, "Section"],
Cell[CellGroupData[{
Cell[120946, 3802, 216, 5, 70, "Section"],
Cell[121165, 3809, 271, 8, 70, "Input",
 Evaluatable->False],
Cell[121439, 3819, 257, 5, 70, "Text"],
Cell[121699, 3826, 332, 7, 70, "Text"],
Cell[122034, 3835, 308, 6, 70, "Text"],
Cell[122345, 3843, 235, 5, 70, "Input",
 Evaluatable->False],
Cell[122583, 3850, 512, 11, 70, "Input",
 Evaluatable->False],
Cell[123098, 3863, 718, 17, 70, "Input",
 Evaluatable->False],
Cell[123819, 3882, 441, 12, 70, "Input",
 Evaluatable->False],
Cell[124263, 3896, 232, 5, 70, "Text"],
Cell[124498, 3903, 255, 6, 70, "Input",
 Evaluatable->False],
Cell[124756, 3911, 679, 17, 70, "Input",
 Evaluatable->False],
Cell[125438, 3930, 268, 5, 70, "Text"],
Cell[125709, 3937, 754, 19, 70, "Input",
 Evaluatable->False],
Cell[126466, 3958, 1639, 43, 70, "Input",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[128130, 4005, 428, 8, 70, "Subsubsection"],
Cell[128561, 4015, 2827, 69, 70, "Input",
 Evaluatable->False],
Cell[131391, 4086, 229, 5, 70, "Input",
 Evaluatable->False],
Cell[131623, 4093, 451, 11, 70, "Input",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[132099, 4108, 317, 7, 70, "Input",
 Evaluatable->False],
Cell[132419, 4117, 215, 5, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132671, 4127, 210, 4, 70, "Input",
 Evaluatable->False],
Cell[132884, 4133, 29, 0, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132950, 4138, 247, 5, 70, "Input",
 Evaluatable->False],
Cell[133200, 4145, 29, 0, 70, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[133278, 4151, 692, 12, 70, "Subsubsection"],
Cell[133973, 4165, 1084, 28, 70, "Input",
 Evaluatable->False],
Cell[135060, 4195, 712, 19, 70, "Input",
 Evaluatable->False],
Cell[135775, 4216, 323, 7, 70, "Text"],
Cell[136101, 4225, 760, 23, 70, "Input",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[136886, 4252, 311, 8, 70, "Input",
 Evaluatable->False],
Cell[137200, 4262, 287, 10, 70, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[137536, 4278, 264, 5, 70, "Subsubsection"],
Cell[137803, 4285, 1003, 25, 70, "Input",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[138843, 4315, 391, 8, 70, "Subsubsection"],
Cell[CellGroupData[{
Cell[139259, 4327, 464, 10, 70, "Input",
 Evaluatable->False],
Cell[139726, 4339, 154, 4, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139917, 4348, 371, 9, 70, "Input",
 Evaluatable->False],
Cell[140291, 4359, 105, 3, 70, "Output"]
}, Open  ]],
Cell[140411, 4365, 559, 17, 70, "Input",
 Evaluatable->False],
Cell[140973, 4384, 37, 0, 70, "Text"],
Cell[141013, 4386, 277, 8, 70, "Input",
 Evaluatable->False],
Cell[141293, 4396, 162, 5, 70, "Input",
 Evaluatable->False]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[141504, 4407, 54, 0, 70, "Section"],
Cell[141561, 4409, 189, 4, 70, "Text"],
Cell[141753, 4415, 154, 4, 70, "Input"],
Cell[141910, 4421, 1254, 41, 70, "Input"],
Cell[143167, 4464, 189, 4, 70, "Input"],
Cell[143359, 4470, 153, 4, 70, "Input"],
Cell[143515, 4476, 1261, 41, 70, "Input"],
Cell[144779, 4519, 195, 4, 70, "Input"],
Cell[144977, 4525, 838, 20, 70, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[145852, 4550, 101, 2, 70, "Section"],
Cell[145956, 4554, 608, 9, 70, "Text"],
Cell[CellGroupData[{
Cell[146589, 4567, 72, 0, 70, "Subsection"],
Cell[146664, 4569, 174, 3, 70, "Input"],
Cell[146841, 4574, 75, 2, 70, "Input"],
Cell[146919, 4578, 209, 7, 70, "Input"],
Cell[CellGroupData[{
Cell[147153, 4589, 69, 1, 70, "Text",
 CellTags->"Iterate cDatum input"],
Cell[CellGroupData[{
Cell[147247, 4594, 179, 5, 70, "Input"],
Cell[147429, 4601, 156, 4, 70, "Input"],
Cell[147588, 4607, 67, 1, 70, "Input"],
Cell[147658, 4610, 95, 2, 70, "Input"],
Cell[147756, 4614, 176, 5, 70, "Input"],
Cell[147935, 4621, 174, 5, 70, "Input"],
Cell[148112, 4628, 178, 5, 70, "Input"],
Cell[148293, 4635, 284, 7, 70, "Input"]
}, Open  ]],
Cell[148592, 4645, 65, 1, 70, "Input"],
Cell[148660, 4648, 395, 11, 70, "Input"],
Cell[149058, 4661, 37, 0, 70, "Input"],
Cell[149098, 4663, 128, 3, 70, "Input"],
Cell[149229, 4668, 222, 6, 70, "Input"],
Cell[149454, 4676, 170, 6, 70, "Input"],
Cell[149627, 4684, 143, 3, 70, "Input"],
Cell[149773, 4689, 158, 4, 70, "Input"],
Cell[149934, 4695, 64, 1, 70, "Input"],
Cell[150001, 4698, 64, 1, 70, "Input"],
Cell[150068, 4701, 976, 22, 70, "Input"],
Cell[151047, 4725, 1145, 27, 70, "Input"],
Cell[152195, 4754, 951, 22, 70, "Input"],
Cell[153149, 4778, 1119, 26, 70, "Input"],
Cell[154271, 4806, 143, 3, 70, "Input"],
Cell[154417, 4811, 969, 22, 70, "Input"]
}, Open  ]],
Cell[155401, 4836, 1151, 27, 70, "Input"],
Cell[156555, 4865, 191, 4, 70, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[156795, 4875, 167, 3, 70, "Subsection"],
Cell[156965, 4880, 181, 5, 70, "Input"],
Cell[CellGroupData[{
Cell[157171, 4889, 113, 3, 70, "Text"],
Cell[157287, 4894, 150, 4, 70, "Input"],
Cell[157440, 4900, 155, 4, 70, "Input"],
Cell[157598, 4906, 249, 7, 70, "Input"],
Cell[157850, 4915, 452, 14, 70, "Input"],
Cell[158305, 4931, 88, 2, 70, "Input"],
Cell[158396, 4935, 31, 0, 70, "Input"],
Cell[158430, 4937, 968, 23, 70, "Input"],
Cell[159401, 4962, 172, 5, 70, "Input"],
Cell[159576, 4969, 160, 4, 70, "Input"]
}, Open  ]],
Cell[159751, 4976, 38, 0, 70, "Input"],
Cell[159792, 4978, 129, 3, 70, "Text"],
Cell[159924, 4983, 124, 3, 70, "Input"],
Cell[160051, 4988, 1274, 32, 70, "Input"],
Cell[161328, 5022, 183, 5, 70, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[161548, 5032, 63, 0, 70, "Subsubsection"],
Cell[161614, 5034, 37, 0, 70, "Text"],
Cell[161654, 5036, 122, 4, 70, "Input"],
Cell[161779, 5042, 1279, 40, 70, "Input"],
Cell[163061, 5084, 28, 0, 70, "Input"],
Cell[163092, 5086, 92, 2, 70, "Input"],
Cell[163187, 5090, 86, 2, 70, "Input"],
Cell[163276, 5094, 172, 5, 70, "Input"],
Cell[163451, 5101, 60, 1, 70, "Input"],
Cell[163514, 5104, 217, 7, 70, "Input"],
Cell[163734, 5113, 147, 4, 70, "Input"],
Cell[163884, 5119, 38, 0, 70, "Text"],
Cell[163925, 5121, 340, 10, 70, "Input"],
Cell[164268, 5133, 279, 8, 70, "Input"],
Cell[164550, 5143, 59, 1, 70, "Input"],
Cell[164612, 5146, 818, 29, 70, "Input"],
Cell[165433, 5177, 81, 2, 70, "Input"],
Cell[165517, 5181, 589, 18, 70, "Input"],
Cell[166109, 5201, 192, 6, 70, "Input"],
Cell[166304, 5209, 360, 12, 70, "Input"],
Cell[166667, 5223, 247, 8, 70, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[166951, 5236, 64, 0, 70, "Subsubsection"],
Cell[167018, 5238, 52, 0, 70, "Text"],
Cell[CellGroupData[{
Cell[167095, 5242, 92, 1, 70, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[167190, 5245, 116, 2, 70, "Input"],
Cell[167309, 5249, 84, 2, 70, "Input"],
Cell[167396, 5253, 248, 6, 70, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[167647, 5261, 107, 1, 70, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[167757, 5264, 1991, 56, 70, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[169751, 5322, 1274, 36, 70, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[171028, 5360, 639, 19, 70, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]],
Cell[171682, 5382, 605, 17, 70, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[172324, 5404, 102, 2, 70, "Subsection"],
Cell[CellGroupData[{
Cell[172451, 5410, 66, 0, 70, "Subsubsection"],
Cell[CellGroupData[{
Cell[172542, 5414, 147, 3, 70, "Text"],
Cell[172692, 5419, 81, 2, 70, "Input"],
Cell[172776, 5423, 293, 6, 70, "Input"],
Cell[173072, 5431, 117, 2, 70, "Input"],
Cell[173192, 5435, 328, 11, 70, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173557, 5451, 37, 0, 70, "Text"],
Cell[173597, 5453, 166, 5, 70, "Input"],
Cell[173766, 5460, 194, 5, 70, "Input"],
Cell[173963, 5467, 719, 22, 70, "Input"],
Cell[174685, 5491, 114, 3, 70, "Input"],
Cell[174802, 5496, 86, 2, 70, "Input"],
Cell[174891, 5500, 281, 5, 70, "Text"],
Cell[175175, 5507, 247, 7, 70, "Input"],
Cell[175425, 5516, 208, 7, 70, "Input"],
Cell[175636, 5525, 259, 9, 70, "Input"],
Cell[175898, 5536, 501, 14, 70, "Input"],
Cell[176402, 5552, 68, 1, 70, "Input"],
Cell[176473, 5555, 46, 0, 70, "Text"],
Cell[176522, 5557, 243, 8, 70, "Input"],
Cell[176768, 5567, 143, 3, 70, "Input"],
Cell[176914, 5572, 1087, 28, 70, "Input"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[178062, 5607, 121, 3, 70, "Text"],
Cell[178186, 5612, 176, 4, 70, "Input"],
Cell[178365, 5618, 184, 5, 70, "Input"],
Cell[178552, 5625, 426, 10, 70, "Input"]
}, Open  ]],
Cell[178993, 5638, 996, 14, 70, "Text"],
Cell[CellGroupData[{
Cell[180014, 5656, 133, 3, 70, "Section"],
Cell[180150, 5661, 304, 5, 70, "Input"],
Cell[180457, 5668, 74, 0, 70, "Text"],
Cell[180534, 5670, 189, 5, 70, "Text"],
Cell[180726, 5677, 203, 6, 70, "Text"],
Cell[180932, 5685, 275, 10, 70, "Text"],
Cell[181210, 5697, 37, 0, 70, "Text"],
Cell[181250, 5699, 271, 6, 70, "Text"],
Cell[181524, 5707, 178, 4, 70, "Text"],
Cell[CellGroupData[{
Cell[181727, 5715, 127, 3, 70, "Subsubsection"],
Cell[CellGroupData[{
Cell[181879, 5722, 52, 0, 70, "Subsubsection"],
Cell[181934, 5724, 183, 3, 70, "Input",
 Evaluatable->False],
Cell[182120, 5729, 183, 3, 70, "Input",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[182328, 5736, 186, 5, 70, "Input",
 Evaluatable->False],
Cell[182517, 5743, 145, 2, 70, "Output"]
}, Open  ]],
Cell[182677, 5748, 172, 5, 70, "Input",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[182874, 5757, 132, 4, 70, "Input",
 Evaluatable->False],
Cell[183009, 5763, 519, 11, 70, "Output"]
}, Open  ]],
Cell[183543, 5777, 733, 23, 70, "Input",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[184301, 5804, 403, 13, 70, "Input",
 Evaluatable->False],
Cell[184707, 5819, 305, 8, 70, "Output"]
}, Open  ]],
Cell[185027, 5830, 123, 2, 70, "Input",
 Evaluatable->False],
Cell[185153, 5834, 189, 4, 70, "Output"],
Cell[185345, 5840, 188, 4, 70, "Output"],
Cell[185536, 5846, 157, 4, 70, "Output"]
}, Closed]],
Cell[185708, 5853, 226, 4, 70, "Text"],
Cell[185937, 5859, 301, 7, 70, "Input"],
Cell[186241, 5868, 151, 4, 70, "Input"],
Cell[186395, 5874, 182, 6, 70, "Input"],
Cell[186580, 5882, 287, 9, 70, "Input"],
Cell[186870, 5893, 976, 31, 70, "Input"],
Cell[187849, 5926, 150, 4, 70, "Input"],
Cell[188002, 5932, 190, 5, 70, "Input"],
Cell[188195, 5939, 400, 12, 70, "Input"],
Cell[188598, 5953, 143, 3, 70, "Input"],
Cell[188744, 5958, 250, 7, 70, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[189043, 5971, 91, 2, 70, "Section"],
Cell[189137, 5975, 146, 3, 70, "Text"],
Cell[189286, 5980, 705, 21, 70, "Input"],
Cell[189994, 6003, 150, 4, 70, "Input"],
Cell[190147, 6009, 97, 2, 70, "Input"],
Cell[190247, 6013, 78, 2, 70, "Input"],
Cell[190328, 6017, 536, 17, 70, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190901, 6039, 111, 3, 70, "Section"],
Cell[191015, 6044, 121, 3, 70, "Subsubsection"],
Cell[191139, 6049, 242, 7, 70, "Input"],
Cell[191384, 6058, 75, 0, 70, "Text"],
Cell[191462, 6060, 1556, 42, 70, "Input"],
Cell[193021, 6104, 1130, 31, 70, "Input"],
Cell[194154, 6137, 142, 4, 70, "Input"],
Cell[194299, 6143, 186, 6, 70, "Input"],
Cell[194488, 6151, 159, 5, 70, "Input"],
Cell[194650, 6158, 159, 5, 70, "Input"],
Cell[194812, 6165, 152, 4, 70, "Input"],
Cell[CellGroupData[{
Cell[194989, 6173, 111, 1, 70, "Subsubsection",
 CellTags->"FIDdata iterate restart"],
Cell[195103, 6176, 957, 29, 70, "Input"],
Cell[196063, 6207, 599, 15, 70, "Input"],
Cell[196665, 6224, 562, 12, 70, "Input"],
Cell[197230, 6238, 143, 3, 70, "Input"],
Cell[197376, 6243, 79, 1, 70, "Subsubsection",
 CellTags->"REFdata iterate restart"],
Cell[197458, 6246, 102, 3, 70, "Input"],
Cell[197563, 6251, 209, 6, 70, "Input"],
Cell[197775, 6259, 1232, 38, 70, "Input"],
Cell[199010, 6299, 1242, 31, 70, "Input"],
Cell[200255, 6332, 178, 5, 70, "Input"],
Cell[200436, 6339, 143, 3, 70, "Input"],
Cell[CellGroupData[{
Cell[200604, 6346, 57, 0, 70, "Text"],
Cell[200664, 6348, 404, 12, 70, "Input"],
Cell[201071, 6362, 235, 7, 70, "Input"],
Cell[201309, 6371, 150, 5, 70, "Input"],
Cell[201462, 6378, 744, 19, 70, "Input"],
Cell[202209, 6399, 966, 29, 70, "Input"],
Cell[203178, 6430, 132, 3, 70, "Input"],
Cell[203313, 6435, 531, 14, 70, "Input"],
Cell[203847, 6451, 624, 15, 70, "Input"],
Cell[204474, 6468, 213, 6, 70, "Input"],
Cell[204690, 6476, 88, 2, 70, "Input"],
Cell[204781, 6480, 70, 0, 70, "Text"]
}, Open  ]],
Cell[204866, 6483, 70, 0, 70, "Text"],
Cell[CellGroupData[{
Cell[204961, 6487, 1452, 45, 70, "Input"],
Cell[206416, 6534, 1359, 34, 70, "Input"],
Cell[207778, 6570, 143, 3, 70, "Input"],
Cell[207924, 6575, 181, 5, 70, "Input"],
Cell[208108, 6582, 582, 14, 70, "Input"],
Cell[208693, 6598, 1470, 38, 70, "Input"],
Cell[210166, 6638, 143, 3, 70, "Input"],
Cell[210312, 6643, 569, 13, 70, "Input"],
Cell[210884, 6658, 107, 1, 70, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[210994, 6661, 382, 11, 70, "Input"],
Cell[211379, 6674, 2442, 61, 70, "Input"],
Cell[213824, 6737, 2044, 52, 70, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[215871, 6791, 639, 19, 70, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[216513, 6812, 590, 17, 70, "Input"],
Cell[217106, 6831, 143, 3, 70, "Input"],
Cell[217252, 6836, 794, 19, 70, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[218095, 6861, 85, 2, 70, "Text"],
Cell[218183, 6865, 80, 2, 70, "Input"],
Cell[218266, 6869, 83, 2, 70, "Input"],
Cell[218352, 6873, 216, 4, 70, "Input"]
}, Open  ]]
}, Closed]],
Cell[218595, 6881, 404, 12, 70, "Input"],
Cell[219002, 6895, 1964, 52, 70, "Input"],
Cell[CellGroupData[{
Cell[220991, 6951, 208, 4, 70, "Text"],
Cell[221202, 6957, 52, 1, 70, "Input"],
Cell[221257, 6960, 772, 24, 70, "Input"],
Cell[222032, 6986, 694, 16, 70, "Input"],
Cell[222729, 7004, 121, 3, 70, "Text"],
Cell[222853, 7009, 219, 6, 70, "Input"],
Cell[223075, 7017, 135, 3, 70, "Input"],
Cell[223213, 7022, 160, 4, 70, "Input"],
Cell[223376, 7028, 318, 9, 70, "Input"],
Cell[223697, 7039, 222, 6, 70, "Input"],
Cell[223922, 7047, 379, 10, 70, "Input"],
Cell[224304, 7059, 684, 22, 70, "Input"],
Cell[224991, 7083, 440, 10, 70, "Input"],
Cell[225434, 7095, 616, 13, 70, "Input"],
Cell[226053, 7110, 327, 7, 70, "Input"],
Cell[226383, 7119, 482, 10, 70, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[226902, 7134, 29, 0, 70, "Section"],
Cell[226934, 7136, 215, 7, 70, "Input"],
Cell[227152, 7145, 40, 0, 70, "Input"],
Cell[227195, 7147, 899, 25, 70, "Input"],
Cell[228097, 7174, 32, 0, 70, "Input"],
Cell[228132, 7176, 283, 7, 70, "Input"]
}, Closed]]
}, Closed]],
Cell[228442, 7187, 91, 1, 23, "Input"]
}
]
*)

