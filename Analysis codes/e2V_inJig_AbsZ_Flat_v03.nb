(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    160118,       4720]
NotebookOptionsPosition[    142505,       4256]
NotebookOutlinePosition[    143655,       4296]
CellTagsIndexPosition[    143414,       4287]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["e2V sensor in-jig AbsHgt, Flatness analysis.", "Title"],

Cell["PZ Takacs", "Subsubtitle"],

Cell["e2V_inJig_AbsZ_Flat.nb", "Subtitle",
 CellChangeTimes->{{3.648938588589732*^9, 3.648938608043247*^9}}],

Cell["Adapted from MF01b ITL version", "Subtitle"],

Cell["\<\
2015.08.19 -  v03 - Added statistics Report TXT file output. Added CleanSlate \
to reset system during Init.
2015.08.18 - Changed output product names to conform to eTraveler nomenclature.
2015.07.13 - Adapted from MF01b ITL version code.
2015.06.22 - Modify for ITL sensor on MF01b for abs hgt and flatness.
2014.11.21 - ver. 4 Customize for production CCD flatness and height \
measurement. Include upstemcal offset factor for absolute height correction.
\
\>", "Subsubtitle"],

Cell["\<\
Start from here when selecting a new data file in order to reset all \
variables.\
\>", "Subtitle",
 CellChangeTimes->{{3.4126995946289673`*^9, 3.4126995957751627`*^9}, {
  3.416002115206843*^9, 3.416002130752269*^9}, {3.649593858858645*^9, 
  3.6495939390683517`*^9}},
 $CellContext`InitializationGroup -> False],

Cell[CellGroupData[{

Cell["\<\
1.0 Initialize - run this first and when analyzing another file.\
\>", "Section",
 CellChangeTimes->{{3.661902847209523*^9, 3.661902882737884*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "  ", 
   RowBox[{
    RowBox[{
    "**", "**", "**", "**", "**", "**", "CleanNotebookInOut", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**"}], "*"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", "CleanNotebookInOut", "]"}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CleanNotebookInOut", "::", "usage"}], "=", 
     "\"\<CleanNotebookInOut[] removes\nthe In and Out CellLabels from the \
notebook in which it is\nevaluated and resets the line number to 1.  If the\n\
RemoveOutput option is set to True then all Output cells in\nthe notebook are \
deleted as well.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "CleanNotebookInOut", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{"RemoveOutput", "\[Rule]", "False"}], "}"}]}], 
    ";"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"CleanNotebookInOut", "[", 
    RowBox[{"opts___", "?", "OptionQ"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nb", ",", "theNotebook", ",", "revisedNotebook", ",", "removeOutput"}],
       "}"}], ",", 
     RowBox[{
      RowBox[{"removeOutput", "=", 
       RowBox[{"RemoveOutput", "/.", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"opts", ",", 
           RowBox[{"Options", "[", "CleanNotebookInOut", "]"}]}], "}"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"$Line", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"nb", "=", 
       RowBox[{"SelectedNotebook", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"theNotebook", "=", 
       RowBox[{"NotebookGet", "[", "nb", "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"revisedNotebook", "=", 
       RowBox[{"theNotebook", "/.", 
        RowBox[{
         RowBox[{"Cell", "[", 
          RowBox[{"x___", ",", 
           RowBox[{"CellLabel", "\[Rule]", "_"}], ",", "y___"}], "]"}], 
         "\[RuleDelayed]", 
         RowBox[{"Cell", "[", 
          RowBox[{"x", ",", "y"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"NotebookPut", "[", 
       RowBox[{"revisedNotebook", ",", "nb"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"removeOutput", ",", 
        RowBox[{"FrontEndExecute", "[", 
         RowBox[{"FrontEndToken", "[", "\"\<DeleteGeneratedCells\>\"", "]"}], 
         "]"}]}], "]"}], ";"}]}], "]"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"CleanNotebookInOut", "[", 
  RowBox[{"RemoveOutput", "\[Rule]", "True"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"?", "CleanNotebookInOut"}]], "Input"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["2.0  Define functions", "Section",
 CellChangeTimes->{{3.649593785879752*^9, 3.649593814951584*^9}, {
  3.6495939484688473`*^9, 3.649593950084985*^9}, {3.661902813531226*^9, 
  3.661902829008751*^9}, {3.661903137151287*^9, 3.6619031387337637`*^9}},
 CellTags->"Start after Init"],

Cell["Reset the kernal when starting", "Text",
 CellChangeTimes->{{3.648938779133086*^9, 3.648938794578617*^9}},
 $CellContext`InitializationGroup -> False],

Cell["\<\
Data and time of last saved modification. This is an Initialization cell that \
executes automatically whenever the nb is opened.\
\>", "Text",
 CellChangeTimes->{{3.446131848655753*^9, 3.446131858917453*^9}, {
  3.446137264759386*^9, 3.446137266332767*^9}, {3.446137346018297*^9, 
  3.44613737617555*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[{
 RowBox[{
  RowBox[{"autoOutput", "=", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"autoOutput", "=", 
    RowBox[{"Input", "[", 
     RowBox[{
     "\"\<Set autoOutput flag to False to suppress automatic output of data \
product files.\>\"", ",", "autoOutput"}], "]"}]}], "*)"}]}]}], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"nb", "=", 
  RowBox[{"EvaluationNotebook", "[", "]"}]}]], "Input",
 CellAutoOverwrite->False,
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"NotebookInformation", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{3.649593246762031*^9},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"DateString", "[", 
   RowBox[{
    RowBox[{"\"\<FileModificationTime\>\"", "/.", 
     RowBox[{"NotebookInformation", "[", "]"}]}], ",", 
    RowBox[{"TimeZone", "\[Rule]", 
     RowBox[{"-", "4"}]}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"EDT", " ", "-", "4"}], ",", " ", 
    RowBox[{"EST", " ", "-", "5"}]}], "*)"}]}]], "Input",
 InitializationCell->True,
 CellAutoOverwrite->False,
 $CellContext`InitializationGroup -> False],

Cell[BoxData[{
 RowBox[{"Off", "[", 
  RowBox[{"General", "::", "\"\<spell1\>\""}], "]"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"<<", "\"\<BarCharts`\>\""}], ";", 
    RowBox[{"<<", "\"\<Histograms`\>\""}], ";", 
    RowBox[{
     RowBox[{"<<", "\"\<PieCharts`\>\""}], "\n", 
     RowBox[{"<<", "\"\<LinearRegression`\>\""}]}]}], "*)"}]}]}], "Input",
 CellAutoOverwrite->False,
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"<<", "ComputationalGeometry`"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData["$SystemID"], "Input",
 CellChangeTimes->{{3.4160021152075243`*^9, 3.416002130753045*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData["$OperatingSystem"], "Input",
 CellChangeTimes->{{3.416002115207933*^9, 3.416002130753488*^9}},
 $CellContext`InitializationGroup -> False],

Cell[CellGroupData[{

Cell["\<\
Conversion factors to meters for numbers in the indicated units:\
\>", "Subsubsection",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mm", "=", 
   RowBox[{"10.", "^", 
    RowBox[{"-", "3"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"micron", "=", 
   RowBox[{"10.", "^", 
    RowBox[{"-", "6"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Micro]m", "=", 
   RowBox[{"10.", "^", 
    RowBox[{"-", "6"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nm", "=", 
   RowBox[{"10.", "^", 
    RowBox[{"-", "9"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Angstroms", "=", 
   RowBox[{"10.", "^", 
    RowBox[{"-", "10"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"micronsToAngstroms", "=", 
   RowBox[{"10", "^", "4"}]}], ";"}]}], "Input",
 CellAutoOverwrite->False,
 $CellContext`InitializationGroup -> False]
}, Open  ]],

Cell[CellGroupData[{

Cell["Define statistical functions for profile data.", "Subsubsection",
 CellMargins->{{Inherited, 73}, {Inherited, Inherited}},
 CellChangeTimes->{{3.411413798108049*^9, 3.4114138294439096`*^9}, {
  3.411413867973627*^9, 3.411413868916065*^9}, {3.4160021152099953`*^9, 
  3.416002130754035*^9}, {3.6489389330402203`*^9, 3.6489389345103893`*^9}, {
  3.649594450973917*^9, 3.649594454852899*^9}},
 AspectRatioFixed->True,
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"hrange", "[", 
   RowBox[{"binlist_", ",", "min_", ",", "max_"}], "]"}], ":=", 
  RowBox[{"Quantile", "[", 
   RowBox[{"binlist", ",", 
    RowBox[{"{", 
     RowBox[{"min", ",", "max"}], "}"}]}], "]"}]}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell["\<\
See that one must subtract the mean from the input data first, before \
squaring, in order to compute the standard deviation correctly.\
\>", "Text",
 CellChangeTimes->{{3.416002115212542*^9, 3.416002131150723*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"detrend", "[", 
   RowBox[{"anylist_", ",", "order_Integer"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"npts", ",", "xlist", ",", "fitlist", ",", "x"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"order", ">=", "0"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xlist", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          SuperscriptBox["x", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "order"}], "}"}]}], "]"}]}], ";", "\n",
        "\t\t", 
       RowBox[{"npts", "=", 
        RowBox[{"Length", "[", "anylist", "]"}]}], ";", "\n", "\t\t", 
       RowBox[{"func", "=", 
        RowBox[{"Fit", "[", 
         RowBox[{"anylist", ",", "xlist", ",", "x"}], "]"}]}], ";", "\n", 
       "\t\t", 
       RowBox[{"fitlist", "=", 
        RowBox[{"{", "}"}]}], ";", "\n", "\t\t", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"fitlist", ",", "func"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "1", ",", "npts"}], "}"}]}], "]"}], ";", "\n", 
       "\t\t", 
       RowBox[{"Return", "[", 
        RowBox[{"anylist", "-", "fitlist"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "anylist", "]"}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.416002115213029*^9, 3.416002131151075*^9}},
 AspectRatioFixed->True,
 $CellContext`InitializationGroup -> False],

Cell[CellGroupData[{

Cell["\<\
Add a point digitizer to a plot. Results are put into vector \"res\".\
\>", "Subsubsection",
 CellChangeTimes->{{3.4123536743985023`*^9, 3.4123537089052973`*^9}, {
  3.416002115629663*^9, 3.416002131161873*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"locatePts", "[", "plotname_", "]"}], ":=", "\[IndentingNewLine]", 
   
   RowBox[{"Block", "[", " ", 
    RowBox[{
     RowBox[{"{", "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"res", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";", " ", "\n", 
      RowBox[{"Dynamic", "[", "res", "]"}], ";", " ", "\n", "  ", 
      RowBox[{"EventHandler", "[", " ", "\n", "         ", 
       RowBox[{"plotname", ",", " ", 
        RowBox[{"{", 
         RowBox[{"\"\<MouseDown\>\"", " ", ":>", 
          RowBox[{"(", " ", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"res", ",", " ", 
             RowBox[{"MousePosition", "[", "\"\<Graphics\>\"", "]"}]}], "]"}],
            ")"}]}], "}"}]}], " ", "\n", "        ", "]"}]}]}], " ", "]"}]}],
  FontFamily->"Arial",
  FontWeight->"Plain"]], "Input",
 CellChangeTimes->{{3.416002115629848*^9, 3.416002131162106*^9}},
 $CellContext`InitializationGroup -> False]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The following tick function rescales the axes labels from the default [xmin, \
xmax] range by offsetting the starting point by b and scaling the tick value \
by m. 
Note that you need to specify the AxesOrigin in terms of the unshifted \
function.\
\>", "Subsubsection",
 CellChangeTimes->{{3.4160021156301613`*^9, 3.416002131162328*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"$TextStyle", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"FontFamily", "\[Rule]", "Arial"}], ",", 
    RowBox[{"FontSize", "\[Rule]", "10"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.4123695656164*^9, 3.4123695691646137`*^9}, {
  3.412369655031846*^9, 3.4123696561967983`*^9}, {3.41270549425765*^9, 
  3.41270550381952*^9}, {3.416002115630471*^9, 3.4160021311625566`*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"Style", "[", 
  RowBox[{"PlotLabel", ",", 
   RowBox[{"DefaultOptions", "->", 
    RowBox[{"{", 
     RowBox[{"FontFamily", "->", "Arial"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.412705739454899*^9, 3.412705835393314*^9}, {
  3.416002115630872*^9, 3.416002131162959*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"tickf", "[", 
   RowBox[{"min_", ",", "max_", ",", "m_", ",", "b_", ",", "step_"}], "]"}], ":=",
   " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"m", " ", 
       RowBox[{"(", 
        RowBox[{"i", "-", "b"}], ")"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "min", ",", "max", ",", "step"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.416002115631175*^9, 3.416002131163348*^9}},
 $CellContext`InitializationGroup -> False],

Cell["File name conventions", "Text",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"filename", "=."}], ";", 
  RowBox[{"filenamefull", "=."}], ";", 
  RowBox[{"fnames", "=."}], ";", 
  RowBox[{"plotname", "=."}], ";", 
  RowBox[{"filepath", "=."}], ";", 
  RowBox[{"filepathfull", "=."}], ";"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"filein", "=."}], ";", 
  RowBox[{"fileinroot", "=."}], ";", 
  RowBox[{"fileinS", "=."}], ";"}]], "Input",
 $CellContext`InitializationGroup -> False]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["3.0 Enter full file path here to set working directory:", "Section",
 CellChangeTimes->{{3.6619031415013943`*^9, 3.661903143269721*^9}, 
   3.661903498439083*^9},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"filepathfull", " "}]], "Input",
 CellAutoOverwrite->False,
 CellChangeTimes->{3.6489390086125593`*^9},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"filepathfull", "=", 
  RowBox[{"Input", "[", 
   RowBox[{
   "\"\<Do Insert->FilePath and navigate to desired data file and select to \
enter here.\>\"", ",", "filepathfull"}], "]"}]}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"DirectoryName", "[", "filepathfull", "]"}], "]"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell["\<\
Use the filename form appropriate for the computer platform, either MacOSX or \
Windows\
\>", "Text",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input",
 CellAutoOverwrite->False,
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"$OperatingSystem", "==", "\"\<Windows\>\""}], ",", 
    RowBox[{"sep$", "=", "\"\<\\\\\>\""}], ",", 
    RowBox[{"sep$", "=", "\"\</\>\""}]}], "]"}], ";"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"manualcalcFlag", "=", "False"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"set", " ", "for", " ", "automated", " ", "analysis"}], 
   "*)"}]}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"manualcalcFlag", "=", "True"}], ";"}], "*)"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "to", " ", "stop", " ", "automated", " ", "analysis", " ", "with", " ", 
    "default", " ", "parameters"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.64401191212829*^9, 3.644011917846917*^9}},
 $CellContext`InitializationGroup -> False],

Cell["\<\
Enter upstemcal offset value here, for later correction of CCD absolute \
height relative to REF plane.\
\>", "Subsection",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"upstemcal", "=", "0.0"}], ";"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"upstemcal", "=", 
  RowBox[{"Input", "[", 
   RowBox[{
   "\"\<Enter upstemcal offset factor here. Default = 0\>\"", ",", 
    "upstemcal"}], "]"}]}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[CellGroupData[{

Cell["\<\
Read in OGP  txt format. Contours. This is treated as FREEFORM data, i.e. no \
set nrows or ncols.\
\>", "Subsection",
 $CellContext`InitializationGroup -> False],

Cell["\<\
Data is in the form of a big list of triplets in units of mm. The X,Y \
coordinate is included with the z-value. Note that this is NOT a rectangular \
data array, so can't use the array plot functions unless the data is padded \
to make a grid, which is not possible with OGP freefom data.\
\>", "Text",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"DirectoryName", "[", "filepathfull", "]"}], "]"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"datain", "=."}], ";", 
   RowBox[{"datain2", "=."}], ";", 
   RowBox[{"datainXYZSR", "=."}], ";", 
   RowBox[{"skipnum", "=."}], ";", 
   RowBox[{"nRows", "=."}], ";", 
   RowBox[{"nCols", "=."}], ";", 
   RowBox[{"delx", "=."}], ";", " ", 
   RowBox[{"dely", "=."}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"nominal", " ", "scan", " ", "values"}], " ", "*)"}]}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"fnames", "=", 
   RowBox[{"FileNames", "[", "\"\<*.DAT\>\"", "]"}]}], ";", 
  RowBox[{"fnametable", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"fnames", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "fnames", "]"}]}], "}"}]}], "]"}], "//", 
    "TableForm"}]}]}]], "Input",
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.64928775258967*^9, 3.649287757931778*^9}},
 $CellContext`InitializationGroup -> False],

Cell[CellGroupData[{

Cell["Pick the OGP file from the list", "Subsubsection",
 CellTags->"pick MST file num",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"inst$", "=", "\"\<OGP\>\""}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input",
 CellAutoOverwrite->False,
 $CellContext`InitializationGroup -> False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"nf", "=", 
   RowBox[{"Input", "[", 
    RowBox[{
     RowBox[{"TemplateApply", "[", 
      RowBox[{
      "StringTemplate", "[", 
       "\"\<Enter index of desired file in the list \
(0=Abort):\\n<*Table[{i,fnames[[i]]},{i,Length[fnames]}]//TableForm*>\>\"", 
       "]"}], "]"}], ",", "nf"}], "]"}]}], "*)"}]], "Input",
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.649287576720207*^9, {3.649287983626153*^9, 3.64928798797414*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"nf", "=", 
  RowBox[{"Input", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<Enter index of desired file in the list (0=Abort):\\n\>\"", 
      "fnametable"}], "}"}], ",", "nf"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.649287685480307*^9, {3.649287727555838*^9, 3.649287735056736*^9}, {
   3.64928781733902*^9, 3.6492878214864388`*^9}, {3.649287855885141*^9, 
   3.6492878941226*^9}, 3.6492879464382544`*^9, {3.649287977445189*^9, 
   3.649287978423764*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"nf", "<", "1"}], ",", 
   RowBox[{
    RowBox[{
    "MessageDialog", "[", 
     "\"\<Incorrect file number. Abort the run, please.\>\"", "]"}], ";", 
    RowBox[{"Interrupt", "[", "]"}], ";", 
    RowBox[{"Abort", "[", "]"}]}]}], "]"}]], "Input",
 CellAutoOverwrite->False,
 $CellContext`InitializationGroup -> False]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"fileinfull", " ", "=", 
  RowBox[{"fnames", "[", 
   RowBox[{"[", "nf", "]"}], "]"}]}], "\n", 
 RowBox[{"fileinroot", "=", 
  RowBox[{"FileBaseName", "[", "fileinfull", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"fileinS", "=", "fileinroot"}], ";"}]}], "Input",
 CellAutoOverwrite->False,
 $CellContext`InitializationGroup -> False],

Cell["There is no separate REF file, so set filein to fileinS", "Text",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"filein", "=", "fileinS"}], ";", 
  RowBox[{"datain", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"fileinfull", ",", "\"\<Data\>\""}], "]"}]}], ";"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[CellGroupData[{

Cell["Create subdir for data file output", "Text",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Directory", "[", "]"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "is", " ", "the", " ", "current", " ", "default", " ", 
    "directory"}], " ", "*)"}]}], "\n", 
 RowBox[{"workdir", "=", 
  RowBox[{"filein", "<>", "\"\<_files\>\""}]}]}], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"DirectoryQ", "[", "workdir", "]"}]}], ",", 
   RowBox[{
    RowBox[{"CreateDirectory", "[", "workdir", "]"}], ";", 
    RowBox[{"Print", "[", "\"\<New work dir created\>\"", "]"}]}], ",", 
   RowBox[{"Print", "[", 
    RowBox[{
    "workdir", "<>", "\"\< already exists. Using it for output.\>\""}], 
    "]"}]}], "]"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"SetDirectory", "[", "workdir", "]"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input",
 $CellContext`InitializationGroup -> False]
}, Open  ]],

Cell["", "Text",
 $CellContext`InitializationGroup -> False],

Cell[CellGroupData[{

Cell["Strip out all but the Contour points", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"Length", "[", "datain", "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"Dimensions", "[", "datain", "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False],

Cell["\<\
Find all lines with less than 2 numbers and at least 1 string. This excludes \
all the the triplet lines with mm at the end.\
\>", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"charpos", "=", 
   RowBox[{"Reap", "[", 
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Count", "[", 
            RowBox[{
             RowBox[{"datain", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"_", "?", "NumberQ"}]}], "]"}], "<", "2"}], "&&", 
          RowBox[{
           RowBox[{"Count", "[", 
            RowBox[{
             RowBox[{"datain", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"_", "?", "StringQ"}]}], "]"}], ">=", "1"}]}], ")"}], 
        ",", 
        RowBox[{"Sow", "[", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1"}], "}"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "datain", "]"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"charpos", "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "1"}], "]"}], "]"}], "//", "Length"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"Drop", "[", 
   RowBox[{"charpos", ",", "1"}], "]"}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"charpos2", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Drop", "[", 
      RowBox[{"charpos", ",", "1"}], "]"}], ",", "2"}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.648939239990225*^9},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"charpos3", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Part", "[", 
       RowBox[{"#", ",", "1"}], "]"}], "&"}], ",", "charpos2", ",", "1"}], 
    "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.6489392449566717`*^9},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "all", " ", "the", " ", "record", " ", "numbers", " ", 
    "where", " ", "Contour", " ", "occurs"}], "*)"}], 
  RowBox[{"cpos", "=", 
   RowBox[{"Position", "[", 
    RowBox[{
     RowBox[{"Extract", "[", 
      RowBox[{"datain", ",", "charpos2"}], "]"}], ",", "\"\<Contour\>\""}], 
    "]"}]}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"cpos", "+", "1", "  ", 
  RowBox[{"(*", 
   RowBox[{
   "Add", " ", "1", " ", "to", " ", "specify", " ", "the", " ", "record", " ",
     "following", " ", "the", " ", "Contour", " ", "record"}], 
   "*)"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"rifflvec", "=", 
  RowBox[{"Riffle", "[", 
   RowBox[{"cpos", ",", 
    RowBox[{"cpos", "+", "1"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Combine", " ", "the", " ", "2", " ", "vectors"}], 
   "*)"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Now", " ", "pull", " ", "out", " ", "the", " ", "index", " ", "locations", 
   " ", "from", " ", "charpos2", " ", "pointed", " ", "to", " ", "by", " ", 
   "the", " ", "riffled", " ", "vector"}], "*)"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"cpairs", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Extract", "[", 
     RowBox[{"charpos2", ",", "rifflvec"}], "]"}], "//", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Part", "[", 
         RowBox[{"#", ",", "1"}], "]"}], "&"}], ",", "#", ",", "1"}], "]"}], 
     "&"}]}], "//", 
   RowBox[{
    RowBox[{"Partition", "[", 
     RowBox[{"#", ",", "2"}], "]"}], "&"}]}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False],

Cell["\<\
Enter a specific list of desired regions as the iterator for the Do loop.\
\>", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "Now", " ", "take", " ", "the", " ", "range", " ", "of", " ", "points", 
    " ", "from", " ", "datain", " ", "between", " ", "the", " ", "range", " ", 
    RowBox[{"pairs", ".", " ", "Drop"}], " ", "the", " ", "first", " ", 
    "record", " ", "in", " ", "each", " ", "range", " ", 
    RowBox[{"(", "Contour"}]}], "}"}], "*)"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"datain4", "=."}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"datain4", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Reap", "[", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"Sow", "[", 
         RowBox[{"Take", "[", 
          RowBox[{"datain", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"cpairs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], "+", "1"}], ",", 
             RowBox[{
              RowBox[{"cpairs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", "2"}]}], "}"}]}], 
          "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "cpairs", "]"}]}], "}"}]}], "]"}], 
      "\[IndentingNewLine]", "]"}], "//", 
     RowBox[{
      RowBox[{"Drop", "[", 
       RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"#", ",", "3"}], "]"}], "&"}]}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"Length", "[", "datain4", "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"datain2", "=", "datain4"}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"datain2", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "10"}], "]"}], "]"}], "//", "TableForm"}], 
  ";"}]], "Input",
 $CellContext`InitializationGroup -> False]
}, Open  ]],

Cell["\<\
All data points are now in one continuous list. All the contours are merged \
together\
\>", "Subsubsection",
 $CellContext`InitializationGroup -> False],

Cell[CellGroupData[{

Cell["continue here", "Subsubsection",
 CellTags->"data ready",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"datain3x", "=", 
    RowBox[{"Take", "[", 
     RowBox[{"datain2", ",", "All", ",", "3"}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Strip", " ", "off", " ", "the", " ", "XYZ", " ", "numbers"}], 
   "*)"}]}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell["Convert z-vals to microns:", "Text",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[{
 RowBox[{
  RowBox[{"datain3x", "[", 
   RowBox[{"[", "1", "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"datain3x", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"MapAt", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Times", "[", 
          RowBox[{"#", ",", 
           RowBox[{"10", "^", "3"}]}], "]"}], "&"}], ",", "#", ",", "3"}], 
       "]"}], "&"}], ",", "datain3x"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"datain3x", "[", 
   RowBox[{"[", "1", "]"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.648939361254898*^9, 3.648939365677273*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"xunit$", "=", "\"\<mm\>\""}], ";", 
   RowBox[{"yunit$", "=", "\"\<mm\>\""}], ";", 
   RowBox[{"zunit$", "=", "\"\<\[Micro]m\>\""}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"These", " ", "are", " ", "now", " ", "current", " ", "units"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.648939372600404*^9, 3.648939390014121*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input",
 CellAutoOverwrite->False,
 $CellContext`InitializationGroup -> False],

Cell[BoxData[{
 RowBox[{
  RowBox[{"datainXYZS", "=", "datain3x"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"datainXYZSR", "=", "datainXYZS"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"No", " ", 
    RowBox[{"REF", ".", " ", "Copy"}], " ", "surface", " ", "into", " ", "SR",
     " ", 
    RowBox[{"array", "."}]}], " ", "*)"}]}]}], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"skipnum", "=."}], ";", 
  RowBox[{"cloudXYZ", "=."}]}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cloudXYZ", "=", "datainXYZSR"}], ";"}], "\n", 
 RowBox[{"Dimensions", "[", "cloudXYZ", "]"}]}], "Input",
 $CellContext`InitializationGroup -> False]
}, Open  ]],

Cell["Range of raw z-values:", "Text",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Min", "[", 
    RowBox[{"cloudXYZ", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", "3", "}"}]}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"Max", "[", 
    RowBox[{"cloudXYZ", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", "3", "}"}]}], "]"}], "]"}], "]"}]}], "}"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[CellGroupData[{

Cell["Plot free-form data list not on uniform grid", "Subsection",
 $CellContext`InitializationGroup -> False],

Cell["\<\
Start next range clean-up here. Keep eliminating points from cloudXYZ based \
on x and y and z range criteria.\
\>", "Subsubsection",
 CellTags->"XY range restriction start",
 $CellContext`InitializationGroup -> False],

Cell["\<\
Execute the appropriate unpacking expression and rearrange the cloudXYZ as \
necessary.
This depends on the ordering of the XYZ values in each triplet:  XYZ or ZYX\
\>", "Text",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xvals", "=", 
   RowBox[{
    RowBox[{"Take", "[", 
     RowBox[{"cloudXYZ", ",", "All", ",", 
      RowBox[{"{", "1", "}"}]}], "]"}], "//", "Flatten"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"yvals", "=", 
   RowBox[{
    RowBox[{"Take", "[", 
     RowBox[{"cloudXYZ", ",", "All", ",", 
      RowBox[{"{", "2", "}"}]}], "]"}], "//", "Flatten"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"zvals", "=", 
   RowBox[{
    RowBox[{"Take", "[", 
     RowBox[{"cloudXYZ", ",", "All", ",", 
      RowBox[{"{", "3", "}"}]}], "]"}], "//", "Flatten"}]}], ";"}]}], "Input",\

 $CellContext`InitializationGroup -> False],

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"xmin", "=", 
     RowBox[{"Min", "[", "xvals", "]"}]}], ",", 
    RowBox[{"xmax", "=", 
     RowBox[{"Max", "[", "xvals", "]"}]}]}], "}"}], "//", 
  "N"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ymin", "=", 
     RowBox[{"Min", "[", "yvals", "]"}]}], ",", 
    RowBox[{"ymax", "=", 
     RowBox[{"Max", "[", "yvals", "]"}]}]}], "}"}], "//", 
  "N"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"zmin", "=", 
     RowBox[{"Min", "[", "zvals", "]"}]}], ",", 
    RowBox[{"zmax", "=", 
     RowBox[{"Max", "[", "zvals", "]"}]}], ",", 
    RowBox[{"Mean", "[", "zvals", "]"}], ",", 
    RowBox[{"StandardDeviation", "[", "zvals", "]"}]}], "}"}], "//", 
  "N"}]}], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"deltaX", "=", 
    RowBox[{"xmax", "-", "xmin"}]}], ",", " ", 
   RowBox[{"deltaY", "=", 
    RowBox[{"ymax", "-", "ymin"}]}], ",", 
   RowBox[{"deltaZ", "=", 
    RowBox[{"zmax", "-", "zmin"}]}]}], "}"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"rowscols$", "=", "\"\<cloud\>\"", " ", 
  RowBox[{"(*", "\"\<sparse\>\"", "*)"}]}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell["\<\
Next expression may not contain desired array on first pass. Why???? BEWARE\
\>", "Text",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[{
 RowBox[{
  RowBox[{"vp", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Dynamic", "[", "vp", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6440090598306847`*^9, 3.64400916593165*^9}, {
  3.644009241929307*^9, 3.644009246469157*^9}, {3.644009290874243*^9, 
  3.6440092910618677`*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"Dimensions", "[", "cloudXYZ", "]"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"lpp01", "=", 
  RowBox[{"ListPointPlot3D", "[", 
   RowBox[{"cloudXYZ", ",", 
    RowBox[{"PlotRange", "->", "All"}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", "vp"}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
    RowBox[{"ImageSize", "->", "400"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<Xval\>\"", ",", "\"\<Yval\>\"", ",", "\"\<\>\""}], "}"}]}],
     ",", 
    RowBox[{"PlotLabel", "->", 
     RowBox[{"fileinS", "<>", "\"\<\\nraw data\>\""}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.64400926683454*^9, 3.644009267013892*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"autoOutput", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"fileinS", "<>", "\"\<_SUTandREFraw.tiff\>\""}], ",", "lpp01", 
     ",", 
     RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
     RowBox[{"ImageResolution", "->", "100"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 StyleBox[
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Export raw data SUT&REF plot\>\"", ",", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"fileinS", "<>", "\"\<_SUTandREFraw.tiff\>\""}], ",", "lpp01", 
      ",", 
      RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
      RowBox[{"ImageResolution", "->", "100"}]}], "]"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}],
  FontColor->RGBColor[1, 0, 1]]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[CellGroupData[{

Cell["\<\
Find the SUT and REF.  xyPCS range is the default initial region for the \
contour points.\
\>", "Subsubsection",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"xyPCSrange", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.", ",", "45."}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "35."}], ",", "75."}], "}"}]}], "}"}]}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell["\<\
First discard the points in the MCS that are measured before the datum origin \
defining the PCS is set on the hole center.\
\>", "Text",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xminPCS", ",", "xmaxPCS"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"yminPCS", ",", "ymaxPCS"}], "}"}]}], "}"}], "=", 
  "xyPCSrange"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[{
 RowBox[{
  RowBox[{"testRegion", " ", "=", 
   RowBox[{"Reap", "[", " ", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"cloudXYZ", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "<", "xmaxPCS"}], "&&", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"cloudXYZ", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ">", "xminPCS"}], "&&", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"cloudXYZ", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "<", "ymaxPCS"}], "&&", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"cloudXYZ", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ">", "yminPCS"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"Sow", "[", 
         RowBox[{"cloudXYZ", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "cloudXYZ", "]"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"PCSregion", "=", 
   RowBox[{
    RowBox[{"Drop", "[", 
     RowBox[{"testRegion", ",", "1"}], "]"}], "//", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"#", ",", "2"}], "]"}], "&"}]}]}], ";"}], "\n", 
 RowBox[{"Length", "[", "PCSregion", "]"}]}], "Input",
 $CellContext`InitializationGroup -> False],

Cell["Verify that the proper region has been selected.", "Text",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"PCSregionplt", "=", 
  RowBox[{"ListPointPlot3D", "[", 
   RowBox[{"PCSregion", ",", 
    RowBox[{"PlotRange", "->", "All"}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "Infinity"}], "}"}]}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
    RowBox[{"ImageSize", "->", "400"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<Xval\>\"", ",", "\"\<Yval\>\"", ",", "\"\<\>\""}], "}"}]}],
     ",", 
    RowBox[{"PlotLabel", "->", 
     RowBox[{"fileinS", "<>", "\"\<\\nPCSregion\>\""}]}]}], "]"}]}]], "Input",\

 $CellContext`InitializationGroup -> False]
}, Open  ]],

Cell["\<\
Isolate the CCD region. THis will define the inclusion limits in Y-dir for \
dividing the data into REF and SUT regions.\
\>", "Text",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "Cell"}], "]"}]], "Input",
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.6619024650305*^9, 3.661902466534857*^9}},
 $CellContext`InitializationGroup -> False]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Fix the xyrange to isolate the SUT region from the REF surfaces. Requires the \
datum origin to be at the CDD LL corner.\
\>", "Subsubsection",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"xyrange", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.", ",", "45."}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.", ",", "45."}], "}"}]}], "}"}]}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xminCCD", ",", "xmaxCCD"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"yminCCD", ",", "ymaxCCD"}], "}"}]}], "}"}], "=", 
  "xyrange"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"imin", ",", "imax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"jmin", ",", "jmax"}], "}"}]}], "}"}], "=."}], ";"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xminCCD", ",", "xmaxCCD"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"yminCCD", ",", "ymaxCCD"}], "}"}]}], "}"}], "//", 
  "TableForm"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "Next", ",", "CellGroup"}], "]"}]], "Input",
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.648329373450193*^9, 3.648329374612866*^9}, {
  3.66190373903994*^9, 3.661903750463292*^9}},
 $CellContext`InitializationGroup -> False]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["4.0 Now separate the point cloud into 2 regions: SUT and REF", "Section",
 CellChangeTimes->{{3.6619035012469587`*^9, 3.661903503885994*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"testS", "=."}], ";", 
  RowBox[{"testR", "=."}], ";", 
  RowBox[{"SUTdata", "=."}], ";", 
  RowBox[{"REFdata", "=."}], ";"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[{
 RowBox[{
  RowBox[{"testS", " ", "=", 
   RowBox[{"Reap", "[", "\[IndentingNewLine]", " ", 
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"PCSregion", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "<", "xmaxCCD"}], "&&", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"PCSregion", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ">", "xminCCD"}], "&&", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"PCSregion", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "<", "ymaxCCD"}], "&&", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"PCSregion", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ">", "yminCCD"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"Sow", "[", 
         RowBox[{
          RowBox[{"PCSregion", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "x"}], "]"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"Sow", "[", 
         RowBox[{
          RowBox[{"PCSregion", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "y"}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "PCSregion", "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"REFdata", "=", 
   RowBox[{"testS", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SUTdata", " ", "=", " ", 
   RowBox[{"testS", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Length", "[", "SUTdata", "]"}], ",", 
   RowBox[{"Length", "[", "REFdata", "]"}]}], "}"}], "\n", 
 RowBox[{
  RowBox[{"tests", "=."}], ";"}]}], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"splt", "=", 
  RowBox[{"ListPointPlot3D", "[", 
   RowBox[{"SUTdata", ",", 
    RowBox[{"PlotRange", "->", "All"}], ",", 
    RowBox[{"ViewPoint", "->", 
     RowBox[{"Dynamic", "[", "vp", "]"}]}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<Xval\>\"", ",", "\"\<Yval\>\"", ",", "\"\<\>\""}], "}"}]}],
     ",", 
    RowBox[{"PlotLabel", "->", 
     RowBox[{"fileinS", "<>", "\"\<\\nraw SUT region\>\""}]}]}], 
   "]"}]}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input",
 CellAutoOverwrite->False,
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"rplt", "=", 
  RowBox[{"ListPointPlot3D", "[", 
   RowBox[{"REFdata", ",", 
    RowBox[{"PlotRange", "->", "All"}], ",", 
    RowBox[{"ViewPoint", "->", 
     RowBox[{"Dynamic", "[", "vp", "]"}]}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<Xval\>\"", ",", "\"\<Yval\>\"", ",", "\"\<\>\""}], "}"}]}],
     ",", 
    RowBox[{"PlotLabel", "->", 
     RowBox[{"fileinS", "<>", "\"\<\\nraw REF region\>\""}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6619032554441357`*^9, 3.66190325603319*^9}},
 $CellContext`InitializationGroup -> False]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
5.0 Now work on Flatness of SUT. Remove tilt with plane fit and trim bad \
points from residuals.\
\>", "Section",
 CellChangeTimes->{{3.6619035105662127`*^9, 3.6619035118619223`*^9}},
 $CellContext`InitializationGroup -> False],

Cell[CellGroupData[{

Cell["\<\
Clean up SUT points, removing outliers. MUST EXECUTE THIS SECTION.\
\>", "Subsubsection",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fitbasis", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "x", ",", "y"}], "}"}]}], ";", 
  RowBox[{"fitidx", "=", "\"\<1,1\>\""}], ";"}], "\n", 
 RowBox[{"fitord$", "=", 
  RowBox[{"StringTake", "[", 
   RowBox[{
    RowBox[{"ToString", "[", "fitbasis", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", 
      RowBox[{"-", "2"}]}], "}"}]}], "]"}]}]}], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"SUTfit", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"Fit", "[", 
   RowBox[{"SUTdata", ",", "fitbasis", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"vp1", "=", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", ".5"}], "}"}]}], ";"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"sutfitplt", "=", 
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"SUTfit", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "xminCCD", ",", "xmaxCCD"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "ymin", ",", "ymax"}], "}"}], ",", 
     RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"Opacity", "[", "0.5", "]"}]}], ",", 
     RowBox[{"ViewPoint", "->", 
      RowBox[{"Dynamic", "[", "vp1", "]"}]}]}], "]"}]}], ";"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"SUTandFITplane", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"splt", ",", "sutfitplt", ",", 
    RowBox[{"PlotRange", "->", "All"}], ",", 
    RowBox[{"ViewPoint", "->", 
     RowBox[{"Dynamic", "[", "vp1", "]"}]}], ",", 
    RowBox[{"PlotLabel", "->", 
     RowBox[{
     "fileinS", "<>", "\"\<\\nPlane fit to trimmed SUT points\>\""}]}]}], 
   "]"}]}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"Dynamic", "[", "vp1", "]"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[CellGroupData[{

Cell["\<\
Now trim outliers more than some value away fom the fit plane value.
First subtract plane fit to the full SUT data. NEW VERSION for flatnees stats\
\
\>", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SUTresids", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SUTdata", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"SUTdata", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"SUTdata", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "3"}], "]"}], "]"}], "-", 
        RowBox[{"SUTfit", "[", 
         RowBox[{
          RowBox[{"SUTdata", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"SUTdata", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "SUTdata", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"Length", "[", "SUTresids", "]"}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SUTresidsZ", "=", 
    RowBox[{
     RowBox[{"SUTresids", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", "3", "}"}]}], "]"}], "]"}], "//", "Flatten"}]}], ";"}], 
  " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"extract", " ", "the", " ", "z"}], "-", "values"}], 
   "*)"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"minSUTz", "=", 
    RowBox[{"Min", "[", "SUTresidsZ", "]"}]}], ",", 
   RowBox[{"maxSUTz", "=", 
    RowBox[{"Max", "[", "SUTresidsZ", "]"}]}], ",", 
   RowBox[{"Mean", "[", "SUTresidsZ", "]"}], ",", 
   RowBox[{"Median", "[", "SUTresidsZ", "]"}], ",", 
   RowBox[{"StandardDeviation", "[", "SUTresidsZ", "]"}]}], "}"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"sutflathist", "=", 
    RowBox[{"Histogram", "[", 
     RowBox[{"SUTresidsZ", ",", "75", ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "These", " ", "are", " ", "the", " ", "residuals", " ", "after", " ", 
    "removing", " ", "plane", " ", "fit"}], "*)"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False],

Cell["Move cursor to see x-value in histogram position.", "Text",
 CellChangeTimes->{{3.6591809212624807`*^9, 3.659180944847087*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"sutflathist", ",", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"MousePosition", "[", "\"\<Graphics\>\"", "]"}], "]"}]}], 
  "}"}]], "Input"],

Cell[CellGroupData[{

Cell["Trim the outliers here.", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "Cell"}], "]"}]], "Input",
 CellChangeTimes->{{3.644013883802889*^9, 3.644013885163526*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"threshmin", ",", "threshmax"}], "}"}], "=", 
  RowBox[{"Input", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "sutflathist", ",", 
      "\"\<Enter {min,max} threshold values for trimming bad points.\>\""}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"minSUTz", ",", "maxSUTz"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6492874135736933`*^9, 3.64928748809731*^9}},
 $CellContext`InitializationGroup -> False],

Cell["Trim both the XYZ and the Z data lists", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"SUTresidsZtrim", "=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Drop", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Reap", "[", " ", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"SUTdata", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "3"}], "]"}], "]"}], "-", 
              RowBox[{"SUTfit", "[", 
               RowBox[{
                RowBox[{"SUTdata", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"SUTdata", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}]}], "<", 
             "threshmax"}], " ", "&&", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"SUTdata", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "3"}], "]"}], "]"}], "-", 
              RowBox[{"SUTfit", "[", 
               RowBox[{
                RowBox[{"SUTdata", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"SUTdata", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}]}], ">", 
             "threshmin"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"Sow", "[", 
            RowBox[{
             RowBox[{"SUTdata", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "3"}], "]"}], "]"}], "-", 
             RowBox[{"SUTfit", "[", 
              RowBox[{
               RowBox[{"SUTdata", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"SUTdata", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "2"}], "]"}], "]"}]}], " ", "]"}]}], 
            "]"}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "SUTdata", "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], ",", 
      "\[IndentingNewLine]", "1"}], "]"}], "//", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"#", ",", "2"}], "]"}], "&"}]}]}], ";"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"SUTresidsZtrim", "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "10"}], "]"}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"SUTdatatrim", "=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Drop", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Reap", "[", "\[IndentingNewLine]", " ", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"SUTdata", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "3"}], "]"}], "]"}], "-", 
              RowBox[{"SUTfit", "[", 
               RowBox[{
                RowBox[{"SUTdata", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"SUTdata", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}]}], "<", 
             "threshmax"}], " ", "&&", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"SUTdata", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "3"}], "]"}], "]"}], "-", 
              RowBox[{"SUTfit", "[", 
               RowBox[{
                RowBox[{"SUTdata", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"SUTdata", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}]}], ">", 
             "threshmin"}]}], ",", 
           RowBox[{"Sow", "[", 
            RowBox[{"SUTdata", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "SUTdata", "]"}]}], "}"}]}], "]"}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", "1"}], "]"}],
     "//", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"#", ",", "2"}], "]"}], "&"}]}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"SUTresidsXYZtrim", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SUTdatatrim", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"SUTdatatrim", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"SUTresidsZtrim", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "SUTdatatrim", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False]
}, Open  ]],

Cell["\<\
Use these SUT zresids for Flatness statistics. This excludes tilt effects and \
only looks at intrinsic surface flatness.\
\>", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxzF", "=", 
   RowBox[{"Max", "[", "SUTresidsZtrim", "]"}]}], ";", 
  RowBox[{"minzF", "=", 
   RowBox[{"Min", "[", "SUTresidsZtrim", "]"}]}], ";", 
  RowBox[{"sigmaF", "=", 
   RowBox[{"StandardDeviation", "[", "SUTresidsZtrim", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"zbinF", "=", 
   RowBox[{"BinCounts", "[", 
    RowBox[{"SUTresidsZtrim", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"maxzF", "-", "minzF"}], ")"}], "/", "25"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hrange", "[", 
    RowBox[{"binlist_", ",", "min_", ",", "max_"}], "]"}], ":=", 
   RowBox[{"Quantile", "[", 
    RowBox[{"binlist", ",", 
     RowBox[{"{", 
      RowBox[{"min", ",", "max"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"hgtrangeF95", "=", 
   RowBox[{"hrange", "[", 
    RowBox[{"SUTresidsZtrim", ",", "0.025", ",", "0.975"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"PVrangeF95", "=", 
   RowBox[{
    RowBox[{"hgtrangeF95", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "-", 
    RowBox[{"hgtrangeF95", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"hgtrangeF99", "=", 
   RowBox[{"hrange", "[", 
    RowBox[{"SUTresidsZtrim", ",", "0.005", ",", "0.995"}], "]"}]}], ";", 
  RowBox[{"PVrangeF99", "=", 
   RowBox[{
    RowBox[{"hgtrangeF99", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "-", 
    RowBox[{"hgtrangeF99", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigmaF", "//", 
   RowBox[{
    RowBox[{"NumberForm", "[", 
     RowBox[{"#", ",", "5"}], "]"}], "&"}]}], ";"}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"sutflatplt", "=", 
  RowBox[{"ListPointPlot3D", "[", 
   RowBox[{"SUTresidsXYZtrim", ",", 
    RowBox[{"PlotRange", "->", "All"}], ",", 
    RowBox[{"ViewPoint", "->", 
     RowBox[{"Dynamic", "[", "vp1", "]"}]}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
    RowBox[{"ImageSize", "->", "400"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Xval\>\"", ",", "\"\<Yval\>\"", ",", "\"\<Z [\[Micro]m]\>\""}], 
      "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
       RowBox[{"FontSize", "->", "12"}]}], "]"}]}], ",", 
    RowBox[{"PlotLabel", "->", 
     RowBox[{
     "fileinS", "<>", "\"\<: SUT flatness\>\"", "<>", "\"\<\\n95%range=\>\"", 
      "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"hgtrangeF95", "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", "3"}], "]"}], "&"}]}], "]"}], "<>", 
      "\"\<, PV95= \>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"hgtrangeF95", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{"hgtrangeF95", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", "3"}], "]"}], "&"}]}], "]"}], "<>", "zunit$", "<>",
       "\[IndentingNewLine]", "\"\<\\n99%range=\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"hgtrangeF99", "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", "3"}], "]"}], "&"}]}], "]"}], "<>", 
      "\"\<, PV99= \>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"hgtrangeF99", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{"hgtrangeF99", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", "3"}], "]"}], "&"}]}], "]"}], "<>", "zunit$", "<>",
       "\[IndentingNewLine]", "\"\<\\nsdev=\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"sigmaF", "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", "3"}], "]"}], "&"}]}], "]"}], "<>", 
      "zunit$"}]}]}], "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"Dynamic", "[", "vp1", "]"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"autoOutput", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"fileinS", "<>", "\"\<_FLAT_CCD_plot.tiff\>\""}], ",", 
     "sutflatplt", ",", 
     RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
     RowBox[{"ImageResolution", "->", "100"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 StyleBox[
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Export SUT Flatness plot\>\"", ",", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"fileinS", "<>", "\"\<_FLAT_CCD_plot.tiff\>\""}], ",", 
      "sutflatplt", ",", 
      RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
      RowBox[{"ImageResolution", "->", "100"}]}], "]"}]}], "]"}],
  FontColor->RGBColor[1, 0, 1]]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.648935832421516*^9, {3.6489364759842463`*^9, 3.648936493759314*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"sutflathist", "=", 
  RowBox[{"Histogram", "[", 
   RowBox[{"SUTresidsZtrim", ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
       RowBox[{"FontSize", "\[Rule]", "9"}]}], "]"}]}], ",", 
    RowBox[{"PlotLabel", "->", 
     RowBox[{
     "fileinS", "<>", "\"\<: SUT flatness\>\"", "<>", "\"\<\\n95%range=\>\"", 
      "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"hgtrangeF95", "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", "3"}], "]"}], "&"}]}], "]"}], "<>", 
      "\"\<, PV95= \>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"hgtrangeF95", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{"hgtrangeF95", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", "3"}], "]"}], "&"}]}], "]"}], "<>", "zunit$", "<>",
       "\[IndentingNewLine]", "\"\<\\n99%range=\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"hgtrangeF99", "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", "3"}], "]"}], "&"}]}], "]"}], "<>", 
      "\"\<, PV99= \>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"hgtrangeF99", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{"hgtrangeF99", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", "3"}], "]"}], "&"}]}], "]"}], "<>", "zunit$", "<>",
       "\[IndentingNewLine]", "\"\<\\nsdev=\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"sigmaF", "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", "3"}], "]"}], "&"}]}], "]"}], "<>", 
      "zunit$"}]}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "These", " ", "are", " ", "the", " ", "residuals", " ", "after", " ", 
    "removing", " ", "plane", " ", "fit"}], "*)"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.659181325531341*^9, 3.659181327267642*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"autoOutput", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"fileinS", "<>", "\"\<_FLAT_CCD_histo.tiff\>\""}], ",", 
     "sutflathist", ",", 
     RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
     RowBox[{"ImageResolution", "->", "100"}]}], "]"}]}], " ", "]"}]], "Input",\

 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 StyleBox[
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Export SUT Flatness histogram\>\"", ",", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"fileinS", "<>", "\"\<_FLAT_CCD_histo.tiff\>\""}], ",", 
      "sutflathist", ",", 
      RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
      RowBox[{"ImageResolution", "->", "100"}]}], "]"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}],
  FontColor->RGBColor[1, 0, 1]]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.6489358340654783`*^9, {3.648936533422143*^9, 3.6489365561496153`*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"sbwcF", "=", 
  RowBox[{"BoxWhiskerChart", "[", 
   RowBox[{"SUTresidsZtrim", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Outliers\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<MeanMarker\>\"", ",", "1.0", ",", "Thick"}], "}"}]}], 
     "}"}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
       RowBox[{"FontSize", "\[Rule]", "9"}]}], "]"}]}], ",", 
    RowBox[{"PlotLabel", "->", 
     RowBox[{
     "fileinS", "<>", "\"\<: SUT flatness\>\"", "<>", "\"\<\\n95%range=\>\"", 
      "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"hgtrangeF95", "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", "3"}], "]"}], "&"}]}], "]"}], "<>", 
      "\"\<, PV95= \>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"hgtrangeF95", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{"hgtrangeF95", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", "3"}], "]"}], "&"}]}], "]"}], "<>", "zunit$", "<>",
       "\[IndentingNewLine]", "\"\<\\n99%range=\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"hgtrangeF99", "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", "3"}], "]"}], "&"}]}], "]"}], "<>", 
      "\"\<, PV99= \>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"hgtrangeF99", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{"hgtrangeF99", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", "3"}], "]"}], "&"}]}], "]"}], "<>", "zunit$", "<>",
       "\[IndentingNewLine]", "\"\<\\nsdev=\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"sigmaF", "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", "3"}], "]"}], "&"}]}], "]"}], "<>", "zunit$"}]}], 
    ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"zunit$", ",", "\"\<\>\""}], "}"}]}]}], "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.659181268338066*^9, 3.659181283454015*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "Cell"}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.644013943304638*^9, 3.6440139476800213`*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"autoOutput", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"fileinS", "<>", "\"\<_FLAT_CCD_bw.tiff\>\""}], ",", "sbwcF", 
     ",", 
     RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
     RowBox[{"ImageResolution", "->", "100"}]}], "]"}]}], "]"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 StyleBox[
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Export Flatness whisker chart file\>\"", ",", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"fileinS", "<>", "\"\<_FLAT_CCD_bw.tiff\>\""}], ",", "sbwcF", 
      ",", 
      RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
      RowBox[{"ImageResolution", "->", "100"}]}], "]"}]}], "]"}],
  FontColor->RGBColor[1, 0, 1]]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.648935835286237*^9, {3.648936593430984*^9, 3.6489366174391527`*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"quantlist", "=", 
   RowBox[{"Reverse", "[", 
    RowBox[{"{", 
     RowBox[{
     "0.0", ",", "0.005", ",", "0.01", ",", "0.025", ",", "0.25", ",", "0.50",
       ",", "0.75", ",", "0.975", ",", "0.99", ",", "0.995", ",", "1.0"}], 
     "}"}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"qresF", "=", 
   RowBox[{"Quantile", "[", 
    RowBox[{"SUTresidsZtrim", ",", "quantlist"}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[{
 RowBox[{
  RowBox[{"qtableF", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"quantlist", ",", "qresF"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "TableForm"}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"autoOutput", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"fileinS", "<>", "\"\<_FLAT_CCD_quantile.xlsx\>\""}], ",", 
     RowBox[{"Prepend", "[", 
      RowBox[{"qtableF", ",", 
       RowBox[{"{", 
        RowBox[{"fileinS", "<>", "\"\<, SUT flatness Quantiles\>\""}], 
        "}"}]}], "]"}], ",", "\"\<XLSX\>\""}], "]"}]}], "]"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 StyleBox[
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Export Flatness Quantile table file\>\"", ",", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"fileinS", "<>", "\"\<_FLAT_CCD_quantile.xlsx\>\""}], ",", 
      RowBox[{"Prepend", "[", 
       RowBox[{"qtableF", ",", 
        RowBox[{"{", 
         RowBox[{"fileinS", "<>", "\"\<, SUT flatness Quantiles\>\""}], 
         "}"}]}], "]"}], ",", "\"\<XLSX\>\""}], "]"}]}], "]"}],
  FontColor->RGBColor[1, 0, 1]]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.648936637689241*^9, 3.64893665665697*^9}},
 $CellContext`InitializationGroup -> False]
}, Open  ]],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"autoOutput", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"fileinS", "<>", "\"\<_FLAT_CCD_data.xlsx\>\""}], ",", 
     "SUTresidsXYZtrim", ",", "\"\<XLSX\>\""}], "]"}]}], "]"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 StyleBox[
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Export XYZ flatness height data.\>\"", ",", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"fileinS", "<>", "\"\<_FLAT_CCD_data.xlsx\>\""}], ",", 
      "SUTresidsXYZtrim", ",", "\"\<XLSX\>\""}], "]"}]}], "]"}],
  FontColor->RGBColor[1, 0, 1]]], "Input",
 CellChangeTimes->{{3.64893667538807*^9, 3.6489366998341312`*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"strimplt", "=", 
  RowBox[{"ListPointPlot3D", "[", 
   RowBox[{"SUTdatatrim", ",", 
    RowBox[{"PlotRange", "->", "All"}], ",", 
    RowBox[{"ViewPoint", "->", "vp1"}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
    RowBox[{"ImageSize", "->", "400"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<Xval\>\"", ",", "\"\<Yval\>\"", ",", "\"\<\>\""}], "}"}]}],
     ",", 
    RowBox[{"PlotLabel", "->", 
     RowBox[{
     "fileinS", "<>", "\"\<: SUT flatness\>\"", "<>", "\"\<\\n95%range=\>\"", 
      "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"hgtrangeF95", "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", "3"}], "]"}], "&"}]}], "]"}], "<>", 
      "\"\<, PV95= \>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"hgtrangeF95", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{"hgtrangeF95", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", "3"}], "]"}], "&"}]}], "]"}], "<>", "zunit$", "<>",
       "\[IndentingNewLine]", "\"\<\\n99%range=\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"hgtrangeF99", "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", "3"}], "]"}], "&"}]}], "]"}], "<>", 
      "\"\<, PV99= \>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"hgtrangeF99", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{"hgtrangeF99", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", "3"}], "]"}], "&"}]}], "]"}], "<>", "zunit$", "<>",
       "\[IndentingNewLine]", "\"\<\\nsdev=\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"sigmaF", "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", "3"}], "]"}], "&"}]}], "]"}], "<>", 
      "zunit$"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{3.6489408120936203`*^9},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"sutlen$", "=", 
  RowBox[{"ToString", "[", 
   RowBox[{"Length", "[", "SUTdatatrim", "]"}], "]"}]}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"autoOutput", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
     "fileinS", "<>", "\"\<_\>\"", "<>", "sutlen$", "<>", 
      "\"\<_SUTtrim.tiff\>\""}], ",", "strimplt", ",", 
     RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
     RowBox[{"ImageResolution", "->", "100"}]}], "]"}]}], "]"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 StyleBox[
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Export trimmed SUT region plot\>\"", ",", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
      "fileinS", "<>", "\"\<_\>\"", "<>", "sutlen$", "<>", 
       "\"\<_SUTtrim.tiff\>\""}], ",", "strimplt", ",", 
      RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
      RowBox[{"ImageResolution", "->", "100"}]}], "]"}], ",", 
    RowBox[{"Method", "->", "\"\<Queued\>\""}]}], "]"}],
  FontColor->RGBColor[1, 0, 1]]], "Input",
 CellChangeTimes->{3.648935836436736*^9},
 $CellContext`InitializationGroup -> False]
}, Open  ]],

Cell["End of SUT flatness section.", "Section",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell["\<\
Set the SUTdata to the trimmed array and iterate. Continue from here when \
desired trim is achieved.\
\>", "Section",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"SUTdata", "=", "SUTdatatrim"}], ";"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "Next", ",", "CellGroup"}], "]"}]], "Input",
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.648329373450193*^9, 3.648329374612866*^9}, {
  3.66190373903994*^9, 3.661903750463292*^9}},
 $CellContext`InitializationGroup -> False]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
6.0 Work on REF region. Do plane fit and toss out bad points. Iterate if \
necessary.\
\>", "Section",
 CellChangeTimes->{{3.661903516029883*^9, 3.661903517486141*^9}},
 $CellContext`InitializationGroup -> False],

Cell["Restart here for REF iteration bad point cleanup", "Subsubsection",
 CellTags->"REFdata iterate restart",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", "REFdata", "]"}], "==", "0"}], ",", 
    RowBox[{
     RowBox[{
     "MessageDialog", "[", "\"\<Setting REF to const plane\>\"", "]"}], ";", 
     RowBox[{"zSUTconst", "=", 
      RowBox[{"Mean", "[", 
       RowBox[{"SUTdata", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}]}], ";", 
     RowBox[{"REFdata", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"SUTdata", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"SUTdata", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", "zSUTconst"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "SUTdata", "]"}]}], "}"}]}], "]"}]}]}]}], 
   "]"}], ";"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"zSUTconst", "=", 
  RowBox[{"Mean", "[", 
   RowBox[{"SUTdata", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}]}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"rplt", "=", 
  RowBox[{"ListPointPlot3D", "[", 
   RowBox[{"REFdata", ",", 
    RowBox[{"PlotRange", "->", "All"}], ",", 
    RowBox[{"ViewPoint", "->", 
     RowBox[{"Dynamic", "[", "vp", "]"}]}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
    RowBox[{"ImageSize", "->", "400"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<Xval\>\"", ",", "\"\<Yval\>\"", ",", "\"\<\>\""}], "}"}]}],
     ",", 
    RowBox[{"PlotLabel", "->", 
     RowBox[{"fileinS", "<>", "\"\<\\nraw REF data\>\""}]}]}], 
   "]"}]}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input",
 CellAutoOverwrite->False,
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"rsplt", "=."}], ";", 
  RowBox[{"rsplt", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"rplt", ",", "strimplt"}], "]"}]}]}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell["Look at REF data", "Subsubsection",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"test", "=."}], ";", 
  RowBox[{"zREFdata", "=."}], ";"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"zREFdata", "=", 
   RowBox[{
    RowBox[{"Take", "[", 
     RowBox[{"REFdata", ",", "All", ",", 
      RowBox[{"{", "3", "}"}]}], "]"}], "//", "Flatten"}]}], ";"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxzR", "=", 
   RowBox[{"Max", "[", "zREFdata", "]"}]}], ";", 
  RowBox[{"minzR", "=", 
   RowBox[{"Min", "[", "zREFdata", "]"}]}], ";", 
  RowBox[{"sigmaR", "=", 
   RowBox[{"StandardDeviation", "[", "zREFdata", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"zbinR", "=", 
   RowBox[{"BinCounts", "[", 
    RowBox[{"zREFdata", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"maxzR", "-", "minzR"}], ")"}], "/", "25"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hrange", "[", 
    RowBox[{"binlist_", ",", "min_", ",", "max_"}], "]"}], ":=", 
   RowBox[{"Quantile", "[", 
    RowBox[{"binlist", ",", 
     RowBox[{"{", 
      RowBox[{"min", ",", "max"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"hgtrangeR99", "=", 
   RowBox[{"hrange", "[", 
    RowBox[{"zREFdata", ",", "0.005", ",", "0.995"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"PVrangeR99", "=", 
   RowBox[{
    RowBox[{"hgtrangeR99", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "-", 
    RowBox[{"hgtrangeR99", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{"sigmaR", "//", 
  RowBox[{
   RowBox[{"NumberForm", "[", 
    RowBox[{"#", ",", "5"}], "]"}], "&"}]}]}], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"histresidplt", "=", 
   RowBox[{"Histogram", "[", 
    RowBox[{"zREFdata", ",", "50", ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Bold", ",", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
        RowBox[{"FontSize", "\[Rule]", "9"}]}], "]"}]}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"zunit$", ",", "\"\<\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"fileinS", "<>", "\"\<\\n99% range=\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"hrange", "[", 
          RowBox[{"zREFdata", ",", "0.005", ",", "0.995"}], "]"}], "//", 
         RowBox[{
          RowBox[{"NumberForm", "[", 
           RowBox[{"#", ",", "5"}], "]"}], "&"}]}], "]"}], "<>", 
       "\"\< PV99=\>\"", "<>", 
       RowBox[{"ToString", "[", "PVrangeR99", "]"}], "<>", "\"\<\\nsdev=\>\"",
        "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"sigmaR", "//", 
         RowBox[{
          RowBox[{"NumberForm", "[", 
           RowBox[{"#", ",", "5"}], "]"}], "&"}]}], "]"}], "<>", 
       "zunit$"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.65918135746913*^9, 3.659181387591485*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"histresidplt", ",", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"MousePosition", "[", "\"\<Graphics\>\"", "]"}], "]"}]}], 
  "}"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input",
 CellAutoOverwrite->False,
 $CellContext`InitializationGroup -> False],

Cell["Now fit a plane surface to the REF points", "Text",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fitbasisR", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "x", ",", "y"}], "}"}]}], ";", 
  RowBox[{"fitidxR", "=", "\"\<1,1\>\""}], ";"}], "\n", 
 RowBox[{"fitordR$", "=", 
  RowBox[{"StringTake", "[", 
   RowBox[{
    RowBox[{"ToString", "[", "fitbasisR", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", 
      RowBox[{"-", "2"}]}], "}"}]}], "]"}]}]}], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"REFfit", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"Fit", "[", 
   RowBox[{"REFdata", ",", "fitbasisR", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"vp1", "=", "vp"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"refplt", "=", 
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"REFfit", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "xminCCD", ",", "xmaxCCD"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "ymin", ",", "ymax"}], "}"}], ",", 
    RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"Opacity", "[", "0.5", "]"}]}], ",", 
    RowBox[{"ViewPoint", "->", 
     RowBox[{"Dynamic", "[", "vp1", "]"}]}]}], "]"}]}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"REFcorrected", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"REFdata", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"REFdata", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"REFdata", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "3"}], "]"}], "]"}], "-", 
        RowBox[{"REFfit", "[", 
         RowBox[{
          RowBox[{"REFdata", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"REFdata", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}]}]}], "}"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "REFdata", "]"}]}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"reflen$", "=", 
  RowBox[{"ToString", "[", 
   RowBox[{"Length", "[", "REFcorrected", "]"}], "]"}]}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"REFresidsPlt", "=", 
  RowBox[{"ListPointPlot3D", "[", 
   RowBox[{"REFcorrected", ",", 
    RowBox[{"PlotRange", "->", "All"}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Xval\>\"", ",", "\"\<Yval\>\"", ",", "\"\<Z[\[Micro]m]\>\""}], 
      "}"}]}], ",", 
    RowBox[{"PlotLabel", "->", 
     RowBox[{
     "fileinS", "<>", "\"\<\\nThis shows REF after subt plane fit\>\""}]}]}], 
   "]"}]}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"autoOutput", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"fileinS", "<>", "\"\<_ABSZ_REF_plot.tiff\>\""}], ",", 
     "REFresidsPlt", ",", 
     RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
     RowBox[{"ImageResolution", "->", "100"}]}], "]"}]}], "]"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 StyleBox[
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Export REFresids plot\>\"", ",", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"fileinS", "<>", "\"\<_ABSZ_REF_plot.tiff\>\""}], ",", 
      "REFresidsPlt", ",", 
      RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
      RowBox[{"ImageResolution", "->", "100"}]}], "]"}], ",", 
    RowBox[{"Method", "->", "\"\<Queued\>\""}]}], "]"}],
  FontColor->RGBColor[1, 0, 1]]], "Input",
 CellChangeTimes->{
  3.6489358381228027`*^9, {3.6489369106315193`*^9, 3.648936928318797*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"zREFresids", "=", 
   RowBox[{
    RowBox[{"Take", "[", 
     RowBox[{"REFcorrected", ",", "All", ",", 
      RowBox[{"{", "3", "}"}]}], "]"}], "//", "Flatten"}]}], ";"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell["Look at quality of REF plane correction to REF points:", "Text",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxzR2", "=", 
   RowBox[{"Max", "[", "zREFresids", "]"}]}], ";", 
  RowBox[{"minzR2", "=", 
   RowBox[{"Min", "[", "zREFresids", "]"}]}], ";", 
  RowBox[{"sigmaR2", "=", 
   RowBox[{"StandardDeviation", "[", "zREFresids", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"zbinR2", "=", 
   RowBox[{"BinCounts", "[", 
    RowBox[{"zREFresids", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"maxzR2", "-", "minzR2"}], ")"}], "/", "25"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hrange", "[", 
    RowBox[{"binlist_", ",", "min_", ",", "max_"}], "]"}], ":=", 
   RowBox[{"Quantile", "[", 
    RowBox[{"binlist", ",", 
     RowBox[{"{", 
      RowBox[{"min", ",", "max"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"hgtrange99", "=", 
   RowBox[{"hrange", "[", 
    RowBox[{"zREFresids", ",", "0.005", ",", "0.995"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"PVrange99", "=", 
   RowBox[{
    RowBox[{"hgtrange99", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "-", 
    RowBox[{"hgtrange99", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{"sigmaR2", "//", 
  RowBox[{
   RowBox[{"NumberForm", "[", 
    RowBox[{"#", ",", "5"}], "]"}], "&"}]}]}], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"histREFresidplt", "=", 
   RowBox[{"Histogram", "[", 
    RowBox[{"zREFresids", ",", "25", ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Bold", ",", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
        RowBox[{"FontSize", "\[Rule]", "9"}]}], "]"}]}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"zunit$", ",", "\"\<\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{
      "fileinS", "<>", "\"\< REFresids\>\"", "<>", "\"\<\\n99%=\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"hrange", "[", 
          RowBox[{"zREFresids", ",", "0.005", ",", "0.995"}], "]"}], "//", 
         RowBox[{
          RowBox[{"NumberForm", "[", 
           RowBox[{"#", ",", "4"}], "]"}], "&"}]}], "]"}], "<>", 
       "\"\<, PV99=\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"PVrange99", "//", 
         RowBox[{
          RowBox[{"NumberForm", "[", 
           RowBox[{"#", ",", "4"}], "]"}], "&"}]}], "]"}], "<>", 
       "\"\<\\nsdev=\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"sigmaR2", "//", 
         RowBox[{
          RowBox[{"NumberForm", "[", 
           RowBox[{"#", ",", "4"}], "]"}], "&"}]}], "]"}], "<>", 
       "zunit$"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.649286929953595*^9, 3.649286943567156*^9}, {
   3.64928699601375*^9, 3.649286996889786*^9}, 3.659181409009454*^9},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "Next", ",", "Cell"}], "]"}]], "Input",
 CellChangeTimes->{{3.659183009795661*^9, 3.659183018078068*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"histREFresidplt", ",", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"MousePosition", "[", "\"\<Graphics\>\"", "]"}], "]"}]}], 
  "}"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"autoOutput", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"fileinS", "<>", "\"\<_ABSZ_REF_histo.tiff\>\""}], ",", 
     "histREFresidplt", ",", 
     RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
     RowBox[{"ImageResolution", "->", "100"}]}], "]"}]}], "]"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 StyleBox[
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Export REF resids histogram plot\>\"", ",", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"fileinS", "<>", "\"\<_ABSZ_REF_histo.tiff\>\""}], ",", 
      "histREFresidplt", ",", 
      RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
      RowBox[{"ImageResolution", "->", "100"}]}], "]"}]}], "]"}],
  FontColor->RGBColor[1, 0, 1]]], "Input",
 CellChangeTimes->{
  3.648935839442683*^9, {3.648936949657076*^9, 3.6489369706707363`*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"rbwc", "=", 
  RowBox[{"BoxWhiskerChart", "[", 
   RowBox[{"zREFresids", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Outliers\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<MeanMarker\>\"", ",", "1.0", ",", "Thick"}], "}"}]}], 
     "}"}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
       RowBox[{"FontSize", "\[Rule]", "9"}]}], "]"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"fileinS", "<>", "\"\< REFresids\>\"", "<>", "\"\<\\n99%=\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{
        RowBox[{"hrange", "[", 
         RowBox[{"zREFresids", ",", "0.005", ",", "0.995"}], "]"}], "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", "4"}], "]"}], "&"}]}], "]"}], "<>", 
      "\"\<, PV99=\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"PVrange99", "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", "4"}], "]"}], "&"}]}], "]"}], "<>", 
      "\"\<\\nsdev=\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"sigmaR2", "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", "4"}], "]"}], "&"}]}], "]"}], "<>", "zunit$"}]}], 
    ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"zunit$", ",", "\"\<\>\""}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.648937050972115*^9, 3.6489370614427958`*^9}, 
   3.659181416786667*^9},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input",
 CellAutoOverwrite->False,
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"autoOutput", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"fileinS", "<>", "\"\<_ABSZ_REF_bw.tiff\>\""}], ",", "rbwc", ",", 
     RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
     RowBox[{"ImageResolution", "->", "100"}]}], "]"}]}], "]"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 StyleBox[
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Export REF box whisker chart file\>\"", ",", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"fileinS", "<>", "\"\<_ABSZ_REF_bw.tiff\>\""}], ",", "rbwc", 
      ",", 
      RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
      RowBox[{"ImageResolution", "->", "100"}]}], "]"}]}], "]"}],
  FontColor->RGBColor[1, 0, 1]]], "Input",
 CellChangeTimes->{
  3.648935841536846*^9, {3.648937081221183*^9, 3.6489371043337812`*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"vp1", "=", 
  RowBox[{"{", 
   RowBox[{"2", ",", "0", ",", "0"}], "}"}]}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"SUTandREFplane", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"rsplt", ",", "refplt", ",", 
    RowBox[{"PlotRange", "->", "All"}], ",", 
    RowBox[{"ViewPoint", "->", 
     RowBox[{"Dynamic", "[", "vp1", "]"}]}], ",", 
    RowBox[{"PlotLabel", "->", 
     RowBox[{
     "fileinS", "<>", "\"\<\\nREF plane fit to trimmed point range\>\""}]}]}],
    "]"}]}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"autoOutput", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"fileinS", "<>", "\"\<_ABSZ_plotwithref.tiff\>\""}], ",", 
     "SUTandREFplane", ",", 
     RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
     RowBox[{"ImageResolution", "->", "100"}]}], "]"}]}], "]"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 StyleBox[
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Export SUT&REF&fitplane plot\>\"", ",", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"fileinS", "<>", "\"\<_ABSZ_plotwithref.tiff\>\""}], ",", 
      "SUTandREFplane", ",", 
      RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
      RowBox[{"ImageResolution", "->", "100"}]}], "]"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}],
  FontColor->RGBColor[1, 0, 1]]], "Input",
 CellChangeTimes->{
  3.648935843762267*^9, {3.6489372186294413`*^9, 3.6489372565056267`*^9}},
 $CellContext`InitializationGroup -> False],

Cell["Iterate REF trim and fit.", "Subsubsection",
 $CellContext`InitializationGroup -> False],

Cell["Trim off bad points from REF region.", "Text",
 $CellContext`InitializationGroup -> False],

Cell[CellGroupData[{

Cell["Trim the outliers here.", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "Next", ",", "Cell"}], "]"}]], "Input",
 CellChangeTimes->{{3.659183245038707*^9, 3.6591832518486547`*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"threshR", "=", 
  RowBox[{"sigmaR2", "*", "4"}]}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"threshR", "=", 
  RowBox[{"Input", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"histREFresidplt", ",", 
        RowBox[{"Dynamic", "[", 
         RowBox[{"MousePosition", "[", "\"\<Graphics\>\"", "]"}], "]"}]}], 
       "}"}], ",", 
      "\"\<\\nEnter \[PlusMinus]threshold value for trimming bad REF \
points.\\n\>\""}], "}"}], ",", "threshR"}], "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.6492870284480457`*^9, 3.649287112725079*^9}, {
   3.6492873389706306`*^9, 3.649287350949844*^9}, 3.659183223516856*^9},
 $CellContext`InitializationGroup -> False],

Cell["Trim both the XYZ and the Z data lists", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Remove", " ", "the", " ", "plane", " ", "from", " ", "the", " ", "z"}], 
    "-", 
    RowBox[{
    "data", " ", "but", " ", "not", " ", "from", " ", "the", " ", "XYZ", " ", 
     "data"}]}], "*)"}], 
  RowBox[{
   RowBox[{"REFresidsZtrim", "=", 
    RowBox[{
     RowBox[{"Drop", "[", 
      RowBox[{
       RowBox[{"Reap", "[", " ", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"REFdata", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "3"}], "]"}], "]"}], "-", 
               RowBox[{"REFfit", "[", 
                RowBox[{
                 RowBox[{"REFdata", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{"REFdata", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}]}], "]"}], 
             "<", "threshR"}], ",", 
            RowBox[{"Sow", "[", 
             RowBox[{
              RowBox[{"REFdata", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "3"}], "]"}], "]"}], "-", 
              RowBox[{"REFfit", "[", 
               RowBox[{
                RowBox[{"REFdata", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"REFdata", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}]}], "]"}]}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "REFdata", "]"}]}], "}"}]}], "]"}], "]"}], 
       ",", "1"}], "]"}], "//", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"#", ",", "2"}], "]"}], "&"}]}]}], ";"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"REFdatatrim", "=", 
   RowBox[{
    RowBox[{"Drop", "[", 
     RowBox[{
      RowBox[{"Reap", "[", " ", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"REFdata", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "3"}], "]"}], "]"}], "-", 
              RowBox[{"REFfit", "[", 
               RowBox[{
                RowBox[{"REFdata", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"REFdata", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}]}], "]"}], 
            "<", "threshR"}], ",", 
           RowBox[{"Sow", "[", 
            RowBox[{"REFdata", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "REFdata", "]"}]}], "}"}]}], "]"}], "]"}], 
      ",", "1"}], "]"}], "//", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"#", ",", "2"}], "]"}], "&"}]}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"REFresidsXYZtrim", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"REFdatatrim", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"REFdatatrim", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"REFresidsZtrim", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "REFdatatrim", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 $CellContext`InitializationGroup -> False]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "Next", ",", "Cell"}], "]"}]], "Input",
 CellAutoOverwrite->False,
 $CellContext`InitializationGroup -> False],

Cell[BoxData[{
 RowBox[{
  RowBox[{"refflag", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"refflag", "=", 
  RowBox[{"Input", "[", 
   RowBox[{
   "\"\<If need to iterate REF fit, set refflag to 1\>\"", ",", "refflag"}], 
   "]"}]}], "\n", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"refflag", "==", "1"}], ",", 
   RowBox[{
    RowBox[{"REFdata", "=", "REFdatatrim"}], ";", 
    RowBox[{"NotebookLocate", "[", "\"\<REFdata iterate restart\>\"", "]"}], 
    ";", 
    RowBox[{"Abort", "[", "]"}]}], ",", 
   RowBox[{"MessageDialog", "[", "\"\<Finished with REF\>\"", "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.649284342071209*^9, 3.649284346131351*^9}, {
  3.659183369607476*^9, 3.659183376045311*^9}},
 $CellContext`InitializationGroup -> False]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
7.0 Now do the subtraction of the REF plane from the CCD points. Need to set \
upstemcal correction factor before execution here.\
\>", "Section",
 CellChangeTimes->{{3.6619035205822144`*^9, 3.661903521854249*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData["upstemcal"], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"MessageDialog", "[", 
   RowBox[{"\"\<Subtracting upstemcal value: \>\"", "<>", 
    RowBox[{"ToString", "[", "upstemcal", "]"}]}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.6492857539510508`*^9, 3.6492857577883463`*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SUTcorrected", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SUTdata", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"SUTdata", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"SUTdata", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "3"}], "]"}], "]"}], "-", 
        RowBox[{"REFfit", "[", 
         RowBox[{
          RowBox[{"SUTdata", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"SUTdata", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}], "-", 
        "upstemcal"}]}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "SUTdata", "]"}]}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{"Length", "[", "SUTdata", "]"}]}], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"CCDabshgt", "=", 
  RowBox[{"ListPointPlot3D", "[", 
   RowBox[{"SUTcorrected", ",", 
    RowBox[{"PlotRange", "->", "All"}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Xval\>\"", ",", "\"\<Yval\>\"", ",", "\"\<Z[\[Micro]m]\>\""}], 
      "}"}]}], ",", 
    RowBox[{"PlotLabel", "->", "fileinS"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.648938446462583*^9, 3.648938455188922*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"autoOutput", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"fileinS", "<>", "\"\<_ABSZ_CCD_plot.tiff\>\""}], ",", 
     "CCDabshgt", ",", 
     RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
     RowBox[{"ImageResolution", "->", "100"}]}], "]"}]}], "]"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 StyleBox[
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Export CCDabhHgt plot\>\"", ",", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"fileinS", "<>", "\"\<_ABSZ_CCD_plot.tiff\>\""}], ",", 
      "CCDabshgt", ",", 
      RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
      RowBox[{"ImageResolution", "->", "100"}]}], "]"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}],
  FontColor->RGBColor[1, 0, 1]]], "Input",
 CellChangeTimes->{{3.648938366205386*^9, 3.648938400828816*^9}, 
   3.6489384308782997`*^9},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"zeroplane", "=", 
   RowBox[{"Plot3D", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "xmin", ",", "xmax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "ymin", ",", "ymax"}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"Opacity", "[", "0.5", "]"}]}]}], "]"}]}], ";"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"vp2", "=", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", ".5"}], "}"}]}], ";"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"SUTcor3D", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"CCDabshgt", ",", "zeroplane", ",", 
    RowBox[{"ViewPoint", "->", 
     RowBox[{"Dynamic", "[", "vp2", "]"}]}], ",", 
    RowBox[{"ImageSize", "->", "400"}]}], "]"}]}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input",
 CellAutoOverwrite->False,
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"autoOutput", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"fileinS", "<>", "\"\<_ABSZ_plotwithdatum.tiff\>\""}], ",", 
     "SUTcor3D", ",", 
     RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
     RowBox[{"ImageResolution", "->", "100"}]}], "]"}]}], "]"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 StyleBox[
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Export SUTcor3D plot\>\"", ",", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"fileinS", "<>", "\"\<_ABSZ_plotwithdatum.tiff\>\""}], ",", 
      "SUTcor3D", ",", 
      RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
      RowBox[{"ImageResolution", "->", "100"}]}], "]"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}],
  FontColor->RGBColor[1, 0, 1]]], "Input",
 CellChangeTimes->{
  3.648935845929042*^9, {3.648937361846241*^9, 3.648937395604916*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[{
 RowBox[{
  RowBox[{"zSUTresids", "=", 
   RowBox[{
    RowBox[{"Take", "[", 
     RowBox[{"SUTcorrected", ",", "All", ",", 
      RowBox[{"{", "3", "}"}]}], "]"}], "//", "Flatten"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"quantlist", "=", 
   RowBox[{"Reverse", "[", 
    RowBox[{"{", 
     RowBox[{
     "0.0", ",", "0.005", ",", "0.01", ",", "0.025", ",", "0.25", ",", "0.50",
       ",", "0.75", ",", "0.975", ",", "0.99", ",", "0.995", ",", "1.0"}], 
     "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"qres", "=", 
   RowBox[{"Quantile", "[", 
    RowBox[{"zSUTresids", ",", "quantlist"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"qtableABSZ", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"quantlist", ",", "qres"}], "}"}], "]"}]}], ";", 
  RowBox[{"qtableABSZ", "//", "TableForm"}]}]}], "Input",
 CellChangeTimes->{{3.6483357488347387`*^9, 3.648335754377637*^9}, {
  3.648335985026387*^9, 3.648335986919054*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"q99range", "=", 
  RowBox[{
   RowBox[{"qres", "[", 
    RowBox[{"[", "8", "]"}], "]"}], "-", 
   RowBox[{"qres", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}]}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"surfdenplt", "=", 
  RowBox[{"ListDensityPlot", "[", 
   RowBox[{"SUTcorrected", ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
    RowBox[{"Mesh", "->", "9"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"BarLegend", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Rainbow\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"qres", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}], ",", 
           RowBox[{"qres", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Bold", ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}]}], "]"}]}]}],
       "]"}]}], ",", 
    RowBox[{"PlotLabel", "->", 
     RowBox[{"fileinS", "<>", "\"\<\\nSUT - REF\>\""}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
       RowBox[{"FontSize", "\[Rule]", "9"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{3.659181426921859*^9},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"autoOutput", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"fileinS", "<>", "\"\<_ABSZ_CCD_density.tiff\>\""}], ",", 
     "surfdenplt", ",", 
     RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
     RowBox[{"ImageResolution", "->", "100"}]}], "]"}]}], "]"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 StyleBox[
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Export Surface Density plot\>\"", ",", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"fileinS", "<>", "\"\<_ABSZ_CCD_density.tiff\>\""}], ",", 
      "surfdenplt", ",", 
      RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
      RowBox[{"ImageResolution", "->", "100"}]}], "]"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}],
  FontColor->RGBColor[1, 0, 1]]], "Input",
 CellChangeTimes->{
  3.648935847553473*^9, 3.648937444842587*^9, {3.648937506345449*^9, 
   3.648937519983405*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"hrange", "[", 
    RowBox[{"binlist_", ",", "min_", ",", "max_"}], "]"}], ":=", 
   RowBox[{"Quantile", "[", 
    RowBox[{"binlist", ",", 
     RowBox[{"{", 
      RowBox[{"min", ",", "max"}], "}"}]}], "]"}]}], ";"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"hgtrangeS95", "=."}], ";", 
  RowBox[{"hgtrangeS99", "=."}], ";", 
  RowBox[{"PVrangeS95", "=."}], ";", 
  RowBox[{"PVrangeS99", "=."}], " ", ";"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxzS", "=", 
   RowBox[{"Max", "[", "zSUTresids", "]"}]}], ";", 
  RowBox[{"minzS", "=", 
   RowBox[{"Min", "[", "zSUTresids", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanZcor", "=", 
   RowBox[{
    RowBox[{"Mean", "[", "zSUTresids", "]"}], "//", "Chop"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigmaS", "=", 
   RowBox[{"StandardDeviation", "[", "zSUTresids", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"zbinS", "=", 
   RowBox[{"BinCounts", "[", 
    RowBox[{"zSUTresids", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"maxzS", "-", "minzS"}], ")"}], "/", "25"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"hgtrangeS95", "=", 
   RowBox[{"hrange", "[", 
    RowBox[{"zSUTresids", ",", "0.025", ",", "0.975"}], "]"}]}], ";", 
  RowBox[{"PVrangeS95", "=", 
   RowBox[{
    RowBox[{"hgtrangeS95", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "-", 
    RowBox[{"hgtrangeS95", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";", 
  RowBox[{"hgtrangeS99", "=", 
   RowBox[{"hrange", "[", 
    RowBox[{"zSUTresids", ",", "0.005", ",", "0.995"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"PVrangeS99", "=", 
   RowBox[{
    RowBox[{"hgtrangeS99", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "-", 
    RowBox[{"hgtrangeS99", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{"sigmaS", "//", 
  RowBox[{
   RowBox[{"NumberForm", "[", 
    RowBox[{"#", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}]}], "]"}], "&"}]}]}], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"Median", "[", "zSUTresids", "]"}]], "Input",
 $CellContext`InitializationGroup -> False]
}, Open  ]],

Cell[BoxData[
 RowBox[{"histSUTresidplt", "=", 
  RowBox[{"Histogram", "[", 
   RowBox[{"zSUTresids", ",", "75", ",", 
    RowBox[{"ImageSize", "->", "400"}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
       RowBox[{"FontSize", "\[Rule]", "9"}]}], "]"}]}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"zunit$", ",", "\"\<\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"fileinS", "<>", "\"\<\\nABSZ_histowithdatum\\n95%=\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{
        RowBox[{"hrange", "[", 
         RowBox[{"zSUTresids", ",", "0.025", ",", "0.975"}], "]"}], "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "3"}], "}"}]}], "]"}], "&"}]}], "]"}], "<>", 
      "\"\<, PV95=\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"PVrangeS95", "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "3"}], "}"}]}], "]"}], "&"}]}], "]"}], "<>", 
      "zunit$", "<>", "\"\<\\nmean=\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"meanZcor", "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "3"}], "}"}]}], "]"}], "&"}]}], "]"}], "<>", 
      "\"\<, sigma=\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"sigmaS", "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "3"}], "}"}]}], "]"}], "&"}]}], "]"}], "<>", 
      "zunit$"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.648937664928976*^9, 3.6489376895498333`*^9}, 
   3.64893815131708*^9, {3.659181434770955*^9, 3.659181456909783*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"autoOutput", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"fileinS", "<>", "\"\<_ABSZ_histowithdatum.tiff\>\""}], ",", 
     "histSUTresidplt", ",", 
     RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
     RowBox[{"ImageResolution", "->", "100"}]}], "]"}]}], "]"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 StyleBox[
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Export SUT-REF histogram\>\"", ",", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"fileinS", "<>", "\"\<_ABSZ_histowithdatum.tiff\>\""}], ",", 
      "histSUTresidplt", ",", 
      RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
      RowBox[{"ImageResolution", "->", "100"}]}], "]"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}],
  FontColor->RGBColor[1, 0, 1]]], "Input",
 CellChangeTimes->{
  3.648935849843225*^9, 3.64893758041455*^9, {3.648937615564599*^9, 
   3.648937627316535*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"sdensityplt", "=", 
  RowBox[{"DistributionChart", "[", 
   RowBox[{"zSUTresids", ",", 
    RowBox[{"ChartElementFunction", "\[Rule]", 
     RowBox[{"ChartElementData", "[", "\"\<SmoothDensity\>\"", "]"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
       RowBox[{"FontSize", "\[Rule]", "9"}]}], "]"}]}], ",", 
    RowBox[{"FrameLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<\>\"", ",", "zunit$"}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"fileinS", "<>", "\"\<\\nSUT w/REFsubt\\n95%=\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{
        RowBox[{"hrange", "[", 
         RowBox[{"zSUTresids", ",", "0.025", ",", "0.975"}], "]"}], "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "3"}], "}"}]}], "]"}], "&"}]}], "]"}], "<>", 
      "\"\<, PV95=\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"PVrangeS95", "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "3"}], "}"}]}], "]"}], "&"}]}], "]"}], "<>", 
      "zunit$", "<>", "\"\<\\nmean=\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"meanZcor", "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "3"}], "}"}]}], "]"}], "&"}]}], "]"}], "<>", 
      "\"\<, sigma=\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"sigmaS", "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "3"}], "}"}]}], "]"}], "&"}]}], "]"}], "<>", 
      "zunit$"}]}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"zunit$", ",", "zunit$"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.648938132509407*^9, 3.6489381357571983`*^9}, 
   3.65918144581842*^9},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{
  RowBox[{"quantileMean", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xmin_", ",", "xmax_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ymin_", ",", "ymax_"}], "}"}]}], "}"}], ",", "data_", ",", 
    "metadata_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "min", ",", "max", ",", "lq", ",", " ", "uq", ",", " ", "median"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "min", ",", "lq", ",", " ", "median", ",", " ", "uq", ",", " ", 
        "max"}], "}"}], "=", 
      RowBox[{"Quantile", "[", 
       RowBox[{"data", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.1", ",", "0.5", ",", "0.9", ",", "1"}], "}"}]}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xmin", ",", " ", "median"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"xmax", ",", " ", "median"}], "}"}]}], "}"}], "]"}], 
      "}"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell["Try to get mean line plotted on snooth density chart:", "Text",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"autoOutput", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
     "fileinS", "<>", "\"\<_\>\"", "<>", "sutlen$", "<>", 
      "\"\<_SUTabsZ_denschart.tiff\>\""}], ",", "sdensityplt", ",", 
     RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
     RowBox[{"ImageResolution", "->", "100"}]}], "]"}]}], "]"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 StyleBox[
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Export smooth density chart file\>\"", ",", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
      "fileinS", "<>", "\"\<_\>\"", "<>", "sutlen$", "<>", 
       "\"\<_SUTabsZ_denschart.tiff\>\""}], ",", "sdensityplt", ",", 
      RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
      RowBox[{"ImageResolution", "->", "100"}]}], "]"}]}], "]"}],
  FontColor->RGBColor[1, 0, 1]]], "Input",
 CellChangeTimes->{
  3.648935852398808*^9, {3.648937844091011*^9, 3.648937870896412*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"bwc", "=", 
  RowBox[{"BoxWhiskerChart", "[", 
   RowBox[{"zSUTresids", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Outliers\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<MeanMarker\>\"", ",", "1.0", ",", "Thick"}], "}"}]}], 
     "}"}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
       RowBox[{"FontSize", "\[Rule]", "9"}]}], "]"}]}], ",", 
    RowBox[{"FrameLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<\>\"", ",", "zunit$"}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"fileinS", "<>", "\"\<\\nSUT w/REFsubt\\n95%=\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{
        RowBox[{"hrange", "[", 
         RowBox[{"zSUTresids", ",", "0.025", ",", "0.975"}], "]"}], "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "3"}], "}"}]}], "]"}], "&"}]}], "]"}], "<>", 
      "\"\<, PV95=\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"PVrangeS95", "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "3"}], "}"}]}], "]"}], "&"}]}], "]"}], "<>", 
      "zunit$", "<>", "\"\<\\nmean=\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"meanZcor", "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "3"}], "}"}]}], "]"}], "&"}]}], "]"}], "<>", 
      "\"\<, sigma=\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"sigmaS", "//", 
        RowBox[{
         RowBox[{"NumberForm", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "3"}], "}"}]}], "]"}], "&"}]}], "]"}], "<>", 
      "zunit$"}]}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"zunit$", ",", "zunit$"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.648938101409973*^9, 3.648938105457748*^9}, 
   3.659181472432453*^9},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input",
 CellAutoOverwrite->False,
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"autoOutput", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"fileinS", "<>", "\"\<_ABSZ_CCD_bw.tiff\>\""}], ",", "bwc", ",", 
     
     RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
     RowBox[{"ImageResolution", "->", "100"}]}], "]"}]}], "]"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 StyleBox[
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Export box whisker chart file\>\"", ",", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"fileinS", "<>", "\"\<_ABSZ_CCD_bw.tiff\>\""}], ",", "bwc", ",", 
      RowBox[{"\"\<ImageEncoding\>\"", "->", "\"\<LZW\>\""}], ",", 
      RowBox[{"ImageResolution", "->", "100"}]}], "]"}]}], "]"}],
  FontColor->RGBColor[1, 0, 1]]], "Input",
 CellChangeTimes->{
  3.648935854517226*^9, {3.648937901218608*^9, 3.64893793166569*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"autoOutput", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"fileinS", "<>", "\"\<_ABSZ_CCD_quantile.xlsx\>\""}], ",", 
     RowBox[{"Prepend", "[", 
      RowBox[{"qtableABSZ", ",", 
       RowBox[{"{", 
        RowBox[{"fileinS", "<>", "\"\<, Quantiles\>\""}], "}"}]}], "]"}], 
     ",", "\"\<XLSX\>\""}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{3.659183691076832*^9},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 StyleBox[
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Export Quantile table file\>\"", ",", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"fileinS", "<>", "\"\<_ABSZ_CCD_quantile.xlsx\>\""}], ",", 
      RowBox[{"Prepend", "[", 
       RowBox[{"qtableABSZ", ",", 
        RowBox[{"{", 
         RowBox[{"fileinS", "<>", "\"\<, Quantiles\>\""}], "}"}]}], "]"}], 
      ",", "\"\<XLSX\>\""}], "]"}]}], "]"}],
  FontColor->RGBColor[1, 0, 1]]], "Input",
 CellChangeTimes->{{3.648937953839764*^9, 3.648937985196925*^9}, 
   3.65918367071723*^9},
 $CellContext`InitializationGroup -> False],

Cell["Output the detrended data triplets", "Text",
 $CellContext`InitializationGroup -> False],

Cell["\<\
ADD HEADER info to output file. Output in Excel format. This format drops off \
the brackets upon opening in Excel. Ordinary text file imports with brackets \
showing.
Can\[CloseCurlyQuote]t make the header info appear on separate lines at start \
of Excel file.\
\>", "Text",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SUTout", "=", 
   RowBox[{"Prepend", "[", 
    RowBox[{"SUTcorrected", ",", 
     RowBox[{"{", 
      RowBox[{"fileinS", ",", 
       RowBox[{"DateString", "[", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<X(mm)\>\"", ",", "\"\<Y(mm)\>\"", ",", "\"\<Z(micron)\>\""}], 
        "}"}]}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SUTout", "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", "5"}], "]"}], "]"}], ";"}]}], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "Cell"}], "]"}]], "Input",
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.648331849292295*^9, 3.648331850630507*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"autoOutput", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"fileinS", "<>", "\"\<_ABSZ_CCD_data.xlsx\>\""}], ",", "SUTout", 
     ",", "\"\<XLSX\>\""}], "]"}]}], "]"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[""], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 StyleBox[
  RowBox[{"Button", "[", 
   RowBox[{
   "\"\<Export absolute height data relative to gauge block datum.\>\"", ",", 
    
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"fileinS", "<>", "\"\<_ABSZ_CCD_data.xlsx\>\""}], ",", "SUTout",
       ",", "\"\<XLSX\>\""}], "]"}]}], "]"}],
  FontColor->RGBColor[1, 0, 1]]], "Input",
 CellChangeTimes->{{3.648938021513674*^9, 3.6489380516815977`*^9}},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "After", ",", "GeneratedCell"}], "]"}]], "Input",
 CellAutoOverwrite->False,
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"statreport", "=", 
  RowBox[{
   RowBox[{
   "StringTemplate", "[", 
    "\"\<Summary statistics for e2v sensor data file:\\n\\t \
`1`.\\n\\nFlatness (CCD-031)\\n\\tPV95% =`2`\\t[<10\[Micro]m]\\n\\nAbsolute \
Height relative to 13.000mm datum (CCD-030)\\n\\tMean Z   =\\t`3`\\t[-25\
\[Micro]m to +25\[Micro]m]\\n\\tMedian Z =\\t`4`\\n\\tPV95%    =\\t`5`\\t[<18\
\[Micro]m]\\n\\nQuantiles\\n`6`\\n\\nReport generated `7`\\nNotebook version: \
`8`\\nLast modified: `9`\>\"", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    "]"}], "[", 
   RowBox[{"fileinS", ",", "PVrangeF95", ",", "meanZcor", ",", 
    RowBox[{"Median", "[", "zSUTresids", "]"}], ",", "PVrangeS95", ",", 
    RowBox[{"qtableABSZ", "//", "TableForm"}], ",", 
    RowBox[{"DateString", "[", "]"}], ",", 
    RowBox[{"CurrentValue", "[", "\"\<NotebookFileName\>\"", "]"}], ",", 
    RowBox[{
     RowBox[{"\"\<FileModificationTime\>\"", "/.", 
      RowBox[{"NotebookInformation", "[", "]"}]}], "//", 
     RowBox[{
      RowBox[{"DateString", "[", 
       RowBox[{"#", ",", 
        RowBox[{"TimeZone", "\[Rule]", 
         RowBox[{"-", "8"}]}]}], "]"}], "&"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{3.649286706276547*^9},
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{"nb", ",", "Next", ",", "Cell"}], "]"}]], "Input",
 CellAutoOverwrite->False,
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"autoOutput", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"fileinS", "<>", "\"\<_CCD_stat_report.txt\>\""}], ",", 
     "statreport", ",", "\"\<TEXT\>\""}], "]"}]}], "]"}]], "Input",
 $CellContext`InitializationGroup -> False],

Cell[BoxData[
 StyleBox[
  RowBox[{"Button", "[", 
   RowBox[{"\"\<Export Flatness statistics TXT file.\>\"", ",", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"fileinS", "<>", "\"\<_CCD_stat_report.txt\>\""}], ",", 
      "statreport", ",", "\"\<TEXT\>\""}], "]"}]}], "]"}],
  FontColor->RGBColor[1, 0, 1]]], "Input",
 $CellContext`InitializationGroup -> False]
}, Open  ]],

Cell["99. END of main analysis program.", "Section",
 CellChangeTimes->{{3.661903534322407*^9, 3.661903553308926*^9}}],

Cell[CellGroupData[{

Cell["\<\
Remove obvious outliers from SUTdata if necessary. Skip this section if not \
necessary.\
\>", "Section"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"minS", ",", "medianS", ",", "maxS", ",", "stddevS"}], "}"}], "=", 
  
  RowBox[{"Operate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Min", "[", "#", "]"}], ",", 
       RowBox[{"Median", "[", "#", "]"}], ",", 
       RowBox[{"Max", "[", "#", "]"}], ",", 
       RowBox[{"StandardDeviation", "[", "#", "]"}]}], "}"}], "&"}], ",", 
    RowBox[{
     RowBox[{"SUTdata", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", "3", "}"}]}], "]"}], "]"}], "//", "Flatten"}], ",", 
    "0"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"MedianDeviation", "[", 
  RowBox[{
   RowBox[{"SUTdata", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", "3", "}"}]}], "]"}], "]"}], "//", "Flatten"}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"threshS", "=", 
  RowBox[{"3", "*", 
   RowBox[{"(", 
    RowBox[{"Min", "[", 
     RowBox[{
      RowBox[{"maxS", "-", "medianS"}], ",", 
      RowBox[{"medianS", "-", "minS"}]}], "]"}], ")"}], 
   RowBox[{"(*", 
    RowBox[{
    "Set", " ", "trim", " ", "threshold", " ", "to", " ", "3", " ", "times", 
     " ", "the", " ", "smaller", " ", "deviation", " ", "from", " ", "the", 
     " ", "median"}], "*)"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"threshS", "=", 
  RowBox[{"2", "*", "stddevS", 
   RowBox[{"(*", 
    RowBox[{
    "Set", " ", "trim", " ", "threshold", " ", "to", " ", "3", " ", "times", 
     " ", "the", " ", "smaller", " ", "deviation", " ", "from", " ", "the", 
     " ", "median"}], "*)"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Length", "[", "SUTdata", "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"testS", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{"testS", " ", "=", 
   RowBox[{"Reap", "[", " ", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"SUTdata", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}], "-", "medianS"}], "]"}], "<", 
         "threshS"}], "\[IndentingNewLine]", ",", 
        RowBox[{"Sow", "[", 
         RowBox[{"SUTdata", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "SUTdata", "]"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"testS", "=", 
   RowBox[{
    RowBox[{"Drop", "[", 
     RowBox[{"testS", ",", "1"}], "]"}], "//", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"#", ",", "2"}], "]"}], "&"}]}]}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{"Length", "[", "testS", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Length", "[", "testS", "]"}], "==", 
    RowBox[{"Length", "[", "SUTdata", "]"}]}], ",", 
   RowBox[{
   "MessageDialog", "[", "\"\<No points were trimmed from SUTdata\>\"", 
    "]"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "testS", "]"}], ">", "0"}], ",", 
     RowBox[{"SUTdata", "=", "testS"}], ",", 
     RowBox[{
     "MessageDialog", "[", "\"\<Problem with trimming SUTdata\>\"", "]"}]}], 
    "]"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "Abort", " ", "if", " ", "problem", " ", "trimming", " ", "SUT", " ", 
    "data"}], "*)"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"testS", "=."}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"splt", "=", 
  RowBox[{"ListPointPlot3D", "[", 
   RowBox[{"SUTdata", ",", 
    RowBox[{"PlotRange", "->", "All"}], ",", 
    RowBox[{"ViewPoint", "->", 
     RowBox[{"Dynamic", "[", "vp", "]"}]}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
    RowBox[{"ImageSize", "->", "400"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<Xval\>\"", ",", "\"\<Yval\>\"", ",", "\"\<\>\""}], "}"}]}],
     ",", 
    RowBox[{"PlotLabel", "->", 
     RowBox[{"fileinS", "<>", "\"\<\\nSUT-outliers\>\""}]}]}], 
   "]"}]}]], "Input"]
}, Closed]],

Cell["Junk", "Title"],

Cell[CellGroupData[{

Cell["Generate output statistics here", "Section",
 CellChangeTimes->{{3.648335557622508*^9, 3.648335573716289*^9}}],

Cell["qtableF is the flatness data", "Text",
 CellChangeTimes->{{3.648336897535068*^9, 3.6483369139103317`*^9}}],

Cell[BoxData["qtableF"], "Input",
 CellChangeTimes->{{3.648335578641897*^9, 3.6483355831306887`*^9}}],

Cell[BoxData["sigmaF"], "Input",
 CellChangeTimes->{{3.648336970226898*^9, 3.648336975623205*^9}}],

Cell[BoxData[{
 RowBox[{"qF100", "=", 
  RowBox[{
   RowBox[{"qtableF", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "2"}], "]"}], "]"}], "-", 
   RowBox[{"qtableF", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}]}], "\n", 
 RowBox[{"qF99", "=", 
  RowBox[{
   RowBox[{"qtableF", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "2"}], "]"}], "]"}], "-", 
   RowBox[{"qtableF", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "2"}], "]"}], "]"}]}]}], "\n", 
 RowBox[{"qF95", "=", 
  RowBox[{
   RowBox[{"qtableF", "[", 
    RowBox[{"[", 
     RowBox[{"4", ",", "2"}], "]"}], "]"}], "-", 
   RowBox[{"qtableF", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "4"}], ",", "2"}], "]"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.648337078578689*^9, 3.648337168051757*^9}, 
   3.648337578642981*^9}],

Cell["qtableABSZ is the absolute height data", "Text",
 CellChangeTimes->{{3.648336935597459*^9, 3.64833696324123*^9}}],

Cell[BoxData["qtableABSZ"], "Input",
 CellChangeTimes->{{3.648335590381228*^9, 3.648335592381548*^9}, {
   3.6483358429944267`*^9, 3.648335852736432*^9}, 3.6483359818599052`*^9}],

Cell[BoxData["sigmaS"], "Input",
 CellChangeTimes->{{3.648336986465461*^9, 3.648336989362163*^9}}],

Cell[BoxData[{
 RowBox[{"qtableABSZ100", "=", 
  RowBox[{
   RowBox[{"qtableABSZ", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "2"}], "]"}], "]"}], "-", 
   RowBox[{"qtableABSZ", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"qtableABSZ99", "=", 
  RowBox[{
   RowBox[{"qtableABSZ", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "2"}], "]"}], "]"}], "-", 
   RowBox[{"qtableABSZ", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "2"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"qtableABSZ95", "=", 
  RowBox[{
   RowBox[{"qtableABSZ", "[", 
    RowBox[{"[", 
     RowBox[{"4", ",", "2"}], "]"}], "]"}], "-", 
   RowBox[{"qtableABSZ", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "4"}], ",", "2"}], "]"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.648337388134709*^9, 3.648337405749495*^9}, {
  3.6483374730921173`*^9, 3.648337511820108*^9}}]
}, Closed]],

Cell["Execute following after 1.0 Initialize clean.", "Text"],

Cell[BoxData[
 RowBox[{"NotebookLocate", "[", "\"\<Start after Init\>\"", "]"}]], "Input"]
},
CellGrouping->Manual,
WindowSize->{779, 722},
WindowMargins->{{-1401, Automatic}, {-6, Automatic}},
ShowCellTags->True,
FrontEndVersion->"10.4 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 11, \
2016)",
StyleDefinitions->"MyStyle01.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "data ready"->{
  Cell[31157, 965, 107, 2, 45, "Subsubsection",
   CellTags->"data ready"]},
 "pick MST file num"->{
  Cell[19270, 585, 132, 2, 51, "Subsubsection",
   CellTags->"pick MST file num"]},
 "REFdata iterate restart"->{
  Cell[81366, 2455, 155, 2, 51, "Subsubsection",
   CellTags->"REFdata iterate restart"]},
 "Start after Init"->{
  Cell[4638, 138, 285, 4, 53, "Section",
   CellTags->"Start after Init"]},
 "XY range restriction start"->{
  Cell[34332, 1072, 228, 5, 51, "Subsubsection",
   CellTags->"XY range restriction start"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"data ready", 142859, 4269},
 {"pick MST file num", 142960, 4272},
 {"REFdata iterate restart", 143074, 4275},
 {"Start after Init", 143188, 4278},
 {"XY range restriction start", 143297, 4281}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 61, 0, 125, "Title"],
Cell[621, 22, 32, 0, 27, "Subsubtitle"],
Cell[656, 24, 108, 1, 63, "Subtitle"],
Cell[767, 27, 50, 0, 63, "Subtitle"],
Cell[820, 29, 488, 9, 153, "Subsubtitle"],
Cell[1311, 40, 323, 7, 89, "Subtitle"],
Cell[CellGroupData[{
Cell[1659, 51, 157, 3, 72, "Section"],
Cell[CellGroupData[{
Cell[1841, 58, 924, 24, 70, "Input"],
Cell[2768, 84, 1640, 41, 70, "Input"],
Cell[4411, 127, 114, 2, 70, "Input"],
Cell[4528, 131, 61, 1, 70, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[4638, 138, 285, 4, 53, "Section",
 CellTags->"Start after Init"],
Cell[4926, 144, 156, 2, 42, "Text"],
Cell[5085, 148, 360, 7, 42, "Text"],
Cell[5448, 157, 387, 10, 74, "Input"],
Cell[5838, 169, 161, 4, 26, "Input"],
Cell[6002, 175, 171, 4, 26, "Input"],
Cell[6176, 181, 482, 14, 42, "Input",
 InitializationCell->True],
Cell[6661, 197, 442, 12, 58, "Input"],
Cell[7106, 211, 110, 2, 26, "Input"],
Cell[7219, 215, 147, 2, 26, "Input"],
Cell[7369, 219, 152, 2, 26, "Input"],
Cell[CellGroupData[{
Cell[7546, 225, 141, 3, 40, "Subsubsection"],
Cell[7690, 230, 759, 25, 103, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8486, 260, 464, 7, 40, "Subsubsection"],
Cell[8953, 269, 294, 8, 26, "Input"],
Cell[9250, 279, 269, 5, 42, "Text"],
Cell[9522, 286, 1619, 42, 204, "Input"],
Cell[CellGroupData[{
Cell[11166, 332, 265, 5, 40, "Subsubsection"],
Cell[11434, 339, 983, 24, 136, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12454, 368, 392, 8, 66, "Subsubsection"],
Cell[12849, 378, 444, 9, 26, "Input"],
Cell[13296, 389, 351, 8, 26, "Input"],
Cell[13650, 399, 539, 16, 26, "Input"],
Cell[14192, 417, 81, 1, 42, "Text"],
Cell[14276, 420, 300, 8, 26, "Input"],
Cell[14579, 430, 185, 5, 25, "Input"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[14825, 442, 212, 3, 42, "Section"],
Cell[15040, 447, 170, 4, 26, "Input"],
Cell[15213, 453, 263, 6, 58, "Input"],
Cell[15479, 461, 160, 3, 26, "Input"],
Cell[15642, 466, 155, 4, 42, "Text"],
Cell[15800, 472, 187, 4, 26, "Input"],
Cell[15990, 478, 281, 7, 26, "Input"],
Cell[16274, 487, 244, 7, 26, "Input"],
Cell[16521, 496, 388, 10, 26, "Input"],
Cell[16912, 508, 177, 4, 51, "Subsection"],
Cell[17092, 514, 121, 3, 23, "Input"],
Cell[17216, 519, 228, 6, 26, "Input"],
Cell[CellGroupData[{
Cell[17469, 529, 172, 4, 51, "Subsection"],
Cell[17644, 535, 357, 6, 72, "Text"],
Cell[18004, 543, 160, 3, 26, "Input"],
Cell[18167, 548, 460, 13, 135, "Input"],
Cell[18630, 563, 615, 18, 42, "Input"],
Cell[CellGroupData[{
Cell[19270, 585, 132, 2, 51, "Subsubsection",
 CellTags->"pick MST file num"],
Cell[19405, 589, 107, 2, 25, "Input"],
Cell[19515, 593, 187, 4, 26, "Input"],
Cell[CellGroupData[{
Cell[19727, 601, 524, 14, 106, "Input"],
Cell[20254, 617, 543, 13, 26, "Input"],
Cell[20800, 632, 375, 11, 58, "Input"]
}, Open  ]],
Cell[21190, 646, 350, 9, 58, "Input"],
Cell[21543, 657, 115, 1, 42, "Text"],
Cell[21661, 660, 239, 6, 26, "Input"],
Cell[21903, 668, 160, 3, 26, "Input"],
Cell[CellGroupData[{
Cell[22088, 675, 94, 1, 42, "Text"],
Cell[22185, 678, 342, 9, 42, "Input"],
Cell[22530, 689, 450, 12, 42, "Input"],
Cell[22983, 703, 115, 2, 26, "Input"],
Cell[23101, 707, 160, 3, 26, "Input"]
}, Open  ]],
Cell[23276, 713, 60, 1, 42, "Text"],
Cell[CellGroupData[{
Cell[23361, 718, 149, 2, 42, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[23513, 722, 161, 3, 26, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[23677, 727, 165, 3, 26, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[23845, 732, 245, 5, 42, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[24093, 739, 1060, 31, 58, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[25156, 772, 235, 6, 26, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[25394, 780, 202, 5, 26, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[25599, 787, 343, 10, 26, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[25945, 799, 377, 11, 26, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[26325, 812, 474, 13, 42, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[26802, 827, 339, 8, 26, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[27144, 837, 338, 9, 26, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[27485, 848, 354, 7, 42, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[27842, 857, 545, 17, 26, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[28390, 876, 194, 4, 42, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[28587, 882, 493, 10, 42, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[29083, 894, 166, 4, 25, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[29252, 900, 1132, 33, 58, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[30387, 935, 162, 3, 26, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[30552, 940, 176, 4, 25, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]],
Cell[30743, 947, 211, 7, 26, "Input"]
}, Open  ]],
Cell[30969, 957, 163, 4, 40, "Subsubsection"],
Cell[CellGroupData[{
Cell[31157, 965, 107, 2, 45, "Subsubsection",
 CellTags->"data ready"],
Cell[31267, 969, 318, 9, 26, "Input"],
Cell[31588, 980, 86, 1, 42, "Text"],
Cell[31677, 983, 653, 20, 58, "Input"],
Cell[32333, 1005, 419, 10, 26, "Input"],
Cell[32755, 1017, 187, 4, 26, "Input"],
Cell[32945, 1023, 397, 11, 57, "Input"],
Cell[33345, 1036, 144, 4, 26, "Input"],
Cell[33492, 1042, 184, 4, 42, "Input"]
}, Open  ]],
Cell[33691, 1049, 82, 1, 42, "Text"],
Cell[33776, 1052, 418, 13, 26, "Input"],
Cell[CellGroupData[{
Cell[34219, 1069, 110, 1, 51, "Subsection"],
Cell[34332, 1072, 228, 5, 51, "Subsubsection",
 CellTags->"XY range restriction start"],
Cell[34563, 1079, 231, 5, 54, "Text"],
Cell[34797, 1086, 637, 20, 58, "Input"],
Cell[35437, 1108, 845, 27, 74, "Input"],
Cell[36285, 1137, 311, 9, 26, "Input"],
Cell[36599, 1148, 161, 3, 26, "Input"],
Cell[36763, 1153, 143, 3, 42, "Text"],
Cell[36909, 1158, 424, 11, 42, "Input"],
Cell[37336, 1171, 114, 2, 26, "Input"],
Cell[37453, 1175, 670, 15, 58, "Input"],
Cell[38126, 1192, 404, 10, 58, "Input"],
Cell[38533, 1204, 519, 12, 58, "Input"],
Cell[CellGroupData[{
Cell[39077, 1220, 167, 4, 40, "Subsubsection"],
Cell[39247, 1226, 280, 9, 26, "Input"],
Cell[39530, 1237, 191, 4, 42, "Text"],
Cell[39724, 1243, 278, 9, 26, "Input"],
Cell[40005, 1254, 1656, 47, 106, "Input"],
Cell[41664, 1303, 108, 1, 42, "Text"],
Cell[41775, 1306, 685, 17, 58, "Input"]
}, Open  ]],
Cell[42475, 1326, 188, 4, 42, "Text"],
Cell[42666, 1332, 242, 5, 26, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42945, 1342, 197, 4, 40, "Subsubsection"],
Cell[43145, 1348, 254, 8, 26, "Input"],
Cell[43402, 1358, 275, 9, 26, "Input"],
Cell[43680, 1369, 274, 9, 26, "Input"],
Cell[43957, 1380, 278, 9, 26, "Input"],
Cell[44238, 1391, 296, 6, 26, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[44595, 1404, 191, 2, 72, "Section"],
Cell[44789, 1408, 214, 6, 25, "Input"],
Cell[45006, 1416, 2211, 62, 234, "Input"],
Cell[47220, 1480, 650, 16, 58, "Input"],
Cell[47873, 1498, 187, 4, 26, "Input"],
Cell[48063, 1504, 717, 17, 58, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48817, 1526, 238, 5, 95, "Section"],
Cell[CellGroupData[{
Cell[49080, 1535, 143, 3, 40, "Subsubsection"],
Cell[49226, 1540, 444, 13, 42, "Input"],
Cell[49673, 1555, 280, 8, 26, "Input"],
Cell[49956, 1565, 173, 5, 26, "Input"],
Cell[50132, 1572, 680, 17, 58, "Input"],
Cell[50815, 1591, 429, 11, 42, "Input"],
Cell[51247, 1604, 106, 2, 26, "Input"],
Cell[CellGroupData[{
Cell[51378, 1610, 269, 6, 57, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[51650, 1618, 1054, 31, 74, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[52707, 1651, 458, 15, 26, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[53168, 1668, 479, 11, 42, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[53650, 1681, 471, 12, 42, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[54124, 1695, 133, 1, 42, "Text"],
Cell[54260, 1698, 177, 5, 26, "Input"],
Cell[CellGroupData[{
Cell[54462, 1707, 136, 2, 42, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[54601, 1711, 217, 4, 26, "Input"],
Cell[54821, 1717, 486, 14, 58, "Input"],
Cell[55310, 1733, 151, 2, 42, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[55464, 1737, 2490, 62, 218, "Input"],
Cell[57957, 1801, 213, 5, 26, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[58173, 1808, 2090, 53, 202, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[60266, 1863, 683, 20, 42, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]],
Cell[60964, 1886, 242, 5, 42, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[61209, 1893, 1749, 52, 170, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[62961, 1947, 2506, 64, 154, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[65470, 2013, 106, 2, 26, "Input"],
Cell[65579, 2017, 410, 10, 58, "Input"],
Cell[65992, 2029, 608, 14, 58, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[66603, 2045, 2320, 59, 154, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[68926, 2106, 393, 10, 42, "Input"],
Cell[69322, 2118, 676, 15, 58, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[70001, 2135, 213, 4, 26, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[70217, 2141, 2441, 63, 138, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[72661, 2206, 299, 6, 26, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[72963, 2214, 377, 9, 42, "Input"],
Cell[73343, 2225, 611, 14, 58, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[73957, 2241, 402, 10, 26, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[74362, 2253, 250, 6, 26, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[74615, 2261, 334, 9, 42, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[74952, 2272, 448, 11, 42, "Input"],
Cell[75403, 2285, 657, 15, 58, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]],
Cell[76075, 2303, 291, 7, 26, "Input"],
Cell[76369, 2312, 442, 10, 42, "Input"],
Cell[76814, 2324, 2211, 57, 138, "Input"],
Cell[79028, 2383, 178, 4, 26, "Input"],
Cell[79209, 2389, 419, 10, 42, "Input"],
Cell[79631, 2401, 600, 14, 58, "Input"]
}, Open  ]],
Cell[80246, 2418, 91, 1, 72, "Section"],
Cell[80340, 2421, 160, 3, 23, "Input"],
Cell[80503, 2426, 172, 4, 95, "Section"],
Cell[80678, 2432, 127, 3, 22, "Input"],
Cell[80808, 2437, 296, 6, 26, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81141, 2448, 222, 5, 95, "Section"],
Cell[81366, 2455, 155, 2, 51, "Subsubsection",
 CellTags->"REFdata iterate restart"],
Cell[81524, 2459, 1001, 30, 55, "Input"],
Cell[82528, 2491, 220, 6, 26, "Input"],
Cell[82751, 2499, 643, 16, 58, "Input"],
Cell[83397, 2517, 187, 4, 26, "Input"],
Cell[83587, 2523, 210, 6, 26, "Input"],
Cell[83800, 2531, 85, 1, 40, "Subsubsection"],
Cell[83888, 2534, 146, 4, 22, "Input"],
Cell[84037, 2540, 253, 7, 26, "Input"],
Cell[84293, 2549, 1276, 39, 138, "Input"],
Cell[85572, 2590, 1366, 33, 90, "Input"],
Cell[86941, 2625, 222, 6, 26, "Input"],
Cell[87166, 2633, 187, 4, 26, "Input"],
Cell[87356, 2639, 101, 1, 42, "Text"],
Cell[87460, 2642, 448, 13, 42, "Input"],
Cell[87911, 2657, 281, 8, 26, "Input"],
Cell[88195, 2667, 96, 2, 26, "Input"],
Cell[88294, 2671, 645, 16, 42, "Input"],
Cell[88942, 2689, 1015, 30, 90, "Input"],
Cell[89960, 2721, 179, 4, 26, "Input"],
Cell[90142, 2727, 578, 15, 58, "Input"],
Cell[90723, 2744, 386, 9, 42, "Input"],
Cell[91112, 2755, 610, 14, 58, "Input"],
Cell[91725, 2771, 260, 7, 26, "Input"],
Cell[91988, 2780, 114, 1, 42, "Text"],
Cell[92105, 2783, 1292, 40, 138, "Input"],
Cell[93400, 2825, 1607, 39, 106, "Input"],
Cell[95010, 2866, 216, 4, 26, "Input"],
Cell[95229, 2872, 225, 6, 26, "Input"],
Cell[95457, 2880, 390, 9, 42, "Input"],
Cell[95850, 2891, 569, 13, 58, "Input"],
Cell[96422, 2906, 1663, 42, 106, "Input"],
Cell[98088, 2950, 187, 4, 26, "Input"],
Cell[98278, 2956, 370, 8, 42, "Input"],
Cell[98651, 2966, 556, 13, 42, "Input"],
Cell[99210, 2981, 152, 4, 26, "Input"],
Cell[99365, 2987, 432, 11, 42, "Input"],
Cell[99800, 3000, 391, 9, 42, "Input"],
Cell[100194, 3011, 627, 14, 58, "Input"],
Cell[100824, 3027, 94, 1, 40, "Subsubsection"],
Cell[100921, 3030, 96, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[101042, 3035, 136, 2, 42, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[101181, 3039, 218, 4, 26, "Input"],
Cell[101402, 3045, 128, 3, 26, "Input"],
Cell[101533, 3050, 670, 16, 58, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[102206, 3068, 151, 2, 42, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[102360, 3072, 2039, 57, 106, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[104402, 3131, 1320, 37, 74, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[105725, 3170, 683, 20, 42, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]],
Cell[106423, 3193, 177, 4, 26, "Input"],
Cell[106603, 3199, 764, 20, 90, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107404, 3224, 268, 5, 95, "Section"],
Cell[107675, 3231, 79, 1, 26, "Input"],
Cell[107757, 3234, 311, 6, 26, "Input"],
Cell[108071, 3242, 1087, 31, 106, "Input"],
Cell[109161, 3275, 610, 14, 42, "Input"],
Cell[109774, 3291, 383, 9, 42, "Input"],
Cell[110160, 3302, 611, 14, 58, "Input"],
Cell[110774, 3318, 411, 11, 26, "Input"],
Cell[111188, 3331, 173, 5, 26, "Input"],
Cell[111364, 3338, 300, 7, 26, "Input"],
Cell[111667, 3347, 187, 4, 26, "Input"],
Cell[111857, 3353, 387, 9, 42, "Input"],
Cell[112247, 3364, 611, 14, 58, "Input"],
Cell[112861, 3380, 1005, 27, 90, "Input"],
Cell[113869, 3409, 237, 7, 26, "Input"],
Cell[114109, 3418, 1299, 32, 90, "Input"],
Cell[115411, 3452, 387, 9, 42, "Input"],
Cell[115801, 3463, 644, 15, 58, "Input"],
Cell[116448, 3480, 318, 9, 26, "Input"],
Cell[116769, 3491, 237, 6, 26, "Input"],
Cell[CellGroupData[{
Cell[117031, 3501, 1594, 49, 154, "Input"],
Cell[118628, 3552, 112, 2, 26, "Input"]
}, Open  ]],
Cell[118755, 3557, 2039, 51, 122, "Input"],
Cell[120797, 3610, 395, 9, 42, "Input"],
Cell[121195, 3621, 648, 15, 58, "Input"],
Cell[121846, 3638, 2168, 55, 138, "Input"],
Cell[124017, 3695, 1208, 37, 90, "Input"],
Cell[125228, 3734, 113, 1, 42, "Text"],
Cell[125344, 3737, 432, 10, 42, "Input"],
Cell[125779, 3749, 610, 14, 58, "Input"],
Cell[126392, 3765, 2201, 58, 122, "Input"],
Cell[128596, 3825, 187, 4, 26, "Input"],
Cell[128786, 3831, 375, 9, 42, "Input"],
Cell[129164, 3842, 541, 12, 42, "Input"],
Cell[129708, 3856, 477, 12, 42, "Input"],
Cell[130188, 3870, 608, 15, 58, "Input"],
Cell[130799, 3887, 94, 1, 42, "Text"],
Cell[130896, 3890, 330, 7, 72, "Text"],
Cell[131229, 3899, 548, 16, 42, "Input"],
Cell[131780, 3917, 244, 5, 26, "Input"],
Cell[132027, 3924, 281, 7, 26, "Input"],
Cell[132311, 3933, 70, 1, 25, "Input"],
Cell[132384, 3936, 468, 12, 42, "Input"],
Cell[132855, 3950, 187, 4, 26, "Input"],
Cell[133045, 3956, 1261, 26, 185, "Input"],
Cell[134309, 3984, 177, 4, 26, "Input"],
Cell[134489, 3990, 286, 7, 26, "Input"],
Cell[134778, 3999, 374, 9, 42, "Input"]
}, Open  ]],
Cell[135167, 4011, 118, 1, 72, "Section"],
Cell[CellGroupData[{
Cell[135310, 4016, 115, 3, 65, "Section"],
Cell[135428, 4021, 615, 19, 70, "Input"],
Cell[136046, 4042, 216, 7, 70, "Input"],
Cell[136265, 4051, 449, 12, 70, "Input"],
Cell[136717, 4065, 301, 7, 70, "Input"],
Cell[137021, 4074, 65, 1, 70, "Input"],
Cell[137089, 4077, 1035, 32, 70, "Input"],
Cell[138127, 4111, 63, 1, 70, "Input"],
Cell[138193, 4114, 275, 8, 70, "Input"],
Cell[138471, 4124, 441, 14, 70, "Input"],
Cell[138915, 4140, 67, 2, 70, "Input"],
Cell[138985, 4144, 599, 15, 70, "Input"]
}, Closed]],
Cell[139599, 4162, 21, 0, 51, "Title"],
Cell[CellGroupData[{
Cell[139645, 4166, 116, 1, 72, "Section"],
Cell[139764, 4169, 112, 1, 70, "Text"],
Cell[139879, 4172, 101, 1, 70, "Input"],
Cell[139983, 4175, 98, 1, 70, "Input"],
Cell[140084, 4178, 870, 29, 70, "Input"],
Cell[140957, 4209, 119, 1, 70, "Text"],
Cell[141079, 4212, 178, 2, 70, "Input"],
Cell[141260, 4216, 98, 1, 70, "Input"],
Cell[141361, 4219, 971, 29, 70, "Input"]
}, Closed]],
Cell[142347, 4251, 61, 0, 39, "Text"],
Cell[142411, 4253, 90, 1, 26, "Input"]
}
]
*)

